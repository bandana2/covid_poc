{"version":3,"sources":["Loading.js","ActualForecast.js","KPIViews.js","Ms.js","Dashboard.js","Page1.js","Page2.js","menuOptions.js","sideBar.js","footer.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","Segment","Dimmer","active","inverted","Loader","content","Image","src","am4core","am4themes_animated","useStyles","makeStyles","theme","root","maxWidth","header","background","borderRadius","border","color","height","padding","boxShadow","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","button","textAlign","data1","gql","CreateChart","props","chart","useRef","classes","itemtitle","console","log","btnname","useLayoutEffect","x","am4charts","paddingRight","data","dateAxis","xAxes","push","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","range","axisRanges","stroke","colors","getIndex","strokeOpacity","seriesRange","createSeriesRange","contents","strokeDasharray","strokeWidth","bullet","fill","states","copyFrom","zoomOutButton","minX","adapter","add","minY","target","maxY","plotContainer","maxHeight","maxX","min_act","reduce","olddt","newdt","Date","Type","max_act","JSON","stringify","date","endDate","current","dispose","Card","className","CardHeader","title","subheader","Divider","CardContent","id","style","width","ActualForecast","useQuery","loading","error","useState","state","setState","onClickHandler","ButtonGroup","aria-label","Button","onClick","actuals","flexGrow","paper","spacing","palette","text","secondary","margin","data2","Griditem","Grid","container","justify","item","xs","sm","chtname","value","capacity","component","chartContainer","createChild","y","circle","circleMask","waves","mask","horizontalCenter","waveHeight","waveLength","events","on","smallerSize","Math","min","pixelWidth","pixelHeight","radius","max","labelRadius","capacityLabel","path","moveTo","arcToPoint","locationOnPath","pixelRadius","animate","property","to","from","elasticOut","setValue","label","formattedValue","numberFormatter","format","toUpperCase","fontSize","KPIViews","headermain","mobility","chartcurr","titlename","minBulletDistance","fillOpacity","pointerOrientation","cornerRadius","pattern","rotation","gap","replace","CreateChartsummary","hiddenState","properties","opacity","categoryAxis","category","minGridDistance","categoryX","columns","hoverState","tension","dataItem","index","MS","placeRender","mobility_summary","Object","keys","slice","map","prop","key","Dashboard","Ms","Page1","policyindex","Page2","policy_index","PolicyIndex","am4plugins_forceDirected","networkSeries","name","children","linkWith","links","distance","nodes","outerCircle","scale","hideOversized","truncate","minRadius","manyBodyStrength","mainContainer","layout","usData","maleChart","parse","maleCategoryAxis","inversed","maleValueAxis","strictMinMax","dateFormatter","dateFormat","maleSeries","valueX","categoryY","femaleChart","paddingLeft","femaleCategoryAxis","opposite","femaleValueAxis","minLabelPosition","femaleSeries","mainListItems","option","ListItem","href","ListItemIcon","ListItemText","primary","ListSubheader","display","toolbar","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","overflow","paddingBottom","flexDirection","fixedHeight","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","variant","noWrap","Badge","badgeContent","Drawer","List","Copyright","align","Link","getFullYear","Footer","Box","pt","App","Container","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","ReactDOM","render","Fragment","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f26f19e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    {/* <Segment>\r\n      <Dimmer active>\r\n        <Loader content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment> */}\r\n\r\n    <Segment>\r\n      <Dimmer active inverted>\r\n        <Loader inverted content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment>\r\n  </div>\r\n)\r\n\r\nexport default Loading","import React, { useRef, useLayoutEffect,useState } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n\r\n    },\r\n    header:{\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    button:{\r\n      textAlign:\"left\"\r\n    }\r\n  }));\r\n\r\n\r\nconst data1=  gql`   \r\n    query{\r\n           actuals{\r\n               Date,Confirmed,Recovered,Deceased,Type\r\n             }\r\n         }\r\n       `\r\n\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  const classes = useStyles();\r\n  let itemtitle=''\r\n  console.log(`In CreateChart: ${props.btnname}`)\r\n  if (props.btnname==='Confirmed') {\r\n   itemtitle =\"Covid Confirmed Cases Trend\"\r\n  } else if(props.btnname==='Recovered'){\r\n   itemtitle=\"Covid Recovered Cases Trend\"\r\n  } else {\r\n   itemtitle=\"Covid Death Cases Trend\"\r\n  }\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n   \r\n    x.paddingRight = 20;\r\n\r\n    // let data = [];\r\n    // let visits = 10;\r\n\r\n    // for (let i = 1; i < 366; i++) {\r\n    //   visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n    //   data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n    // }\r\n\r\n    x.data = props.data;\r\n\r\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = x.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"Date\";\r\n    series.dataFields.valueY = props.btnname;\r\n    series.tooltipText = \"{valueY.value}\";\r\n    x.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    x.scrollbarX = scrollbarX;\r\n    var range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\n    range.grid.stroke = x.colors.getIndex(0);\r\n    range.grid.strokeOpacity = 1;\r\n   \r\n    var seriesRange = dateAxis.createSeriesRange(series);\r\n    seriesRange.contents.strokeDasharray = \"2,3\";\r\n    seriesRange.contents.stroke = x.colors.getIndex(8);\r\n    seriesRange.contents.strokeWidth = 1;\r\n\r\nrange.bullet = new am4core.ResizeButton();\r\nrange.bullet.background.fill = x.colors.getIndex(0);\r\nrange.bullet.background.states.copyFrom(x.zoomOutButton.background.states);\r\nrange.bullet.minX = 0;\r\nrange.bullet.adapter.add(\"minY\", function(minY, target) {\r\n  target.maxY = x.plotContainer.maxHeight;\r\n  target.maxX = x.plotContainer.maxWidth;\r\n  return x.plotContainer.maxHeight;\r\n})\r\n\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\nlet min_act=props.data.reduce(\r\n  (olddt,newdt)=> \r\n  (new Date(olddt.Date) && olddt.Type==='Acutals') > (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n  ? olddt:newdt)\r\n\r\n\r\n  let max_act=props.data.reduce(\r\n    (olddt,newdt)=> \r\n    (new Date(olddt.Date) && olddt.Type==='Acutals') < (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n    ? olddt:newdt)\r\n  \r\nconsole.log(`min_act:${JSON.stringify(min_act)} mix_act${JSON.stringify(max_act)}`)\r\n\r\nrange.date = new Date(min_act.Date);\r\nseriesRange.date = new Date(min_act.Date);\r\nseriesRange.endDate = new Date(max_act.Date)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    chart.current = x;\r\n\r\n    return () => {\r\n      x.dispose();\r\n    };\r\n  },[props.btnname,props.data] );\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n  // style={{Color: \"#000\", Background: \"blue\"}}\r\n        title={itemtitle}\r\n        subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n const  ActualForecast = () => {\r\n    const { loading, error, data } = useQuery(data1);\r\n const [state,setState]= useState('Confirmed');\r\n\r\n const classes = useStyles();\r\n\r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n   \r\n    const onClickHandler = (btnname,data) =>{\r\n      setState(btnname)\r\n      // console.log(`btn clicked ${btnname} ${JSON.stringify(data)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div>\r\n     <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n        <Button onClick={()=>onClickHandler(\"Confirmed\",data.actuals)}>Confirmed</Button>\r\n        <Button onClick={()=>onClickHandler(\"Recovered\",data.actuals)}>Recovered</Button>\r\n        <Button onClick={()=>onClickHandler(\"Deceased\",data.actuals)}>Deceased</Button>\r\n      </ButtonGroup>\r\n      <CreateChart data={data.actuals} btnname={state} />\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default ActualForecast;","import React, { useRef, useLayoutEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport './App.css'\r\n// import Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        // background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        // color: 'white',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\nconst data2=  gql`   \r\n    query{\r\n           actuals{\r\n               Date,Confirmed,Recovered,Deceased,Type\r\n             }\r\n         }\r\n       `\r\nfunction Griditem(props){\r\n    \r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}\r\n          justify=\"center\"\r\n          >\r\n           \r\n            <Grid item xs={6} sm={2} >\r\n            {/* <Paper className={classes.paper} ><CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> </Paper> */}\r\n            <CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> \r\n            </Grid>\r\n            <Grid item xs={6} sm={2}>\r\n              {/* <Paper className={classes.paper} ><CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/></Paper> */}\r\n              <CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/>\r\n            </Grid>\r\n            <Grid item xs={6} sm={2}>\r\n              {/* <Paper className={classes.paper} ><CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/></Paper> */}\r\n              <CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </div>\r\n      );\r\n}\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  \r\n  useLayoutEffect(() => {\r\n   \r\n    var capacity = 1000;\r\n    var value = props.value;\r\n    var circleSize = 0.8;\r\n    \r\n    var component = am4core.create(props.chtname, am4core.Container)\r\n    component.width = am4core.percent(100);\r\n    component.height = am4core.percent(100);\r\n    \r\n    var chartContainer = component.createChild(am4core.Container);\r\n    chartContainer.x = am4core.percent(50)\r\n    chartContainer.y = am4core.percent(50)\r\n    \r\n    var circle = chartContainer.createChild(am4core.Circle);\r\n    circle.fill = am4core.color(\"#f8f9fa\");\r\n    \r\n    var circleMask = chartContainer.createChild(am4core.Circle);\r\n    \r\n    var waves = chartContainer.createChild(am4core.WavedRectangle);\r\n    waves.fill = am4core.color(props.color);\r\n    waves.mask = circleMask;\r\n    waves.horizontalCenter = \"middle\";\r\n    waves.waveHeight = 10;\r\n    waves.waveLength = 30;\r\n    waves.y = 500;\r\n    circleMask.y = -500;\r\n    \r\n    component.events.on(\"maxsizechanged\", function(){\r\n      var smallerSize = Math.min(component.pixelWidth, component.pixelHeight);  \r\n      var radius = smallerSize * circleSize / 2;\r\n    \r\n      circle.radius = radius;\r\n      circleMask.radius = radius;\r\n      waves.height = smallerSize;\r\n      waves.width = Math.max(component.pixelWidth, component.pixelHeight);  \r\n    \r\n      // capacityLabel.y = radius;\r\n    \r\n      var labelRadius = radius + 15\r\n    \r\n      capacityLabel.path = am4core.path.moveTo({x:-labelRadius, y:0}) + am4core.path.arcToPoint({x:labelRadius, y:0}, labelRadius, labelRadius);\r\n      capacityLabel.locationOnPath = 0.5;\r\n    \r\n      setValue(value);\r\n    })\r\n    \r\n    \r\n    function setValue(value){\r\n       var y = - circle.radius - waves.waveHeight + (1 - value / capacity) * circle.pixelRadius * 2;\r\n       waves.animate([{property:\"y\", to:y}, {property:\"waveHeight\", to:10, from:15}, {property:\"x\", from:-50, to:0}], 5000, am4core.ease.elasticOut);\r\n       circleMask.animate([{property:\"y\", to:-y},{property:\"x\", from:50, to:0}], 5000, am4core.ease.elasticOut);\r\n    }\r\n    \r\n    \r\n    var label = chartContainer.createChild(am4core.Label)\r\n    var formattedValue = component.numberFormatter.format(value, \"#.#a\");\r\n    formattedValue = formattedValue.toUpperCase();\r\n    \r\n    label.text = value ;\r\n    label.fill = am4core.color(\"#03a9f4\");\r\n    label.fontSize = 30;\r\n    label.horizontalCenter = \"middle\";\r\n    \r\n    \r\n    var capacityLabel = chartContainer.createChild(am4core.Label)\r\n    \r\n    var formattedCapacity = component.numberFormatter.format(capacity, \"#.#a\").toUpperCase();;\r\n    console.log(props.title)\r\n    capacityLabel.text = props.title;\r\n    capacityLabel.fill = am4core.color(\"#1769aa\");\r\n    capacityLabel.fontSize = 20;\r\n    capacityLabel.textAlign = \"middle\";\r\n    capacityLabel.padding(0,0,0,0);\r\n    chart.current = component;\r\n    return () => {\r\n        component.dispose();\r\n    };\r\n  }, [props.data,props.chtname]);\r\n\r\n  return (\r\n   \r\n  <div id={props.chtname}    \r\n  //  style={{ width: \"100%\", height: \"250\" }}\r\n  >\r\n    </div>\r\n  );\r\n}\r\n\r\n const  KPIViews = () => {\r\n    const { loading, error, data } = useQuery(data2);\r\n  \r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error( error);\r\n      return  <div>Error</div>;\r\n    }\r\n    return <div><Griditem  data={data.actuals}/></div>\r\n  };\r\n\r\n \r\n\r\nexport default KPIViews;\r\nexport {Griditem}","import React, { useRef, useLayoutEffect,useState, useEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\n\r\nconst mobility=  gql`   \r\nquery{\r\n  mobility{\r\n         Date,Retail_Recreation,Grocery_Pharmacy,Parks,Transit_Stations,Workplaces,Residential\r\n       \r\n   }\r\n   mobility_summary{\r\n    Category,Value\r\n     }\r\n    }\r\n       `\r\n// const mobilitysummary=  gql`   \r\n//     query{\r\n//         mobility_summary{\r\n//             Category,Value\r\n//              }\r\n//          }\r\n//        `\r\n\r\nfunction CreateChart(props) {\r\n  const chartcurr = useRef(null);\r\n  const classes = useStyles();\r\n//   let itemtitle=''\r\n//   console.log(`In CreateChart: ${props.btnname}`)\r\n//   if (props.btnname==='Summary') {\r\n//    itemtitle =\"Latest Day Mobility Report\"\r\n//   } else {\r\n//    itemtitle=\"Mobility Report Trends\"\r\n//   }\r\n  useLayoutEffect(() => {\r\n    var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n\r\n    chart.width = am4core.percent(100);\r\n    chart.height = am4core.percent(100);\r\n    console.log(`titlename:${props.titlename}`)\r\n    \r\n// Add data\r\nchart.data = props.data;\r\nconsole.log(`chart.data[0]: ${JSON.stringify(chart.data[0].Date)}`)\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n// dateAxis.renderer.opposite = true;\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n// Create series\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = props.titlename;\r\nseries.dataFields.dateX = \"Date\";\r\nseries.strokeWidth = 1;\r\nseries.minBulletDistance = 10;\r\n// series.tooltipText = \"{valueY.value}\";\r\nseries.tooltipText =\"aa\"\r\nseries.fillOpacity = 0.1;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.fillOpacity = 0.5;\r\nseries.tooltip.label.padding(12, 12, 12, 12)\r\n\r\nvar seriesRange = dateAxis.createSeriesRange(series);\r\nseriesRange.contents.strokeDasharray = \"2,3\";\r\nseriesRange.contents.stroke = chart.colors.getIndex(8);\r\nseriesRange.contents.strokeWidth = 1;\r\n\r\nvar pattern = new am4core.LinePattern();\r\npattern.rotation = -45;\r\npattern.stroke = seriesRange.contents.stroke;\r\npattern.width = 100;\r\npattern.height = 100;\r\npattern.gap = 6;\r\nseriesRange.contents.fill = pattern;\r\nseriesRange.contents.fillOpacity = 0.5;\r\n\r\n// Add scrollbar\r\nchart.scrollbarX = new am4core.Scrollbar();\r\n\r\n// add range\r\nvar range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\nrange.grid.stroke = chart.colors.getIndex(0);\r\nrange.grid.strokeOpacity = 1;\r\n// range.bullet = new am4core.ResizeButton();\r\n// range.bullet.background.fill = chart.colors.getIndex(0);\r\n// range.bullet.background.states.copyFrom(chart.zoomOutButton.background.states);\r\n// range.bullet.minX = 0;\r\n// range.bullet.adapter.add(\"minY\", function(minY, target) {\r\n//   target.maxY = chart.plotContainer.maxHeight;\r\n//   target.maxX = chart.plotContainer.maxWidth;\r\n//   return chart.plotContainer.maxHeight;\r\n// })\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\n\r\n\r\n// var firstTime = new Date(chart.data[0].Date).getTime();\r\n// var lastTime = new Date(chart.data[chart.data.length - 1].Date).getTime();\r\n// var date = new Date(firstTime + (lastTime - firstTime) / 2);\r\n\r\n// range.date = date;\r\n\r\n// seriesRange.date = date;\r\n// seriesRange.endDate = new Date(chart.data[chart.data.length - 1].Date);\r\n\r\n    chartcurr.current = chart;\r\n\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  },[props.titlename,props.data]);\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n        title={props.titlename.replace(\"_\",\" \")}\r\n        \r\n        // subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"200px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateChartsummary(props) {\r\n    const chartcurr = useRef(null);\r\n    const classes = useStyles();\r\n    // let itemtitle=''\r\n    // console.log(`In CreateChart: ${props.btnname}`)\r\n    // if (props.btnname==='Summary') {\r\n    //  itemtitle =\"Latest Day Mobility Report\"\r\n    // } else {\r\n    //  itemtitle=\"Mobility Report Trends\"\r\n    // }\r\n    useLayoutEffect(() => {\r\n      var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n  \r\n      chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\r\n\r\n      chart.data = props.data;\r\n      \r\n      \r\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"Category\";\r\n      categoryAxis.renderer.minGridDistance = 40;\r\n      \r\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      \r\n      var series = chart.series.push(new am4charts.CurvedColumnSeries());\r\n      series.dataFields.categoryX = \"Category\";\r\n      series.dataFields.valueY = \"Value\";\r\n      series.tooltipText = \"{valueY.Value}\"\r\n      series.columns.template.strokeOpacity = 0;\r\n      \r\n      series.columns.template.fillOpacity = 0.75;\r\n      \r\n      var hoverState = series.columns.template.states.create(\"hover\");\r\n      hoverState.properties.fillOpacity = 1;\r\n      hoverState.properties.tension = 0.4;\r\n      \r\n      chart.cursor = new am4charts.XYCursor();\r\n      \r\n      // Add distinctive colors for each column using adapter\r\n      series.columns.template.adapter.add(\"fill\", function(fill, target) {\r\n        return chart.colors.getIndex(target.dataItem.index);\r\n      });\r\n      \r\n    //   chart.scrollbarX = new am4core.Scrollbar();\r\n    //   // chartcurr.current = chart;\r\n  \r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  }, [props.data,props.titlename]);\r\n\r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n          title={props.titlename.replace(\"_\",\" \")}\r\n          \r\n          // subheader=\"For the Year 2020\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n const  MS = (props) => {\r\n    const classes = useStyles();\r\n    const [state,setState]= useState(props.placeRender);\r\n    const { loading, error, data } = useQuery(mobility);\r\n    // const { loading, error, data } = useQuery(mobilitysummary);\r\n    console.log(`mobilitysummmary: ${error}`)\r\n   \r\n   \r\n    if (loading) {\r\n      return <div>< Loading/></div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n    console.log(`mobility data${JSON.stringify(data.mobility_summary)}`)\r\n    const onClickHandler = (btnname) =>{\r\n      setState(btnname)\r\n      console.log(`btn clicked ${btnname} ${JSON.stringify(data.mobility_summary)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div>\r\n     {/* <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n        <Button onClick={()=>onClickHandler(\"Summary\")}>Summery</Button>\r\n        <Button onClick={()=>onClickHandler(\"Details\")}>Details</Button>\r\n      </ButtonGroup> */}\r\n      <div>\r\n    {/* <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics\"} */}\r\n        {/* />\r\n    <Divider />\r\n    </Card> */}\r\n\r\n    </div>\r\n      <br/>\r\n      <div className={classes.root}>\r\n          <Grid container spacing={2}\r\n          justify=\"center\"\r\n          >\r\n            \r\n            { state==='Summary' ? (\r\n              \r\n              <Grid item xs={12} sm={12} >\r\n             <CreateChartsummary data={data.mobility_summary} btnname={state} titlename={\"Mobility Summary\"}/>\r\n             </Grid>):\r\n          (Object.keys(data.mobility[0]).slice(1,-1).map((prop, key)=>{ return (<Grid item xs={3} sm={4} key={key}>\r\n         <CreateChart data={data.mobility} btnname={state} titlename={prop}/>\r\n         </Grid>)}))}\r\n          </Grid>\r\n        \r\n        </div>\r\n\r\n      {/* <CreateChart data={data.mobility} btnname={state} /> */}\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default MS;","import React from 'react';\r\nimport ActualForecast from './ActualForecast'\r\nimport KPIViews from './KPIViews'\r\n// import MobilitySummary from './MobilitySummary'\r\nimport Ms from './Ms'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div >\r\n      <KPIViews />\r\n      <ActualForecast />\r\n      <Ms placeRender=\"Summary\"/>\r\n      {/* <MobilitySummary /> */}\r\n    </div>\r\n  );\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Ms from './Ms'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\n\r\nexport default function Page1() {\r\nconst classes = useStyles();\r\n    return (\r\n<div>\r\n    <br/><br/>\r\n    <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics\"}\r\n     />\r\n    <Divider />\r\n    </Card>\r\n    <Ms placeRender=\"Details\"/>\r\n</div>\r\n    );\r\n}\r\n","import Typography from '@material-ui/core/Typography';\r\nimport React, { useRef, useLayoutEffect,useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\"; \r\n\r\n\r\nconst policyindex=  gql`   \r\nquery{\r\n    policy_index{\r\n    date,india,telangana\r\n     }\r\n}`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\nexport default function Page2() {\r\n    const classes = useStyles();\r\n    const { loading, error, data } = useQuery(policyindex);\r\n    // const [state,setState]= useState('Confirmed');\r\n   \r\n       if (loading) {\r\n         return <div className='loader_graph'>Loading...</div>;\r\n       }\r\n       if (error) {\r\n         console.error(error);\r\n         return  <div>Error</div>;\r\n       }\r\n   \r\n    return (\r\n<div>\r\n    <br/><br/>\r\n\r\n<CreateChart data={data.policy_index} />\r\n<PolicyIndex data ={data.policy_index}/>\r\n</div>\r\n    );\r\n}\r\n\r\nam4core.useTheme(am4themes_animated);\r\nfunction CreateChart(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In CreateChart: ${props.btnname}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n        var chart = am4core.create(\"chartdiv\", am4plugins_forceDirected.ForceDirectedTree);\r\n\r\n        var networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n        \r\n        networkSeries.data = [{\r\n          name: 'Positive',\r\n          children: [{\r\n            name: 'Pos', value: 10\r\n          }, {\r\n            name: 'Positive', value: 6\r\n          }\r\n            ]\r\n        }, {\r\n          name: 'Negative',\r\n            children: [{\r\n              name: 'Neg', value: 10\r\n            }, {\r\n              name: 'Negative', value: 6\r\n            }]}]\r\n        \r\n        networkSeries.dataFields.linkWith = \"linkWith\";\r\n        networkSeries.dataFields.name = \"name\";\r\n        networkSeries.dataFields.id = \"name\";\r\n        networkSeries.dataFields.value = \"value\";\r\n        networkSeries.dataFields.children = \"children\";\r\n        networkSeries.links.template.distance = 1;\r\n        networkSeries.nodes.template.tooltipText = \"{name}\";\r\n        networkSeries.nodes.template.fillOpacity = 1;\r\n        networkSeries.nodes.template.outerCircle.scale = 1;\r\n        \r\n        networkSeries.nodes.template.label.text = \"{name}\"\r\n        networkSeries.fontSize = 8;\r\n        networkSeries.nodes.template.label.hideOversized = true;\r\n        networkSeries.nodes.template.label.truncate = true;\r\n        networkSeries.minRadius = am4core.percent(2);\r\n        networkSeries.manyBodyStrength = -5;\r\n        networkSeries.links.template.strokeOpacity = 0;\r\n  \r\n      chart.current = chart;\r\n  \r\n      return () => {\r\n        chart.dispose();\r\n      };\r\n    },[props.btnname,props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Twitter Sentiment\"\r\n          subheader=\"Hashtag #covid-19\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PolicyIndex(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In malefemale: ${JSON.stringify(props.data)}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n       \r\nvar mainContainer = am4core.create(\"PolicyIndex\", am4core.Container);\r\nmainContainer.width = am4core.percent(100);\r\nmainContainer.height = am4core.percent(100);\r\nmainContainer.layout = \"horizontal\";\r\n\r\nvar usData = props.data;\r\n\r\nvar maleChart = mainContainer.createChild(am4charts.XYChart);\r\nmaleChart.paddingRight = 0;\r\n// maleChart.data = JSON.parse(JSON.stringify(usData));\r\nmaleChart.data=usData\r\nconsole.log(`JSON.parse(JSON.stringify(usData)) : ${JSON.parse(JSON.stringify(usData))}`)\r\n// Create axes\r\nvar maleCategoryAxis = maleChart.yAxes.push(new am4charts.CategoryAxis());\r\n// let maleCategoryAxis = maleChart.yAxes.push(new am4charts.DateAxis());\r\n\r\nmaleCategoryAxis.dataFields.category = \"date\";\r\nmaleCategoryAxis.renderer.grid.template.location = 0;\r\nmaleCategoryAxis.renderer.inversed = true;\r\nmaleCategoryAxis.renderer.minGridDistance = 15;\r\n\r\nvar maleValueAxis = maleChart.xAxes.push(new am4charts.ValueAxis());\r\nmaleValueAxis.renderer.inversed = true;\r\nmaleValueAxis.min = 0;\r\nmaleValueAxis.max = 1;\r\nmaleValueAxis.strictMinMax = true;\r\n\r\nmaleCategoryAxis.dateFormatter = new am4core.DateFormatter();\r\nmaleCategoryAxis.dateFormatter.dateFormat  = \"d MMM, yyyy\";\r\n// maleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// maleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\n\r\n// Create series\r\nvar maleSeries = maleChart.series.push(new am4charts.ColumnSeries());\r\nmaleSeries.dataFields.valueX = \"india\";\r\n// maleSeries.dataFields.valueXShow = \"percent\";\r\n// maleSeries.calculatePercent = true;\r\nmaleSeries.dataFields.categoryY = \"date\";\r\n// maleSeries.interpolationDuration = 1000;\r\nmaleSeries.columns.template.tooltipText = \"India: {valueX}\";\r\n//maleSeries.sequencedInterpolation = true;\r\n\r\n\r\nvar femaleChart = mainContainer.createChild(am4charts.XYChart);\r\nfemaleChart.paddingLeft = 0;\r\n// femaleChart.data = JSON.parse(JSON.stringify(usData));\r\nfemaleChart.data= usData\r\n// Create axes\r\nvar femaleCategoryAxis = femaleChart.yAxes.push(new am4charts.CategoryAxis());\r\nfemaleCategoryAxis.renderer.opposite = true;\r\nfemaleCategoryAxis.dataFields.category = \"date\";\r\nfemaleCategoryAxis.renderer.grid.template.location = 0;\r\nfemaleCategoryAxis.renderer.minGridDistance = 15;\r\n\r\nvar femaleValueAxis = femaleChart.xAxes.push(new am4charts.ValueAxis());\r\nfemaleValueAxis.min = 0;\r\nfemaleValueAxis.max = 1;\r\nfemaleValueAxis.strictMinMax = true;\r\n// femaleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// femaleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\nfemaleValueAxis.renderer.minLabelPosition = 0.01;\r\n\r\n// Create series\r\nvar femaleSeries = femaleChart.series.push(new am4charts.ColumnSeries());\r\nfemaleSeries.dataFields.valueX = \"telangana\";\r\n// femaleSeries.dataFields.valueXShow = \"percent\";\r\n// femaleSeries.calculatePercent = true;\r\nfemaleSeries.fill = femaleChart.colors.getIndex(4);\r\nfemaleSeries.stroke = femaleSeries.fill;\r\n//femaleSeries.sequencedInterpolation = true;\r\nfemaleSeries.columns.template.tooltipText = \"Telangana: {valueX}\";\r\nfemaleSeries.dataFields.categoryY = \"date\";\r\n// femaleSeries.interpolationDuration = 1000;\r\n\r\n  \r\n      return () => {\r\n        mainContainer.dispose();\r\n      };\r\n    },[props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Policy Index\"\r\n          subheader=\"Lesser the value better\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"PolicyIndex\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { Switch } from '@material-ui/core';\r\nconst sideOptions = [{\r\n    title: \"Summary\",\r\n    path: \"home\"\r\n},\r\n{\r\n    title: \"Mobility\",\r\n    path: \"Mobility\"\r\n},\r\n{\r\n    title: \"Sentiment\",\r\n    path: \"Sentiment\"\r\n}]\r\nexport const mainListItems = (\r\n    \r\n    <div>\r\n        {sideOptions.map((option, index) => (\r\n            <ListItem button key={option.title} component=\"a\" href={option.path === \"home\" ? \"\\\\\" : option.path}>\r\n                <ListItemIcon>\r\n              { option.title==='Summary'? <Assessment />\r\n                : option.title==='Mobility' ? <Commute /> \r\n                : option.title==='Sentiment' ? <SentimentVerySatisfiedIcon />\r\n                :''\r\n\r\n              }\r\n              \r\n              \r\n                </ListItemIcon>\r\n                <ListItemText primary={option.title} />\r\n            </ListItem>\r\n        ))}\r\n        {/* <ListItem button key={text.topic} component=\"a\" href={text.path === \"home\" ? \"\\\\\" : text.path}>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sentiment\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Mobility\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"About\" />\r\n        </ListItem>\r\n        {/* <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem> */}\r\n    </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Saved reports</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem>\r\n    </div>\r\n);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './menuOptions';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    // width: '100%',\r\n    // height: 'calc(100% - 200px)',\r\n    // [theme.breakpoints.up(\"md\")]: {\r\n    //   overflow: \"auto\",\r\n    //   width: drawerWidth,\r\n    //   position: \"relative\",\r\n    //   height: \"100%\"\r\n    // },\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            COVID Back to Offie Analytics\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        {/* <Divider />\r\n        <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Novartis\r\n        </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <Box pt={4}>\r\n            <Copyright />\r\n        </Box>)\r\n}","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Dashboard from './Dashboard'\r\nimport Page1 from './Page1'\r\nimport Page2 from './Page2'\r\nimport SideBar from './sideBar'\r\nimport Footer from './footer'\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <SideBar />\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Switch>\r\n              <Route exact path=\"/\" exact render={() => <Redirect to=\"/Dashboard\" />} />\r\n              <Route exact path=\"/Dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/Mobility\" component={Page1} />\r\n              <Route exact path=\"/Sentiment\" component={Page2} />\r\n            </Switch>\r\n            <Footer />\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n\r\n  // uri: 'http://localhost:8080/graphql'\r\n  uri:  'http://hfa-backend-hfa.statwb-dev.eu.novartis.net/graphql'\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n})\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ApolloProvider client={client}>\r\n      <React.Fragment>\r\n        <React.StrictMode>\r\n          <App />\r\n        </React.StrictMode>\r\n      </React.Fragment>\r\n    </ApolloProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}