{"version":3,"sources":["menuOptions.js","Loading.js","ActualForecast.js","KPIViews.js","Ms.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Loading","Segment","Dimmer","active","inverted","Loader","content","Image","src","am4core","am4themes_animated","useStyles","makeStyles","theme","root","maxWidth","header","background","borderRadius","border","color","height","padding","boxShadow","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","data1","gql","CreateChart","props","chart","useRef","classes","itemtitle","console","log","btnname","useLayoutEffect","x","am4charts","paddingRight","data","dateAxis","xAxes","push","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","range","axisRanges","stroke","colors","getIndex","strokeOpacity","seriesRange","createSeriesRange","contents","strokeDasharray","strokeWidth","bullet","fill","states","copyFrom","zoomOutButton","minX","adapter","add","minY","target","maxY","plotContainer","maxHeight","maxX","min_act","reduce","olddt","newdt","Date","Type","max_act","JSON","stringify","date","endDate","current","dispose","Card","className","CardHeader","title","subheader","Divider","CardContent","id","style","width","ActualForecast","useQuery","loading","error","useState","state","setState","onClickHandler","ButtonGroup","aria-label","Button","onClick","actuals","flexGrow","paper","spacing","textAlign","palette","text","secondary","margin","data2","Griditem","Grid","container","justify","item","xs","sm","Paper","chtname","value","capacity","component","chartContainer","createChild","y","circle","circleMask","waves","mask","horizontalCenter","waveHeight","waveLength","events","on","smallerSize","Math","min","pixelWidth","pixelHeight","radius","max","labelRadius","capacityLabel","path","moveTo","arcToPoint","locationOnPath","pixelRadius","animate","property","to","from","elasticOut","setValue","label","formattedValue","numberFormatter","format","toUpperCase","fontSize","KPIViews","headermain","mobility","chartcurr","titlename","minBulletDistance","fillOpacity","pointerOrientation","cornerRadius","pattern","rotation","gap","replace","CreateChartsummary","hiddenState","properties","opacity","categoryAxis","category","minGridDistance","categoryX","columns","hoverState","tension","dataItem","index","MS","mobility_summary","Object","keys","slice","map","prop","key","Copyright","Typography","variant","align","Link","href","getFullYear","display","toolbar","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","overflow","paddingBottom","flexDirection","fixedHeight","Dashboard","React","open","setOpen","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","Drawer","List","Container","Ms","Box","pt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","ReactDOM","render","Fragment","StrictMode","document","getElementById"],"mappings":"gkBAYaA,EACT,gCACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,iBAE1B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAE1B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,iBAE1B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,eAE1B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,uBAKrBC,EACT,gCACI,cAACC,EAAA,EAAD,CAAeC,OAAK,EAApB,2BACA,eAACP,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,qBAE1B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,oBAE1B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,wB,6CC3CnBI,GApBC,kBACd,8BASE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,EAAvB,SACE,cAACC,EAAA,EAAD,CAAQD,UAAQ,EAACE,QAAQ,cAG3B,cAACC,EAAA,EAAD,CAAOC,IAAI,gD,8TCajBC,KAAiBC,MAEjB,IAAMC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,QAGZC,OAAO,CACLC,WAAY,mDACZC,aAAc,EACdC,OAAQ,EACRC,MAAO,QACPC,OAAQ,GACRC,QAAS,SACTC,UAAW,yCAEbC,MAAO,CACLH,OAAQ,EACRI,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYhB,EAAMiB,YAAYC,OAAO,YAAa,CAChDC,SAAUnB,EAAMiB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,KAAI,UAKrBC,GAAQC,KAAH,MASX,SAASC,GAAYC,GACnB,IAAMC,EAAQC,iBAAO,MACfC,EAAUjC,KACZkC,EAAU,GA8Fd,OA7FAC,QAAQC,IAAR,0BAA+BN,EAAMO,UAEpCH,EADmB,cAAhBJ,EAAMO,QACE,8BACc,cAAhBP,EAAMO,QACL,8BAEA,0BAEXC,2BAAgB,WACd,IAAIC,EAAIzC,KAAe,WAAY0C,MAEnCD,EAAEE,aAAe,GAUjBF,EAAEG,KAAOZ,EAAMY,KAEf,IAAIC,EAAWJ,EAAEK,MAAMC,KAAK,IAAIL,MAChCG,EAASG,SAASC,KAAKC,SAASC,SAAW,EAE3C,IAAIC,EAAYX,EAAEY,MAAMN,KAAK,IAAIL,MACjCU,EAAUE,QAAQC,UAAW,EAC7BH,EAAUJ,SAASQ,SAAW,GAE9B,IAAIC,EAAShB,EAAEgB,OAAOV,KAAK,IAAIL,MAC/Be,EAAOC,WAAWC,MAAQ,OAC1BF,EAAOC,WAAWE,OAAS5B,EAAMO,QACjCkB,EAAOI,YAAc,iBACrBpB,EAAEqB,OAAS,IAAIpB,KAEf,IAAIqB,EAAa,IAAIrB,KACrBqB,EAAWN,OAAOV,KAAKU,GACvBhB,EAAEsB,WAAaA,EACf,IAAIC,EAAQnB,EAASoB,WAAWlB,KAAK,IAAIL,MACzCsB,EAAMf,KAAKiB,OAASzB,EAAE0B,OAAOC,SAAS,GACtCJ,EAAMf,KAAKoB,cAAgB,EAE3B,IAAIC,EAAczB,EAAS0B,kBAAkBd,GAC7Ca,EAAYE,SAASC,gBAAkB,MACvCH,EAAYE,SAASN,OAASzB,EAAE0B,OAAOC,SAAS,GAChDE,EAAYE,SAASE,YAAc,EAEvCV,EAAMW,OAAS,IAAI3E,KACnBgE,EAAMW,OAAOnE,WAAWoE,KAAOnC,EAAE0B,OAAOC,SAAS,GACjDJ,EAAMW,OAAOnE,WAAWqE,OAAOC,SAASrC,EAAEsC,cAAcvE,WAAWqE,QACnEb,EAAMW,OAAOK,KAAO,EACpBhB,EAAMW,OAAOM,QAAQC,IAAI,QAAQ,SAASC,EAAMC,GAG9C,OAFAA,EAAOC,KAAO5C,EAAE6C,cAAcC,UAC9BH,EAAOI,KAAO/C,EAAE6C,cAAchF,SACvBmC,EAAE6C,cAAcC,aAQzB,IAAIE,EAAQzD,EAAMY,KAAK8C,QACrB,SAACC,EAAMC,GAAP,OACC,IAAIC,KAAKF,EAAME,OAAsB,YAAbF,EAAMG,OAAqB,IAAID,KAAKD,EAAMC,OAAsB,YAAbD,EAAME,MAChFH,EAAMC,KAGJG,EAAQ/D,EAAMY,KAAK8C,QACrB,SAACC,EAAMC,GAAP,OACC,IAAIC,KAAKF,EAAME,OAAsB,YAAbF,EAAMG,OAAqB,IAAID,KAAKD,EAAMC,OAAsB,YAAbD,EAAME,MAChFH,EAAMC,KAgBR,OAdJvD,QAAQC,IAAR,kBAAuB0D,KAAKC,UAAUR,GAAtC,mBAAyDO,KAAKC,UAAUF,KAExE/B,EAAMkC,KAAO,IAAIL,KAAKJ,EAAQI,MAC9BvB,EAAY4B,KAAO,IAAIL,KAAKJ,EAAQI,MACpCvB,EAAY6B,QAAU,IAAIN,KAAKE,EAAQF,MAQnC5D,EAAMmE,QAAU3D,EAET,WACLA,EAAE4D,aAEJ,CAACrE,EAAMO,QAAQP,EAAMY,OAIvB,8BACD,eAAC0D,GAAA,EAAD,CAAMC,UAAWpE,EAAQ9B,KAAzB,UAEA,cAACmG,GAAA,EAAD,CAAYD,UAAWpE,EAAQ5B,OAExBkG,MAAOrE,EACPsE,UAAU,sBAGjB,cAACC,EAAA,EAAD,IACG,cAACC,GAAA,EAAD,CAAcC,GAAG,WAAWC,MAAO,CAAEC,MAAO,OAAQnG,OAAQ,gBAQ/D,IAwCcoG,GAxCU,WAAO,IAAD,EACMC,aAASpF,IAAlCqF,EADmB,EACnBA,QAASC,EADU,EACVA,MAAOvE,EADG,EACHA,KADG,EAENwE,mBAAS,aAFH,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAK3B,GAAIJ,EACF,OAAO,qBAAKX,UAAU,eAAf,wBAET,GAAIY,EAEF,OADA9E,QAAQ8E,MAAMA,GACN,wCAIV,IAAMI,EAAiB,SAAChF,EAAQK,GAC9B0E,EAAS/E,IAIX,OAGA,mCACA,gCACC,uBAAK,uBAAK,uBAAK,uBAChB,eAACiF,GAAA,EAAD,CAAa7G,MAAM,YAAY8G,aAAW,kCAA1C,UACI,cAACC,GAAA,EAAD,CAAQC,QAAS,kBAAIJ,EAAe,YAAY3E,EAAKgF,UAArD,uBACA,cAACF,GAAA,EAAD,CAAQC,QAAS,kBAAIJ,EAAe,YAAY3E,EAAKgF,UAArD,uBACA,cAACF,GAAA,EAAD,CAAQC,QAAS,kBAAIJ,EAAe,WAAW3E,EAAKgF,UAApD,yBAEF,cAAC7F,GAAD,CAAaa,KAAMA,EAAKgF,QAASrF,QAAS8E,U,2NC/LhDrH,KAAiBC,MAEjB,IAAMC,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCC,KAAM,CACJC,SAAU,OACVuH,SAAU,GAGZ9G,MAAO,CACLH,OAAQ,EACRI,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYhB,EAAMiB,YAAYC,OAAO,YAAa,CAChDC,SAAUnB,EAAMiB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,KAAI,MAEvBkG,OAAK,GACDjH,QAAST,EAAM2H,QAAQ,GACvBC,UAAW,SACXrH,MAAOP,EAAM6H,QAAQC,KAAKC,UAC1BC,OAAQ,OACR5H,WAAY,mDACZC,aAAc,EACdC,OAAQ,GAPP,sBAQM,SARN,0BAWU,wCAXV,OAiBH2H,GAAQvG,KAAH,MAOX,SAASwG,GAAStG,GAGd,IAAMG,EAAUjC,KAEhB,OACI,qBAAKqG,UAAWpE,EAAQ9B,KAAxB,SACE,eAACkI,GAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,EACzBU,QAAQ,SADR,UAIE,cAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACA,eAACC,GAAA,EAAD,CAAOtC,UAAWpE,EAAQ2F,MAA1B,UAAkC,cAAC,GAAD,CAAagB,QAAQ,QAAQnI,MAAM,UAAU8F,MAAM,sBAAsBsC,MAAO,IAAlH,SAEA,cAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,GAAA,EAAD,CAAOtC,UAAWpE,EAAQ2F,MAA1B,SAAkC,cAAC,GAAD,CAAagB,QAAQ,QAAQnI,MAAM,UAAU8F,MAAM,mBAAmBsC,MAAO,SAEjH,cAACR,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,GAAA,EAAD,CAAOtC,UAAWpE,EAAQ2F,MAA1B,SAAkC,cAAC,GAAD,CAAagB,QAAQ,QAAQnI,MAAM,UAAU8F,MAAM,gBAAgBsC,MAAO,eAQ1H,SAAShH,GAAYC,GACnB,IAAMC,EAAQC,iBAAO,MAkFrB,OAhFAM,2BAAgB,WAEd,IAAIwG,EAAW,IACXD,EAAQ/G,EAAM+G,MAGdE,EAAYjJ,KAAegC,EAAM8G,QAAS9I,MAC9CiJ,EAAUlC,MAAQ/G,KAAgB,KAClCiJ,EAAUrI,OAASZ,KAAgB,KAEnC,IAAIkJ,EAAiBD,EAAUE,YAAYnJ,MAC3CkJ,EAAezG,EAAIzC,KAAgB,IACnCkJ,EAAeE,EAAIpJ,KAAgB,IAEnC,IAAIqJ,EAASH,EAAeC,YAAYnJ,MACxCqJ,EAAOzE,KAAO5E,KAAc,WAE5B,IAAIsJ,EAAaJ,EAAeC,YAAYnJ,MAExCuJ,EAAQL,EAAeC,YAAYnJ,MACvCuJ,EAAM3E,KAAO5E,KAAcgC,EAAMrB,OACjC4I,EAAMC,KAAOF,EACbC,EAAME,iBAAmB,SACzBF,EAAMG,WAAa,GACnBH,EAAMI,WAAa,GACnBJ,EAAMH,EAAI,IACVE,EAAWF,GAAK,IAEhBH,EAAUW,OAAOC,GAAG,kBAAkB,WACpC,IAAIC,EAAcC,KAAKC,IAAIf,EAAUgB,WAAYhB,EAAUiB,aACvDC,EA1BW,GA0BFL,EAA2B,EAExCT,EAAOc,OAASA,EAChBb,EAAWa,OAASA,EACpBZ,EAAM3I,OAASkJ,EACfP,EAAMxC,MAAQgD,KAAKK,IAAInB,EAAUgB,WAAYhB,EAAUiB,aAIvD,IAAIG,EAAcF,EAAS,GAE3BG,EAAcC,KAAOvK,KAAawK,OAAO,CAAC/H,GAAG4H,EAAajB,EAAE,IAAMpJ,KAAayK,WAAW,CAAChI,EAAE4H,EAAajB,EAAE,GAAIiB,EAAaA,GAC7HC,EAAcI,eAAiB,GAMjC,SAAkB3B,GACf,IAAIK,GAAMC,EAAOc,OAASZ,EAAMG,YAAc,EAAIX,EAAQC,GAAYK,EAAOsB,YAAc,EAC3FpB,EAAMqB,QAAQ,CAAC,CAACC,SAAS,IAAKC,GAAG1B,GAAI,CAACyB,SAAS,aAAcC,GAAG,GAAIC,KAAK,IAAK,CAACF,SAAS,IAAKE,MAAM,GAAID,GAAG,IAAK,IAAM9K,KAAagL,YAClI1B,EAAWsB,QAAQ,CAAC,CAACC,SAAS,IAAKC,IAAI1B,GAAG,CAACyB,SAAS,IAAKE,KAAK,GAAID,GAAG,IAAK,IAAM9K,KAAagL,YAP9FC,CAASlC,MAWX,IAAImC,EAAQhC,EAAeC,YAAYnJ,MACnCmL,EAAiBlC,EAAUmC,gBAAgBC,OAAOtC,EAAO,QAC7DoC,EAAiBA,EAAeG,cAEhCJ,EAAMhD,KAAOa,EACbmC,EAAMtG,KAAO5E,KAAc,QAC3BkL,EAAMK,SAAW,GACjBL,EAAMzB,iBAAmB,SAGzB,IAAIa,EAAgBpB,EAAeC,YAAYnJ,MAEvBiJ,EAAUmC,gBAAgBC,OAAOrC,EAAU,QAAQsC,cAQ3E,OAPAjJ,QAAQC,IAAIN,EAAMyE,OAClB6D,EAAcpC,KAAOlG,EAAMyE,MAC3B6D,EAAc1F,KAAO5E,KAAc,WACnCsK,EAAciB,SAAW,GACzBjB,EAActC,UAAY,SAC1BsC,EAAczJ,QAAQ,EAAE,EAAE,EAAE,GAC5BoB,EAAMmE,QAAU6C,EACT,WACHA,EAAU5C,aAEb,CAACrE,EAAMY,KAAKZ,EAAM8G,UAIrB,qBAAKjC,GAAI7E,EAAM8G,UAOhB,IAec0C,GAfI,WAAO,IAAD,EACYvE,aAASoB,IAAlCnB,EADa,EACbA,QAASC,EADI,EACJA,MAAOvE,EADH,EACGA,KAExB,OAAIsE,EACK,qBAAKX,UAAU,eAAf,wBAELY,GACF9E,QAAQ8E,MAAOA,GACP,yCAEH,gCAAK,uBAAK,uBAAK,uBAAK,uBAAK,cAACmB,GAAD,CAAW1F,KAAMA,EAAKgF,c,gRChL1D5H,KAAiBC,MAEjB,IAAMC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,OACVuH,SAAU,GACVtH,OAAO,CACLC,WAAY,mDACZC,aAAc,EACdC,OAAQ,EACRC,MAAO,QACPC,OAAQ,GACRC,QAAS,SACTC,UAAW,yCAEb2K,WAAW,CACTjL,WAAY,mDACZM,UAAW,wCACXH,MAAO,SAEXI,MAAO,CACLH,OAAQ,EACRI,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYhB,EAAMiB,YAAYC,OAAO,YAAa,CAChDC,SAAUnB,EAAMiB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,KAAI,MAEvBkG,MAAO,CACHjH,QAAST,EAAM2H,QAAQ,GACvBC,UAAW,SACXrH,MAAOP,EAAM6H,QAAQC,KAAKC,UAC1BC,OAAQ,YAOVsD,GAAW5J,KAAH,MAmBd,SAASC,GAAYC,GACnB,IAAM2J,EAAYzJ,iBAAO,MACnBC,EAAUjC,KAyFhB,OAjFAsC,2BAAgB,WACd,IAAIP,EAAQjC,KAAegC,EAAM4J,UAAWlJ,MAE5CT,EAAM8E,MAAQ/G,KAAgB,KAC9BiC,EAAMrB,OAASZ,KAAgB,KAC/BqC,QAAQC,IAAR,oBAAyBN,EAAM4J,YAGnC3J,EAAMW,KAAOZ,EAAMY,KACnBP,QAAQC,IAAR,yBAA8B0D,KAAKC,UAAUhE,EAAMW,KAAK,GAAGiD,QAE3D,IAAIhD,EAAWZ,EAAMa,MAAMC,KAAK,IAAIL,MAKhCe,GAHYxB,EAAMoB,MAAMN,KAAK,IAAIL,MAGxBT,EAAMwB,OAAOV,KAAK,IAAIL,OACnCe,EAAOC,WAAWE,OAAS5B,EAAM4J,UACjCnI,EAAOC,WAAWC,MAAQ,OAC1BF,EAAOiB,YAAc,EACrBjB,EAAOoI,kBAAoB,GAC3BpI,EAAOI,YAAc,iBACrBJ,EAAOqI,YAAc,GACrBrI,EAAOH,QAAQyI,mBAAqB,WACpCtI,EAAOH,QAAQ9C,WAAWwL,aAAe,GACzCvI,EAAOH,QAAQ9C,WAAWsL,YAAc,GACxCrI,EAAOH,QAAQ4H,MAAMrK,QAAQ,GAAI,GAAI,GAAI,IAEzC,IAAIyD,EAAczB,EAAS0B,kBAAkBd,GAC7Ca,EAAYE,SAASC,gBAAkB,MACvCH,EAAYE,SAASN,OAASjC,EAAMkC,OAAOC,SAAS,GACpDE,EAAYE,SAASE,YAAc,EAEnC,IAAIuH,EAAU,IAAIjM,KAClBiM,EAAQC,UAAY,GACpBD,EAAQ/H,OAASI,EAAYE,SAASN,OACtC+H,EAAQlF,MAAQ,IAChBkF,EAAQrL,OAAS,IACjBqL,EAAQE,IAAM,EACd7H,EAAYE,SAASI,KAAOqH,EAC5B3H,EAAYE,SAASsH,YAAc,GAGnC7J,EAAM8B,WAAa,IAAI/D,KAGvB,IAAIgE,EAAQnB,EAASoB,WAAWlB,KAAK,IAAIL,MA8BrC,OA7BJsB,EAAMf,KAAKiB,OAASjC,EAAMkC,OAAOC,SAAS,GAC1CJ,EAAMf,KAAKoB,cAAgB,EA0BvBsH,EAAUvF,QAAUnE,EAEb,WACLA,EAAMoE,aAER,CAACrE,EAAM4J,UAAU5J,EAAMY,OAIzB,8BACD,eAAC0D,GAAA,EAAD,CAAMC,UAAWpE,EAAQ9B,KAAzB,UAEA,cAACmG,GAAA,EAAD,CAAYD,UAAWpE,EAAQ5B,OACxBkG,MAAOzE,EAAM4J,UAAUQ,QAAQ,IAAI,OAK1C,cAACzF,EAAA,EAAD,IACG,cAACC,GAAA,EAAD,CAAcC,GAAI7E,EAAM4J,UAAW9E,MAAO,CAAEC,MAAO,OAAQnG,OAAQ,gBAOvE,SAASyL,GAAmBrK,GACNE,iBAAO,MAAzB,IACMC,EAAUjC,KAkDhB,OA1CAsC,2BAAgB,WACd,IAAIP,EAAQjC,KAAegC,EAAM4J,UAAWlJ,MAE5CT,EAAMqK,YAAYC,WAAWC,QAAU,EAEvCvK,EAAMW,KAAOZ,EAAMY,KAGnB,IAAI6J,EAAexK,EAAMa,MAAMC,KAAK,IAAIL,MACxC+J,EAAazJ,SAASC,KAAKC,SAASC,SAAW,EAC/CsJ,EAAa/I,WAAWgJ,SAAW,WACnCD,EAAazJ,SAAS2J,gBAAkB,GAExB1K,EAAMoB,MAAMN,KAAK,IAAIL,MAArC,IAEIe,EAASxB,EAAMwB,OAAOV,KAAK,IAAIL,MACnCe,EAAOC,WAAWkJ,UAAY,WAC9BnJ,EAAOC,WAAWE,OAAS,QAC3BH,EAAOI,YAAc,iBACrBJ,EAAOoJ,QAAQ3J,SAASmB,cAAgB,EAExCZ,EAAOoJ,QAAQ3J,SAAS4I,YAAc,IAEtC,IAAIgB,EAAarJ,EAAOoJ,QAAQ3J,SAAS2B,OAAOvD,OAAO,SAczD,OAbEwL,EAAWP,WAAWT,YAAc,EACpCgB,EAAWP,WAAWQ,QAAU,GAEhC9K,EAAM6B,OAAS,IAAIpB,KAGnBe,EAAOoJ,QAAQ3J,SAAS+B,QAAQC,IAAI,QAAQ,SAASN,EAAMQ,GACzD,OAAOnD,EAAMkC,OAAOC,SAASgB,EAAO4H,SAASC,UAM1C,WACLhL,EAAMoE,aAEP,CAACrE,EAAMY,KAAKZ,EAAM4J,YAInB,8BACD,eAACtF,GAAA,EAAD,CAAMC,UAAWpE,EAAQ9B,KAAzB,UAEA,cAACmG,GAAA,EAAD,CAAYD,UAAWpE,EAAQ5B,OACxBkG,MAAOzE,EAAM4J,UAAUQ,QAAQ,IAAI,OAK1C,cAACzF,EAAA,EAAD,IACG,cAACC,GAAA,EAAD,CAAcC,GAAI7E,EAAM4J,UAAW9E,MAAO,CAAEC,MAAO,OAAQnG,OAAQ,gBAQxE,IAsEcsM,GAtEF,WACT,IAAM/K,EAAUjC,KADD,EAESkH,mBAAS,WAFlB,mBAERC,EAFQ,KAEFC,EAFE,OAGkBL,aAASyE,IAAlCxE,EAHO,EAGPA,QAASC,EAHF,EAGEA,MAAOvE,EAHT,EAGSA,KAKxB,GAHAP,QAAQC,IAAR,4BAAiC6E,IAG7BD,EACF,OAAO,8BAAK,cAAE,GAAF,MAEd,GAAIC,EAEF,OADA9E,QAAQ8E,MAAMA,GACN,wCAGV9E,QAAQC,IAAR,uBAA4B0D,KAAKC,UAAUrD,EAAKuK,oBAChD,IAAM5F,EAAiB,SAAChF,GACtB+E,EAAS/E,GACTF,QAAQC,IAAR,sBAA2BC,EAA3B,YAAsCyD,KAAKC,UAAUrD,EAAKuK,qBAG5D,OAGA,mCACA,gCACC,uBAAK,uBAAK,uBAAK,uBAChB,eAAC3F,GAAA,EAAD,CAAa7G,MAAM,YAAY8G,aAAW,kCAA1C,UACI,cAACC,GAAA,EAAD,CAAQC,QAAS,kBAAIJ,EAAe,YAApC,qBACA,cAACG,GAAA,EAAD,CAAQC,QAAS,kBAAIJ,EAAe,YAApC,wBAEF,8BACF,eAACjB,GAAA,EAAD,CAAMC,UAAWpE,EAAQ9B,KAAzB,UAEA,cAACmG,GAAA,EAAD,CAAYD,UAAWpE,EAAQsJ,WACvBhF,MAAO,uBAEf,cAACE,EAAA,EAAD,SAIE,uBACA,qBAAKJ,UAAWpE,EAAQ9B,KAAxB,SACI,cAACkI,GAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,EACzBU,QAAQ,SADR,SAIY,YAARpB,EAEA,cAACkB,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACD,cAACyD,GAAD,CAAoBzJ,KAAMA,EAAKuK,iBAAkB5K,QAAS8E,EAAOuE,UAAWvE,MAE9E+F,OAAOC,KAAKzK,EAAK8I,SAAS,IAAI4B,MAAM,GAAG,GAAGC,KAAI,SAACC,EAAMC,GAAQ,OAAQ,cAAClF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACvE,cAAC,GAAD,CAAahG,KAAMA,EAAK8I,SAAUnJ,QAAS8E,EAAOuE,UAAW4B,KADwCC,gBCnT9G,SAASC,KACP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQjN,MAAM,gBAAgBkN,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMnN,MAAM,UAAUoN,KAAK,2BAA3B,sBAEQ,KACP,IAAIlI,MAAOmI,cACX,OAKP,IAEM9N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ4N,QAAS,QAEXC,QAAS,CACPvL,aAAc,IAEhBwL,YAAY,aACVF,QAAS,OACTG,WAAY,SACZC,eAAgB,WAChBxN,QAAS,SACNT,EAAMkO,OAAOJ,SAElBK,OAAQ,CACNC,OAAQpO,EAAMoO,OAAOC,OAAS,EAC9BrN,WAAYhB,EAAMiB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDoN,OAAQtO,EAAMiB,YAAYqN,OAAOC,MACjCpN,SAAUnB,EAAMiB,YAAYE,SAASqN,iBAGzCC,YAAa,CACX1N,WAxBgB,IAyBhB4F,MAAM,eAAD,OAzBW,IAyBX,OACL3F,WAAYhB,EAAMiB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDoN,OAAQtO,EAAMiB,YAAYqN,OAAOC,MACjCpN,SAAUnB,EAAMiB,YAAYE,SAASuN,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBhB,QAAS,QAEXxH,MAAO,CACLoB,SAAU,GAEZqH,YAAa,CACXC,SAAU,WACVC,WAAY,SACZrI,MA3CgB,IA4ChB3F,WAAYhB,EAAMiB,YAAYC,OAAO,QAAS,CAC5CoN,OAAQtO,EAAMiB,YAAYqN,OAAOC,MACjCpN,SAAUnB,EAAMiB,YAAYE,SAASuN,kBAGzCO,iBAAiB,aACfC,UAAW,SACXlO,WAAYhB,EAAMiB,YAAYC,OAAO,QAAS,CAC5CoN,OAAQtO,EAAMiB,YAAYqN,OAAOC,MACjCpN,SAAUnB,EAAMiB,YAAYE,SAASqN,gBAEvC7H,MAAO3G,EAAM2H,QAAQ,IACpB3H,EAAMmP,YAAYC,GAAG,MAAQ,CAC5BzI,MAAO3G,EAAM2H,QAAQ,KAGzB0H,aAAcrP,EAAMkO,OAAOJ,QAC3BrO,QAAS,CACPgI,SAAU,EACVjH,OAAQ,QACR8O,SAAU,QAEZlH,UAAW,CACTxH,WAAYZ,EAAM2H,QAAQ,GAC1B4H,cAAevP,EAAM2H,QAAQ,IAE/BD,MAAO,CACLjH,QAAST,EAAM2H,QAAQ,GACvBkG,QAAS,OACTyB,SAAU,OACVE,cAAe,UAEjBC,YAAa,CACXjP,OAAQ,SAIG,SAASkP,KACtB,IAAM3N,EAAUjC,KADkB,EAEV6P,IAAM3I,UAAS,GAFL,mBAE3B4I,EAF2B,KAErBC,EAFqB,KASTC,YAAK/N,EAAQ2F,MAAO3F,EAAQ0N,aAErD,OACE,sBAAKtJ,UAAWpE,EAAQ9B,KAAxB,UACE,cAAC8P,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQjB,SAAS,WAAW5I,UAAW2J,YAAK/N,EAAQoM,OAAQyB,GAAQ7N,EAAQ0M,aAA5E,SACE,eAACwB,EAAA,EAAD,CAAS9J,UAAWpE,EAAQ+L,QAA5B,UACE,cAACoC,EAAA,EAAD,CACEC,KAAK,QACL5P,MAAM,UACN8G,aAAW,cACXE,QAjBe,WACvBsI,GAAQ,IAiBA1J,UAAW2J,YAAK/N,EAAQ4M,WAAYiB,GAAQ7N,EAAQ8M,kBALtD,SAOE,cAAC,IAAD,MAEF,cAACtB,EAAA,EAAD,CAAY1E,UAAU,KAAK2E,QAAQ,KAAKjN,MAAM,UAAU6P,QAAM,EAACjK,UAAWpE,EAAQsE,MAAlF,2CAGA,cAAC6J,EAAA,EAAD,CAAY3P,MAAM,UAAlB,SACE,cAAC8P,EAAA,EAAD,CAAOC,aAAc,EAAG/P,MAAM,YAA9B,SACE,cAAC,IAAD,aAKR,eAACgQ,EAAA,EAAD,CACE/C,QAAQ,YACRzL,QAAS,CACP2F,MAAOoI,YAAK/N,EAAQ+M,aAAcc,GAAQ7N,EAAQkN,mBAEpDW,KAAMA,EALR,UAOE,qBAAKzJ,UAAWpE,EAAQgM,YAAxB,SACE,cAACmC,EAAA,EAAD,CAAY3I,QArCM,WACxBsI,GAAQ,IAoCF,SACE,cAAC,IAAD,QAIJ,cAACtJ,EAAA,EAAD,IACA,cAACiK,EAAA,EAAD,UAAO9R,IACP,cAAC6H,EAAA,EAAD,IACA,cAACiK,EAAA,EAAD,UAAOxR,OAET,uBAAMmH,UAAWpE,EAAQtC,QAAzB,UACE,qBAAK0G,UAAWpE,EAAQsN,eACxB,eAACoB,EAAA,EAAD,CAAWvQ,SAAS,KAAKiG,UAAWpE,EAAQqG,UAA5C,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAACsI,GAAD,IAEA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACtD,GAAD,e,OCrKGuD,OARf,WACE,OACE,qBAAK1K,UAAU,MAAf,SACE,cAAC,GAAD,OCDS2K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uCCGRQ,I,OAAQ,IAAIC,MACZC,GAAO,IAAIC,KAAS,CAExBC,IAAM,8DAGFC,GAAS,IAAIC,KAAa,CAC9BN,SACAE,UAGFK,IAASC,OACP,cAAC,KAAD,CAAgBH,OAAQA,GAAxB,SACA,cAAC,IAAMI,SAAP,UACA,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UAIFC,SAASC,eAAe,SAM1BrB,O","file":"static/js/main.e6750933.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Orders\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Reports\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem>\r\n    </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Saved reports</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem>\r\n    </div>\r\n);","import React from 'react'\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    {/* <Segment>\r\n      <Dimmer active>\r\n        <Loader content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment> */}\r\n\r\n    <Segment>\r\n      <Dimmer active inverted>\r\n        <Loader inverted content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment>\r\n  </div>\r\n)\r\n\r\nexport default Loading","import React, { useRef, useLayoutEffect,useState } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n\r\n    },\r\n    header:{\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\n\r\nconst data1=  gql`   \r\n    query{\r\n           actuals{\r\n               Date,Confirmed,Recovered,Deceased,Type\r\n             }\r\n         }\r\n       `\r\n\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  const classes = useStyles();\r\n  let itemtitle=''\r\n  console.log(`In CreateChart: ${props.btnname}`)\r\n  if (props.btnname==='Confirmed') {\r\n   itemtitle =\"Covid Confirmed Cases Trend\"\r\n  } else if(props.btnname==='Recovered'){\r\n   itemtitle=\"Covid Recovered Cases Trend\"\r\n  } else {\r\n   itemtitle=\"Covid Death Cases Trend\"\r\n  }\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n   \r\n    x.paddingRight = 20;\r\n\r\n    // let data = [];\r\n    // let visits = 10;\r\n\r\n    // for (let i = 1; i < 366; i++) {\r\n    //   visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n    //   data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n    // }\r\n\r\n    x.data = props.data;\r\n\r\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = x.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"Date\";\r\n    series.dataFields.valueY = props.btnname;\r\n    series.tooltipText = \"{valueY.value}\";\r\n    x.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    x.scrollbarX = scrollbarX;\r\n    var range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\n    range.grid.stroke = x.colors.getIndex(0);\r\n    range.grid.strokeOpacity = 1;\r\n   \r\n    var seriesRange = dateAxis.createSeriesRange(series);\r\n    seriesRange.contents.strokeDasharray = \"2,3\";\r\n    seriesRange.contents.stroke = x.colors.getIndex(8);\r\n    seriesRange.contents.strokeWidth = 1;\r\n\r\nrange.bullet = new am4core.ResizeButton();\r\nrange.bullet.background.fill = x.colors.getIndex(0);\r\nrange.bullet.background.states.copyFrom(x.zoomOutButton.background.states);\r\nrange.bullet.minX = 0;\r\nrange.bullet.adapter.add(\"minY\", function(minY, target) {\r\n  target.maxY = x.plotContainer.maxHeight;\r\n  target.maxX = x.plotContainer.maxWidth;\r\n  return x.plotContainer.maxHeight;\r\n})\r\n\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\nlet min_act=props.data.reduce(\r\n  (olddt,newdt)=> \r\n  (new Date(olddt.Date) && olddt.Type==='Acutals') > (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n  ? olddt:newdt)\r\n\r\n\r\n  let max_act=props.data.reduce(\r\n    (olddt,newdt)=> \r\n    (new Date(olddt.Date) && olddt.Type==='Acutals') < (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n    ? olddt:newdt)\r\n  \r\nconsole.log(`min_act:${JSON.stringify(min_act)} mix_act${JSON.stringify(max_act)}`)\r\n\r\nrange.date = new Date(min_act.Date);\r\nseriesRange.date = new Date(min_act.Date);\r\nseriesRange.endDate = new Date(max_act.Date)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    chart.current = x;\r\n\r\n    return () => {\r\n      x.dispose();\r\n    };\r\n  },[props.btnname,props.data] );\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n  // style={{Color: \"#000\", Background: \"blue\"}}\r\n        title={itemtitle}\r\n        subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n const  ActualForecast = () => {\r\n    const { loading, error, data } = useQuery(data1);\r\n const [state,setState]= useState('Confirmed');\r\n\r\n\r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n   \r\n    const onClickHandler = (btnname,data) =>{\r\n      setState(btnname)\r\n      // console.log(`btn clicked ${btnname} ${JSON.stringify(data)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div>\r\n     <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n        <Button onClick={()=>onClickHandler(\"Confirmed\",data.actuals)}>Confirmed</Button>\r\n        <Button onClick={()=>onClickHandler(\"Recovered\",data.actuals)}>Recovered</Button>\r\n        <Button onClick={()=>onClickHandler(\"Deceased\",data.actuals)}>Deceased</Button>\r\n      </ButtonGroup>\r\n      <CreateChart data={data.actuals} btnname={state} />\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default ActualForecast;","import React, { useRef, useLayoutEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport './App.css'\r\n// import Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\nconst data2=  gql`   \r\n    query{\r\n           actuals{\r\n               Date,Confirmed,Recovered,Deceased,Type\r\n             }\r\n         }\r\n       `\r\nfunction Griditem(props){\r\n    \r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}\r\n          justify=\"center\"\r\n          >\r\n           \r\n            <Grid item xs={6} sm={3} >\r\n            <Paper className={classes.paper} ><CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> </Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Paper className={classes.paper} ><CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/></Paper>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Paper className={classes.paper} ><CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/></Paper>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </div>\r\n      );\r\n}\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  \r\n  useLayoutEffect(() => {\r\n   \r\n    var capacity = 1000;\r\n    var value = props.value;\r\n    var circleSize = 0.8;\r\n    \r\n    var component = am4core.create(props.chtname, am4core.Container)\r\n    component.width = am4core.percent(100);\r\n    component.height = am4core.percent(100);\r\n    \r\n    var chartContainer = component.createChild(am4core.Container);\r\n    chartContainer.x = am4core.percent(50)\r\n    chartContainer.y = am4core.percent(50)\r\n    \r\n    var circle = chartContainer.createChild(am4core.Circle);\r\n    circle.fill = am4core.color(\"#dadada\");\r\n    \r\n    var circleMask = chartContainer.createChild(am4core.Circle);\r\n    \r\n    var waves = chartContainer.createChild(am4core.WavedRectangle);\r\n    waves.fill = am4core.color(props.color);\r\n    waves.mask = circleMask;\r\n    waves.horizontalCenter = \"middle\";\r\n    waves.waveHeight = 10;\r\n    waves.waveLength = 30;\r\n    waves.y = 500;\r\n    circleMask.y = -500;\r\n    \r\n    component.events.on(\"maxsizechanged\", function(){\r\n      var smallerSize = Math.min(component.pixelWidth, component.pixelHeight);  \r\n      var radius = smallerSize * circleSize / 2;\r\n    \r\n      circle.radius = radius;\r\n      circleMask.radius = radius;\r\n      waves.height = smallerSize;\r\n      waves.width = Math.max(component.pixelWidth, component.pixelHeight);  \r\n    \r\n      // capacityLabel.y = radius;\r\n    \r\n      var labelRadius = radius + 15\r\n    \r\n      capacityLabel.path = am4core.path.moveTo({x:-labelRadius, y:0}) + am4core.path.arcToPoint({x:labelRadius, y:0}, labelRadius, labelRadius);\r\n      capacityLabel.locationOnPath = 0.5;\r\n    \r\n      setValue(value);\r\n    })\r\n    \r\n    \r\n    function setValue(value){\r\n       var y = - circle.radius - waves.waveHeight + (1 - value / capacity) * circle.pixelRadius * 2;\r\n       waves.animate([{property:\"y\", to:y}, {property:\"waveHeight\", to:10, from:15}, {property:\"x\", from:-50, to:0}], 5000, am4core.ease.elasticOut);\r\n       circleMask.animate([{property:\"y\", to:-y},{property:\"x\", from:50, to:0}], 5000, am4core.ease.elasticOut);\r\n    }\r\n    \r\n    \r\n    var label = chartContainer.createChild(am4core.Label)\r\n    var formattedValue = component.numberFormatter.format(value, \"#.#a\");\r\n    formattedValue = formattedValue.toUpperCase();\r\n    \r\n    label.text = value ;\r\n    label.fill = am4core.color(\"#fff\");\r\n    label.fontSize = 30;\r\n    label.horizontalCenter = \"middle\";\r\n    \r\n    \r\n    var capacityLabel = chartContainer.createChild(am4core.Label)\r\n    \r\n    var formattedCapacity = component.numberFormatter.format(capacity, \"#.#a\").toUpperCase();;\r\n    console.log(props.title)\r\n    capacityLabel.text = props.title;\r\n    capacityLabel.fill = am4core.color(\"#ffffff\");\r\n    capacityLabel.fontSize = 20;\r\n    capacityLabel.textAlign = \"middle\";\r\n    capacityLabel.padding(0,0,0,0);\r\n    chart.current = component;\r\n    return () => {\r\n        component.dispose();\r\n    };\r\n  }, [props.data,props.chtname]);\r\n\r\n  return (\r\n   \r\n  <div id={props.chtname}    \r\n  //  style={{ width: \"100%\", height: \"250\" }}\r\n  >\r\n    </div>\r\n  );\r\n}\r\n\r\n const  KPIViews = () => {\r\n    const { loading, error, data } = useQuery(data2);\r\n  \r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error( error);\r\n      return  <div>Error</div>;\r\n    }\r\n    return <div><br/><br/><br/><br/><Griditem  data={data.actuals}/></div>\r\n  };\r\n\r\n \r\n\r\nexport default KPIViews;\r\nexport {Griditem}","import React, { useRef, useLayoutEffect,useState, useEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\n\r\nconst mobility=  gql`   \r\nquery{\r\n  mobility{\r\n         Date,Retail_Recreation,Grocery_Pharmacy,Parks,Transit_Stations,Workplaces,Residential\r\n       \r\n   }\r\n   mobility_summary{\r\n    Category,Value\r\n     }\r\n    }\r\n       `\r\n// const mobilitysummary=  gql`   \r\n//     query{\r\n//         mobility_summary{\r\n//             Category,Value\r\n//              }\r\n//          }\r\n//        `\r\n\r\nfunction CreateChart(props) {\r\n  const chartcurr = useRef(null);\r\n  const classes = useStyles();\r\n//   let itemtitle=''\r\n//   console.log(`In CreateChart: ${props.btnname}`)\r\n//   if (props.btnname==='Summary') {\r\n//    itemtitle =\"Latest Day Mobility Report\"\r\n//   } else {\r\n//    itemtitle=\"Mobility Report Trends\"\r\n//   }\r\n  useLayoutEffect(() => {\r\n    var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n\r\n    chart.width = am4core.percent(100);\r\n    chart.height = am4core.percent(100);\r\n    console.log(`titlename:${props.titlename}`)\r\n    \r\n// Add data\r\nchart.data = props.data;\r\nconsole.log(`chart.data[0]: ${JSON.stringify(chart.data[0].Date)}`)\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n// dateAxis.renderer.opposite = true;\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n// Create series\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = props.titlename;\r\nseries.dataFields.dateX = \"Date\";\r\nseries.strokeWidth = 1;\r\nseries.minBulletDistance = 10;\r\nseries.tooltipText = \"{valueY.value}\";\r\nseries.fillOpacity = 0.1;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.fillOpacity = 0.5;\r\nseries.tooltip.label.padding(12, 12, 12, 12)\r\n\r\nvar seriesRange = dateAxis.createSeriesRange(series);\r\nseriesRange.contents.strokeDasharray = \"2,3\";\r\nseriesRange.contents.stroke = chart.colors.getIndex(8);\r\nseriesRange.contents.strokeWidth = 1;\r\n\r\nvar pattern = new am4core.LinePattern();\r\npattern.rotation = -45;\r\npattern.stroke = seriesRange.contents.stroke;\r\npattern.width = 100;\r\npattern.height = 100;\r\npattern.gap = 6;\r\nseriesRange.contents.fill = pattern;\r\nseriesRange.contents.fillOpacity = 0.5;\r\n\r\n// Add scrollbar\r\nchart.scrollbarX = new am4core.Scrollbar();\r\n\r\n// add range\r\nvar range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\nrange.grid.stroke = chart.colors.getIndex(0);\r\nrange.grid.strokeOpacity = 1;\r\n// range.bullet = new am4core.ResizeButton();\r\n// range.bullet.background.fill = chart.colors.getIndex(0);\r\n// range.bullet.background.states.copyFrom(chart.zoomOutButton.background.states);\r\n// range.bullet.minX = 0;\r\n// range.bullet.adapter.add(\"minY\", function(minY, target) {\r\n//   target.maxY = chart.plotContainer.maxHeight;\r\n//   target.maxX = chart.plotContainer.maxWidth;\r\n//   return chart.plotContainer.maxHeight;\r\n// })\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\n\r\n\r\n// var firstTime = new Date(chart.data[0].Date).getTime();\r\n// var lastTime = new Date(chart.data[chart.data.length - 1].Date).getTime();\r\n// var date = new Date(firstTime + (lastTime - firstTime) / 2);\r\n\r\n// range.date = date;\r\n\r\n// seriesRange.date = date;\r\n// seriesRange.endDate = new Date(chart.data[chart.data.length - 1].Date);\r\n\r\n    chartcurr.current = chart;\r\n\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  },[props.titlename,props.data]);\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n        title={props.titlename.replace(\"_\",\" \")}\r\n        \r\n        // subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"200px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateChartsummary(props) {\r\n    const chartcurr = useRef(null);\r\n    const classes = useStyles();\r\n    // let itemtitle=''\r\n    // console.log(`In CreateChart: ${props.btnname}`)\r\n    // if (props.btnname==='Summary') {\r\n    //  itemtitle =\"Latest Day Mobility Report\"\r\n    // } else {\r\n    //  itemtitle=\"Mobility Report Trends\"\r\n    // }\r\n    useLayoutEffect(() => {\r\n      var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n  \r\n      chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\r\n\r\n      chart.data = props.data;\r\n      \r\n      \r\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"Category\";\r\n      categoryAxis.renderer.minGridDistance = 40;\r\n      \r\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      \r\n      var series = chart.series.push(new am4charts.CurvedColumnSeries());\r\n      series.dataFields.categoryX = \"Category\";\r\n      series.dataFields.valueY = \"Value\";\r\n      series.tooltipText = \"{valueY.Value}\"\r\n      series.columns.template.strokeOpacity = 0;\r\n      \r\n      series.columns.template.fillOpacity = 0.75;\r\n      \r\n      var hoverState = series.columns.template.states.create(\"hover\");\r\n      hoverState.properties.fillOpacity = 1;\r\n      hoverState.properties.tension = 0.4;\r\n      \r\n      chart.cursor = new am4charts.XYCursor();\r\n      \r\n      // Add distinctive colors for each column using adapter\r\n      series.columns.template.adapter.add(\"fill\", function(fill, target) {\r\n        return chart.colors.getIndex(target.dataItem.index);\r\n      });\r\n      \r\n    //   chart.scrollbarX = new am4core.Scrollbar();\r\n    //   // chartcurr.current = chart;\r\n  \r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  }, [props.data,props.titlename]);\r\n\r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n          title={props.titlename.replace(\"_\",\" \")}\r\n          \r\n          // subheader=\"For the Year 2020\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n const  MS = () => {\r\n    const classes = useStyles();\r\n    const [state,setState]= useState('Summary');\r\n    const { loading, error, data } = useQuery(mobility);\r\n    // const { loading, error, data } = useQuery(mobilitysummary);\r\n    console.log(`mobilitysummmary: ${error}`)\r\n   \r\n   \r\n    if (loading) {\r\n      return <div>< Loading/></div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n    console.log(`mobility data${JSON.stringify(data.mobility_summary)}`)\r\n    const onClickHandler = (btnname) =>{\r\n      setState(btnname)\r\n      console.log(`btn clicked ${btnname} ${JSON.stringify(data.mobility_summary)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div>\r\n     <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n        <Button onClick={()=>onClickHandler(\"Summary\")}>Summery</Button>\r\n        <Button onClick={()=>onClickHandler(\"Details\")}>Details</Button>\r\n      </ButtonGroup>\r\n      <div>\r\n    <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics\"}\r\n        />\r\n    <Divider />\r\n    </Card>\r\n\r\n    </div>\r\n      <br/>\r\n      <div className={classes.root}>\r\n          <Grid container spacing={2}\r\n          justify=\"center\"\r\n          >\r\n            \r\n            { state==='Summary' ? (\r\n              \r\n              <Grid item xs={12} sm={12} >\r\n             <CreateChartsummary data={data.mobility_summary} btnname={state} titlename={state}/>\r\n             </Grid>):\r\n          (Object.keys(data.mobility[0]).slice(1,-1).map((prop, key)=>{ return (<Grid item xs={3} sm={4} key={key}>\r\n         <CreateChart data={data.mobility} btnname={state} titlename={prop}/>\r\n         </Grid>)}))}\r\n          </Grid>\r\n        \r\n        </div>\r\n\r\n      {/* <CreateChart data={data.mobility} btnname={state} /> */}\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default MS;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './menuOptions';\r\n\r\nimport ActualForecast from './ActualForecast'\r\nimport KPIViews from './KPIViews'\r\n// import MobilitySummary from './MobilitySummary'\r\nimport Ms from './Ms'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Novartis\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            COVID Back to Offie Analytics\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <KPIViews />\r\n          <ActualForecast />\r\n          <Ms />\r\n          {/* <MobilitySummary /> */}\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\n\r\nimport Dashboard from './Dashboard'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const client = new ApolloClient({\r\n//   uri: \"http://localhost:8080/graphql\"\r\n// });\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard></Dashboard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport 'semantic-ui-css/semantic.min.css'\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  // uri: 'http://localhost:8080/graphql'\n  uri:  'http://hfa-backend-hfa.statwb-dev.eu.novartis.net/graphql'\n})\n\nconst client = new ApolloClient({\n  cache,\n  link\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <React.Fragment>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </React.Fragment>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}