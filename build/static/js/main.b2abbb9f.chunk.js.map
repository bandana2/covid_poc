{"version":3,"sources":["Loading.js","Informationbutton.js","ActualForecast.js","SmallBars.js","KPIViews.js","Ms.js","OverallStats.js","Dashboard.js","Page1.js","Page2.js","menuOptions.js","sideBar.js","footer.js","CountryPolicies.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","Segment","Dimmer","active","inverted","Loader","content","Image","src","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","papermodel","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","root","Informationbutton","props","classes","React","useState","open","setOpen","IconButton","color","aria-label","onClick","style","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","header","TextField","label","variant","width","multiline","value","body","header1","body1","am4core","am4themes_animated","maxWidth","borderRadius","height","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","button","textAlign","action","data1","gql","CreateChart","chart","useRef","itemtitle","console","log","btnname","useLayoutEffect","x","am4charts","paddingRight","data","dateAxis","xAxes","push","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","series","dataFields","dateX","valueY","name","tooltipText","cursor","scrollbarX","range","axisRanges","stroke","colors","getIndex","strokeOpacity","seriesRange","createSeriesRange","contents","strokeDasharray","strokeWidth","legend","bullet","fill","states","copyFrom","zoomOutButton","minX","adapter","add","minY","target","maxY","plotContainer","maxHeight","maxX","min_act","reduce","olddt","newdt","Date","Type","max_act","JSON","stringify","date","endDate","logo","current","dispose","Card","CardHeader","title","subheader","Divider","CardContent","CardActions","Button","size","href","textDecoration","ActualForecast","useQuery","loading","error","state","setState","onClickHandler","ButtonGroup","marginBottom","actuals","querygraph","flexGrow","text","secondary","margin","Griditem","Grid","container","justify","item","xs","sm","chtname","axis","SmallBarsViews","labels","startLocation","endLocation","cursorTooltipEnabled","min","baseGrid","lineY","tensionX","bullets","circle","opacity","propertyFields","radius","SmallBars","cases_per_thousand","paper1","data2","ACTIVE_CASES_PER_1000","NEW_CASES_PER_10000","DEATHS_PER_1000","capacity","component","chartContainer","createChild","y","circleMask","waves","mask","horizontalCenter","waveHeight","waveLength","events","on","smallerSize","Math","pixelWidth","pixelHeight","max","labelRadius","capacityLabel","path","moveTo","arcToPoint","locationOnPath","pixelRadius","animate","property","to","from","elasticOut","setValue","formattedValue","numberFormatter","format","toUpperCase","fontSize","KPIViews","latest_cases_per_thousand","headermain","mobility","chartcurr","titlename","minGridDistance","minBulletDistance","fillOpacity","pointerOrientation","cornerRadius","pattern","rotation","gap","replace","CreateChartsummary","hiddenState","properties","categoryAxis","category","categoryX","columns","hoverState","tension","dataItem","index","MS","placeRender","mobility_summary","Object","keys","slice","map","prop","key","query_stats","ColorButton","withStyles","getContrastText","ColorButton1","ColorButton2","fontWeight","whiteSpace","textsmall","icon","paddingright","OverallStats_View","createMuiTheme","primary","green","fluid","Row","Col","col-lg-4","col-6","startIcon","Typography","gutterBottom","parseInt","Confirmed","toLocaleString","Recovered","disableRipple","Deceased","OverallStats","overall_stats","Dashboard","Ms","Page1","policyindex","Page2","policy_index","am4plugins_forceDirected","networkSeries","children","linkWith","links","distance","nodes","outerCircle","scale","hideOversized","truncate","minRadius","manyBodyStrength","mainListItems","option","ListItem","ListItemIcon","ListItemText","ListSubheader","toolbar","toolbarIcon","mixins","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","overflow","paddingBottom","flexDirection","fixedHeight","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","Drawer","List","Copyright","align","Link","getFullYear","Footer","Box","pt","clock","CountryPolicies","country_policies_india","country_policies_telangana","interfaceColors","am4plugins_timeline","reverse","start","end","dateFormatter","dateFormat","inputDateFormat","dy","maskBullets","innerRadius","getTime","baseInterval","count","timeUnit","points","autoScale","polyspline","tooltipLocation","line","getFor","labelTemplate","verticalCenter","openDateX","categoryY","flagBullet1","am4plugins_bullets","locationX","flagBullet2","bullet2","parent","bottomAxesContainer","xAxis","yAxis","lineX","tooltipLocation2","toBack","startAngle","endAngle","strictMinMax","minLabelPosition","inside","ticks","length","endValue","visible","tick","axisFill","hourHand","hands","startWidth","endWidth","rotationDirection","pin","minutesHand","event","positionToValue","xPosition","hours","getHours","minutes","getMinutes","showValue","PolicyIndex","mainContainer","layout","usData","maleChart","parse","maleCategoryAxis","inversed","maleValueAxis","maleSeries","valueX","femaleChart","paddingLeft","femaleCategoryAxis","opposite","femaleValueAxis","femaleSeries","App","Container","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","ReactDOM","render","Fragment","StrictMode","document","getElementById"],"mappings":"4UAuBeA,EApBC,kBACd,8BASE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,EAAvB,SACE,cAACC,EAAA,EAAD,CAAQD,UAAQ,EAACE,QAAQ,cAG3B,cAACC,EAAA,EAAD,CAAOC,IAAI,gD,yLCTXC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,WAAY,CACVC,gBAAiBN,EAAMO,QAAQC,WAAWC,MAC1CC,OAAQ,iBACRC,UAAWX,EAAMY,QAAQ,GACzBC,QAASb,EAAMc,QAAQ,EAAG,EAAG,IAE/BC,KAAK,CACHF,QAAQ,YAGG,SAASG,EAAkBC,GACtC,IAAMC,EAAUpB,IAD6B,EAErBqB,IAAMC,UAAS,GAFM,mBAEtCC,EAFsC,KAEhCC,EAFgC,KAY7C,OACE,gCAGN,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,aAAW,OAAOC,QAZvB,WACjBJ,GAAQ,IAWqDK,MAAO,CAACd,QAAS,QAApF,SACI,cAAC,IAAD,MAEI,cAACe,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBC,UAAWb,EAAQjB,MACnBoB,KAAMA,EACNW,QAhBc,WAClBV,GAAQ,IAgBJW,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,KATb,SAYE,cAACC,EAAA,EAAD,CAAMC,GAAIlB,EAAV,SACE,sBAAKU,UAAWb,EAAQb,WAAxB,UAEE,oBAAImC,GAAG,yBAAP,SAAiCvB,EAAMwB,SACrC,cAACC,EAAA,EAAD,CAAWF,GAAG,iBAAiBG,MAAM,GAAGC,QAAQ,WAAWjB,MAAO,CAACkB,MAAO,SAC1EC,WAAS,EACTC,MAAO9B,EAAM+B,OAEd,oBAAIR,GAAG,yBAAP,SAAiCvB,EAAMgC,UACtC,cAACP,EAAA,EAAD,CAAWF,GAAG,iBAAiBG,MAAM,GAAGC,QAAQ,WAAWjB,MAAO,CAACkB,MAAO,SAC1EC,WAAS,EACTC,MAAO9B,EAAMiC,kB,qMCjC7BC,IAAiBC,KAEjB,IAAMtD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,QAIZZ,OAAO,CACLjC,WAAY,mDACZ8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,yCAEb6C,MAAO,CACLD,OAAQ,EACRE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN7D,gBAAiB8D,IAAI,MAEvBC,OAAO,CACLC,UAAU,QAEZC,OAAQ,CACNjE,gBAAiB,QAKjBO,QAAS,YAMT2D,EAAQC,IAAH,KASX,SAASC,EAAYzD,GACnB,IAAM0D,EAAQC,iBAAO,MACf1D,EAAUpB,IACZ+E,EAAU,GACdC,QAAQC,IAAR,0BAA+B9D,EAAM+D,UAEpCH,EADmB,cAAhB5D,EAAM+D,QACE,8BACc,cAAhB/D,EAAM+D,QACL,8BAEA,6BAEXC,2BAAgB,WACd,IAAIC,EAAI/B,IAAe,WAAYgC,KAEnCD,EAAEE,aAAe,GAUjBF,EAAEG,KAAOpE,EAAMoE,KAEf,IAAIC,EAAWJ,EAAEK,MAAMC,KAAK,IAAIL,KAChCG,EAASG,SAASC,KAAKC,SAASC,SAAW,EAE3C,IAAIC,EAAYX,EAAEY,MAAMN,KAAK,IAAIL,KACjCU,EAAUE,QAAQC,UAAW,EAC7BH,EAAUJ,SAASQ,SAAW,GAE9B,IAAIC,EAAShB,EAAEgB,OAAOV,KAAK,IAAIL,KAC/Be,EAAOC,WAAWC,MAAQ,OAC1BF,EAAOC,WAAWE,OAASpF,EAAM+D,QACjCkB,EAAOI,KAAK,UACZJ,EAAOK,YAAc,iBACrBrB,EAAEsB,OAAS,IAAIrB,IAEf,IAAIsB,EAAa,IAAItB,IACrBsB,EAAWP,OAAOV,KAAKU,GACvBhB,EAAEuB,WAAaA,EACf,IAAIC,EAAQpB,EAASqB,WAAWnB,KAAK,IAAIL,KACzCuB,EAAMhB,KAAKkB,OAAS1B,EAAE2B,OAAOC,SAAS,GACtCJ,EAAMhB,KAAKqB,cAAgB,EAE3B,IAAIC,EAAc1B,EAAS2B,kBAAkBf,GAC7Cc,EAAYE,SAASC,gBAAkB,MACvCH,EAAYE,SAASN,OAAS1B,EAAE2B,OAAOC,SAAS,GAChDE,EAAYE,SAASE,YAAc,EACnCJ,EAAYV,KAAK,IACrBpB,EAAEmC,OAAS,IAAIlC,IAEfuB,EAAMY,OAAS,IAAInE,IACnBuD,EAAMY,OAAO9G,WAAW+G,KAAOrC,EAAE2B,OAAOC,SAAS,GACjDJ,EAAMY,OAAO9G,WAAWgH,OAAOC,SAASvC,EAAEwC,cAAclH,WAAWgH,QACnEd,EAAMY,OAAOK,KAAO,EACpBjB,EAAMY,OAAOM,QAAQC,IAAI,QAAQ,SAASC,EAAMC,GAG9C,OAFAA,EAAOC,KAAO9C,EAAE+C,cAAcC,UAC9BH,EAAOI,KAAOjD,EAAE+C,cAAc5E,SACvB6B,EAAE+C,cAAcC,aAQzB,IAAIE,EAAQnH,EAAMoE,KAAKgD,QACrB,SAACC,EAAMC,GAAP,OACC,IAAIC,KAAKF,EAAME,OAAsB,YAAbF,EAAMG,OAAqB,IAAID,KAAKD,EAAMC,OAAsB,YAAbD,EAAME,MAChFH,EAAMC,KAGJG,EAAQzH,EAAMoE,KAAKgD,QACrB,SAACC,EAAMC,GAAP,OACC,IAAIC,KAAKF,EAAME,OAAsB,YAAbF,EAAMG,OAAqB,IAAID,KAAKD,EAAMC,OAAsB,YAAbD,EAAME,MAChFH,EAAMC,KAgBR,OAdJzD,QAAQC,IAAR,kBAAuB4D,KAAKC,UAAUR,GAAtC,mBAAyDO,KAAKC,UAAUF,KAExEhC,EAAMmC,KAAO,IAAIL,KAAKJ,EAAQI,MAC9BxB,EAAY6B,KAAO,IAAIL,KAAKJ,EAAQI,MACpCxB,EAAY8B,QAAU,IAAIN,KAAKE,EAAQF,MAOvCtD,EAAE6D,KAAKxF,QAAW,KACdoB,EAAMqE,QAAU9D,EAET,WACLA,EAAE+D,aAEJ,CAAChI,EAAM+D,QAAQ/D,EAAMoE,OAEvB,OAEA,8BACD,eAAC6D,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQuB,OAE9B8B,OACE,cAACvD,EAAD,CAAmByB,OAAO,gBAC1BO,KACA,oLAEAC,QAAQ,wBACRC,MACA,6IAEAnB,UAAWb,EAAQqD,OAAQ5C,MAAO,CAACd,QAAS,UAGxCuI,MAAOvE,EACPwE,UAAU,8BAGjB,cAACC,EAAA,EAAD,IACG,cAACC,EAAA,EAAD,CAAc/G,GAAG,WAAWb,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,WAC5D,cAACiG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQlI,MAAM,UAA3B,SACE,mBAAGmI,KAAK,kEAAkE5B,OAAO,SAASpG,MAAO,CAACiI,eAAe,QAAjH,sDAWT,IA2CcC,EA3CU,WAAO,IAAD,EACMC,YAAStF,GAAlCuF,EADmB,EACnBA,QAASC,EADU,EACVA,MAAO3E,EADG,EACHA,KADG,EAENjE,mBAAS,aAFH,mBAEvB6I,EAFuB,KAEjBC,EAFiB,KAIdpK,IAEb,GAAIiK,EACF,OAAO,qBAAKhI,UAAU,eAAf,wBAET,GAAIiI,EAEF,OADAlF,QAAQkF,MAAMA,GACN,wCAIV,IAAMG,EAAiB,SAACnF,EAAQK,GAC9B6E,EAASlF,IAIX,OAGA,mCACA,sBAAKrD,MAAO,CAAC2C,UAAU,QAAvB,UACC,uBAGD,eAAC8F,EAAA,EAAD,CAAa5I,MAAM,YAAYC,aAAW,kCAAkCE,MAAO,CAAC0I,aAAa,OAAjG,UACI,cAACZ,EAAA,EAAD,CAAQ/H,QAAS,kBAAIyI,EAAe,YAAY9E,EAAKiF,UAArD,uBACA,cAACb,EAAA,EAAD,CAAQ/H,QAAS,kBAAIyI,EAAe,YAAY9E,EAAKiF,UAArD,uBACA,cAACb,EAAA,EAAD,CAAQ/H,QAAS,kBAAIyI,EAAe,WAAW9E,EAAKiF,UAApD,0BAEF,cAAC5F,EAAD,CAAaW,KAAMA,EAAKiF,QAAStF,QAASiF,U,kPCvPhD,IAAMM,EAAa9F,IAAH,KAQV3E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,OACVmH,SAAU,GAIZhH,MAAO,CACLD,OAAQ,EACRE,WAAY,MAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN7D,gBAAiB8D,IAAI,MAEvB3D,MAAO,CACHI,QAASb,EAAMc,QAAQ,GACvBwD,UAAW,SACX9C,MAAOxB,EAAMO,QAAQkK,KAAKC,UAC1BC,OAAQ,OAERrH,aAAc,EACd5C,OAAQ,EAIRC,UAAW,4CAMZ,SAASiK,EAAS3J,GAGjB,IAAMC,EAAUpB,IAEhB,OACI,qBAAKiC,UAAWb,EAAQH,KAAxB,SACE,eAAC8J,EAAA,EAAD,CAAMC,WAAS,EAAChK,QAAS,EAAGiB,UAAWb,EAAQH,KAC/CgK,QAAQ,SADR,UAIE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAG1I,GAAG,IAA5B,SAEA,cAAC,GAAD,CAAiB2I,QAAQ,SAAS3J,MAAM,UAAW6D,KAAMpE,EAAMoE,KAAM+F,KAAK,4BAE1E,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAG1I,GAAG,IAA5B,SAEE,cAAC,GAAD,CAAgB2I,QAAQ,SAAS3J,MAAM,UAAU6D,KAAMpE,EAAMoE,KAAM+F,KAAK,0BAE1E,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAG1I,GAAG,IAA5B,SAEE,cAAC,GAAD,CAAgB2I,QAAQ,SAAS3J,MAAM,UAAW6D,KAAMpE,EAAMoE,KAAM+F,KAAK,2BAS3F,IAAQC,GAAgB,SAACpK,GAiDzB,OA/CA6D,QAAQC,IAAR,UAAe9D,EAAMoE,OACrBJ,2BAAgB,WACZ9B,IAAiBC,KAEjB,IAAIuB,EAAQxB,IAAelC,EAAMkK,QAAShG,KAC1CR,EAAMoE,KAAKxF,QAAW,KACtBoB,EAAMU,KAAMpE,EAAMoE,KAElBV,EAAM9D,QAAQ,EAAG,EAAG,EAAG,GAEvB,IAAIyE,EAAWX,EAAMY,MAAMC,KAAK,IAAIL,KACpCG,EAASG,SAASC,KAAKC,SAASK,UAAW,EAC3CV,EAASG,SAAS6F,OAAO3F,SAASK,UAAW,EAC7CV,EAASiG,cAAgB,GACzBjG,EAASkG,YAAc,GACvBlG,EAASmG,sBAAuB,EAEhC,IAAI5F,EAAYlB,EAAMmB,MAAMN,KAAK,IAAIL,KACrCU,EAAU6F,IAAM,EAChB7F,EAAUJ,SAASC,KAAKC,SAASK,UAAW,EAC5CH,EAAUJ,SAASkG,SAAS3F,UAAW,EACvCH,EAAUJ,SAAS6F,OAAO3F,SAASK,UAAW,EAC9CH,EAAU4F,sBAAuB,EAEjC9G,EAAM6B,OAAS,IAAIrB,IACnBR,EAAM6B,OAAOoF,MAAM5F,UAAW,EAE9B,IAAIE,EAASvB,EAAMuB,OAAOV,KAAK,IAAIL,KACnCe,EAAOK,YAAP,wBAAmD,0BAAbtF,EAAMmK,KAAiC,0BAAuC,wBAAbnK,EAAMmK,KAA+B,wBAAqC,oBAAbnK,EAAMmK,KAAyB,oBAAoB,IACvNlF,EAAOC,WAAWC,MAAQ,OAC1BF,EAAOC,WAAWE,OAASpF,EAAMmK,KACjClF,EAAO2F,SAAW,GAClB3F,EAAOkB,YAAc,EACrBlB,EAAOU,OAASzD,IAAclC,EAAMO,OAGpC,IAAI8F,EAASpB,EAAO4F,QAAQtG,KAAK,IAAIL,KAMtC,OALCmC,EAAOyE,OAAOC,QAAU,EACxB1E,EAAOyE,OAAOE,eAAeD,QAAU,UACvC1E,EAAOyE,OAAOG,OAAS,EAGjB,WACNvH,EAAMsE,aAEP,CAAChI,EAAMoE,KAAKpE,EAAMkK,UAGjB,qBAAK3I,GAAIvB,EAAMkK,WAsBJgB,GAhBU,WAAK,IAAD,EACQrC,YAASS,GAAlCR,EADiB,EACjBA,QAASC,EADQ,EACRA,MAAO3E,EADC,EACDA,KAExB,OAAI0E,EACK,qBAAKhI,UAAU,eAAf,wBAELiI,GACFlF,QAAQkF,MAAOA,GACP,yCAGV,cAACY,EAAD,CAAUvF,KAAMA,EAAK+G,sB,8NClHzBjJ,IAAiBC,KAIjB,IAAMtD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,OACVmH,SAAU,EACVlG,UAAU,QAGZd,MAAO,CACLD,OAAQ,EACRE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbY,OAAQ,CACNjE,gBAAiB,QAKjBO,QAAS,QAEXJ,MAAO,CACHI,QAASb,EAAMc,QAAQ,GACvBwD,UAAW,SACX9C,MAAOxB,EAAMO,QAAQkK,KAAKC,UAC1BC,OAAQ,OAERrH,aAAc,EACd5C,OAAQ,EAIRC,UAAW,wCAGbV,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBiM,OAAQ,CACN/L,gBAAiBN,EAAMO,QAAQC,WAAWC,MAC1CC,OAAQ,iBACRC,UAAWX,EAAMY,QAAQ,GACzBC,QAASb,EAAMc,QAAQ,EAAG,EAAG,IAE/B2B,OAAO,CACLjC,WAAY,mDACd8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,6CAKX2L,GAAQ7H,IAAH,MAOX,SAASmG,GAAS3J,GAGd,IAAMC,EAAUpB,KAEhB,OACI,qBAAKiC,UAAWb,EAAQH,KAAxB,SACE,eAAC8J,EAAA,EAAD,CAAMC,WAAS,EAAChK,QAAS,EACzBiK,QAAQ,SADR,UAIE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SAEA,cAAC,GAAD,CAAaC,QAAQ,QAAQ3J,MAAM,UAAU4H,MAAM,sBAAsBrG,MAAO9B,EAAMoE,KAAK,GAAGkH,0BAE9F,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SAEE,cAAC,GAAD,CAAaC,QAAQ,QAAQ3J,MAAM,UAAU4H,MAAM,oBAAoBrG,MAAO9B,EAAMoE,KAAK,GAAGmH,wBAE9F,cAAC3B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SAEE,cAAC,GAAD,CAAaC,QAAQ,QAAQ3J,MAAM,UAAU4H,MAAM,gBAAgBrG,MAAO9B,EAAMoE,KAAK,GAAGoH,yBAQtG,SAAS/H,GAAYzD,GACnB,IAAM0D,EAAQC,iBAAO,MAmFrB,OAjFAK,2BAAgB,WAEd,IAAIyH,EAAW,IACX3J,EAAQ9B,EAAM8B,MAElB+B,QAAQC,IAAI9D,EAAM8B,OAClB,IAAI4J,EAAYxJ,IAAelC,EAAMkK,QAAShI,KAC9CwJ,EAAU9J,MAAQM,IAAgB,KAClCwJ,EAAUpJ,OAASJ,IAAgB,KACnCwJ,EAAU5D,KAAKxF,QAAW,KAC1B,IAAIqJ,EAAiBD,EAAUE,YAAY1J,KAC3CyJ,EAAe1H,EAAI/B,IAAgB,IACnCyJ,EAAeE,EAAI3J,IAAgB,IAEnC,IAAI4I,EAASa,EAAeC,YAAY1J,KACxC4I,EAAOxE,KAAOpE,IAAc,WAE5B,IAAI4J,EAAaH,EAAeC,YAAY1J,KAExC6J,EAAQJ,EAAeC,YAAY1J,KACvC6J,EAAMzF,KAAOpE,IAAclC,EAAMO,OACjCwL,EAAMC,KAAOF,EACbC,EAAME,iBAAmB,SACzBF,EAAMG,WAAa,GACnBH,EAAMI,WAAa,GACnBJ,EAAMF,EAAI,IACVC,EAAWD,GAAK,IAEhBH,EAAUU,OAAOC,GAAG,kBAAkB,WACpC,IAAIC,EAAcC,KAAK9B,IAAIiB,EAAUc,WAAYd,EAAUe,aACvDxB,EA1BW,GA0BFqB,EAA2B,EAExCxB,EAAOG,OAASA,EAChBa,EAAWb,OAASA,EACpBc,EAAMzJ,OAASgK,EACfP,EAAMnK,MAAQ2K,KAAKG,IAAIhB,EAAUc,WAAYd,EAAUe,aAIvD,IAAIE,EAAc1B,EAAS,GAE3B2B,EAAcC,KAAO3K,IAAa4K,OAAO,CAAC7I,GAAG0I,EAAad,EAAE,IAAM3J,IAAa6K,WAAW,CAAC9I,EAAE0I,EAAad,EAAE,GAAIc,EAAaA,GAC7HC,EAAcI,eAAiB,GAMjC,SAAkBlL,GACf,IAAI+J,GAAMf,EAAOG,OAASc,EAAMG,YAAc,EAAIpK,EAAQ2J,GAAYX,EAAOmC,YAAc,EAC3FlB,EAAMmB,QAAQ,CAAC,CAACC,SAAS,IAAKC,GAAGvB,GAAI,CAACsB,SAAS,aAAcC,GAAG,GAAIC,KAAK,IAAK,CAACF,SAAS,IAAKE,MAAM,GAAID,GAAG,IAAK,IAAMlL,IAAaoL,YAClIxB,EAAWoB,QAAQ,CAAC,CAACC,SAAS,IAAKC,IAAIvB,GAAG,CAACsB,SAAS,IAAKE,KAAK,GAAID,GAAG,IAAK,IAAMlL,IAAaoL,YAP9FC,CAASzL,MAWX,IAAIJ,EAAQiK,EAAeC,YAAY1J,KACnCsL,EAAiB9B,EAAU+B,gBAAgBC,OAAO5L,EAAO,QAC7D0L,EAAiBA,EAAeG,cAEhCjM,EAAM8H,KAAO1H,EACbJ,EAAM4E,KAAOpE,IAAc,WAC3BR,EAAMkM,SAAW,GACjBlM,EAAMuK,iBAAmB,SAGzB,IAAIW,EAAgBjB,EAAeC,YAAY1J,KAEvBwJ,EAAU+B,gBAAgBC,OAAOjC,EAAU,QAAQkC,cAS3E,OARA9J,QAAQC,IAAI9D,EAAMmI,OAClByE,EAAcpD,KAAOxJ,EAAMmI,MAC3ByE,EAActG,KAAOpE,IAAc,WACnC0K,EAAcgB,SAAW,GACzBhB,EAAcvJ,UAAY,SAC1BuJ,EAAchN,QAAQ,EAAE,EAAE,EAAE,GAE5B8D,EAAMqE,QAAU2D,EACT,WACHA,EAAU1D,aAEb,CAAChI,EAAMoE,KAAKpE,EAAMkK,UAIrB,qBAAK3I,GAAIvB,EAAMkK,UAOhB,IAgEc2D,GAhEI,WAAO,IAAD,EACYhF,YAASwC,IAAlCvC,EADa,EACbA,QAASC,EADI,EACJA,MAAO3E,EADH,EACGA,KAClBnE,EAAUpB,KAGhB,OAAIiK,EACK,qBAAKhI,UAAU,eAAf,wBAELiI,GACFlF,QAAQkF,MAAOA,GACP,yCAEH,sBAAKrI,MAAO,CAAC2C,UAAU,UAAvB,UAAkC,uBAC3C,eAAC4E,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UACD,cAACoI,EAAA,EAAD,CACApH,UAAWb,EAAQuB,OAGlB8B,OAEQ,cAACvD,EAAD,CAAmByB,OAAO,gBAC1BO,KACA,0GACAC,QAAQ,wBACRC,MACA,4TAEAnB,UAAWb,EAAQqD,SAIrB6E,MAAM,gBACNC,UAAU,kBAMjB,cAACC,EAAA,EAAD,IACG,eAACC,EAAA,EAAD,CAAa5H,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,SAA7C,UACA,cAAC,GAAD,CAAW8B,KAAMA,EAAK0J,4BACtB,cAAC,GAAD,OAEA,cAACvF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQlI,MAAM,UAA3B,SACE,mBAAGmI,KAAK,wGAAwG5B,OAAO,SAASpG,MAAO,CAACiI,eAAe,QAAvJ,uE,gRCjQVzG,IAAiBC,KAEjB,IAAMtD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,OACVmH,SAAU,EACVlG,UAAU,QACV7B,OAAO,CACLjC,WAAY,mDACZ8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,yCAEbqO,WAAW,CACTxO,WAAY,mDACZG,UAAW,wCACXa,MAAO,SAEXgC,MAAO,CACLD,OAAQ,EACRE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN7D,gBAAiB8D,IAAI,MAEvB3D,MAAO,CACHI,QAASb,EAAMc,QAAQ,GACvBwD,UAAW,SACX9C,MAAOxB,EAAMO,QAAQkK,KAAKC,UAC1BC,OAAQ,QAGVpG,OAAQ,CACNjE,gBAAiB,QAKjBO,QAAS,YAMXoO,GAAWxK,IAAH,MAmBd,SAASC,GAAYzD,GACnB,IAAMiO,EAAYtK,iBAAO,MACnB1D,EAAUpB,KAgGhB,OAxFAmF,2BAAgB,WACd,IAAIN,EAAQxB,IAAelC,EAAMkO,UAAWhK,KAE5CR,EAAM9B,MAAQM,IAAgB,KAC9BwB,EAAMpB,OAASJ,IAAgB,KAC/BwB,EAAMoE,KAAKxF,QAAW,KACtBuB,QAAQC,IAAR,oBAAyB9D,EAAMkO,YAGnCxK,EAAMU,KAAOpE,EAAMoE,KACnBP,QAAQC,IAAR,yBAA8B4D,KAAKC,UAAUjE,EAAMU,KAAK,GAAGmD,QAE3D,IAAIlD,EAAWX,EAAMY,MAAMC,KAAK,IAAIL,KACpCG,EAASG,SAASC,KAAKC,SAASC,SAAW,EAC3CN,EAASG,SAAS2J,gBAAkB,GAGpBzK,EAAMmB,MAAMN,KAAK,IAAIL,KAArC,IAGIe,EAASvB,EAAMuB,OAAOV,KAAK,IAAIL,KACnCe,EAAOC,WAAWE,OAASpF,EAAMkO,UACjCjJ,EAAOC,WAAWC,MAAQ,OAC1BF,EAAOkB,YAAc,EACrBlB,EAAOmJ,kBAAoB,GAE3BnJ,EAAOK,YAAa,KACpBL,EAAOoJ,YAAc,GACrBpJ,EAAOH,QAAQwJ,mBAAqB,WACpCrJ,EAAOH,QAAQvF,WAAWgP,aAAe,GACzCtJ,EAAOH,QAAQvF,WAAW8O,YAAc,GACxCpJ,EAAOH,QAAQpD,MAAM9B,QAAQ,GAAI,GAAI,GAAI,IAEzC,IAAImG,EAAc1B,EAAS2B,kBAAkBf,GAC7Cc,EAAYE,SAASC,gBAAkB,MACvCH,EAAYE,SAASN,OAASjC,EAAMkC,OAAOC,SAAS,GACpDE,EAAYE,SAASE,YAAc,EAEnC,IAAIqI,EAAU,IAAItM,IAClBsM,EAAQC,UAAY,GACpBD,EAAQ7I,OAASI,EAAYE,SAASN,OACtC6I,EAAQ5M,MAAQ,IAChB4M,EAAQlM,OAAS,IACjBkM,EAAQE,IAAM,EACd3I,EAAYE,SAASK,KAAOkI,EAC5BzI,EAAYE,SAASoI,YAAc,GAGnC3K,EAAM8B,WAAa,IAAItD,IAGvB,IAAIuD,EAAQpB,EAASqB,WAAWnB,KAAK,IAAIL,KAgCrC,OA/BJuB,EAAMhB,KAAKkB,OAASjC,EAAMkC,OAAOC,SAAS,GAC1CJ,EAAMhB,KAAKqB,cAAgB,EA4BvBmI,EAAUlG,QAAUrE,EAEb,WACLA,EAAMsE,aAER,CAAChI,EAAMkO,UAAUlO,EAAMoE,OAIzB,8BACD,eAAC6D,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQuB,OACxB2G,MAAOnI,EAAMkO,UAAUS,QAAQ,IAAI,OAK1C,cAACtG,EAAA,EAAD,IACG,cAACC,EAAA,EAAD,CAAc/G,GAAIvB,EAAMkO,UAAWxN,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,gBAOvE,SAASsM,GAAmB5O,GACN2D,iBAAO,MAAzB,IACM1D,EAAUpB,KAkDhB,OA1CAmF,2BAAgB,WACd,IAAIN,EAAQxB,IAAelC,EAAMkO,UAAWhK,KAC5CR,EAAMoE,KAAKxF,QAAW,KACtBoB,EAAMmL,YAAYC,WAAW/D,QAAU,EAEvCrH,EAAMU,KAAOpE,EAAMoE,KAGnB,IAAI2K,EAAerL,EAAMY,MAAMC,KAAK,IAAIL,KACxC6K,EAAavK,SAASC,KAAKC,SAASC,SAAW,EAC/CoK,EAAa7J,WAAW8J,SAAW,WACnCD,EAAavK,SAAS2J,gBAAkB,GAExBzK,EAAMmB,MAAMN,KAAK,IAAIL,KAC3BsG,sBAAuB,EACjC,IAAIvF,EAASvB,EAAMuB,OAAOV,KAAK,IAAIL,KACnCe,EAAOC,WAAW+J,UAAY,WAC9BhK,EAAOC,WAAWE,OAAS,QAC3BH,EAAOK,YAAc,iBACrBL,EAAOiK,QAAQxK,SAASoB,cAAgB,EAExCb,EAAOiK,QAAQxK,SAAS2J,YAAc,IAEtC,IAAIc,EAAalK,EAAOiK,QAAQxK,SAAS6B,OAAOzD,OAAO,SAczD,OAbEqM,EAAWL,WAAWT,YAAc,EACpCc,EAAWL,WAAWM,QAAU,GAEhC1L,EAAM6B,OAAS,IAAIrB,IAGnBe,EAAOiK,QAAQxK,SAASiC,QAAQC,IAAI,QAAQ,SAASN,EAAMQ,GACzD,OAAOpD,EAAMkC,OAAOC,SAASiB,EAAOuI,SAASC,UAM1C,WACL5L,EAAMsE,aAEP,CAAChI,EAAMoE,KAAKpE,EAAMkO,YAInB,8BACD,eAACjG,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQuB,OACxB2G,MAAOnI,EAAMkO,UAAUS,QAAQ,IAAI,KAGnCrL,OACE,cAACvD,EAAD,CAAmByB,OAAO,gBAC1BO,KACA,qWAEAC,QAAQ,wBACRC,MACA,+YAGAnB,UAAWb,EAAQqD,WAK5B,cAAC+E,EAAA,EAAD,IACG,cAACC,EAAA,EAAD,CAAc/G,GAAIvB,EAAMkO,UAAWxN,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,WACnE,cAACiG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQlI,MAAM,UAA3B,SACE,mBAAGmI,KAAK,2CAA2C5B,OAAO,SAASpG,MAAO,CAACiI,eAAe,QAA1F,8CAWT,IAsEc4G,GAtEF,SAACvP,GACV,IAAMC,EAAUpB,KADI,EAEIsB,mBAASH,EAAMwP,aAFnB,mBAEbxG,EAFa,aAGaH,YAASmF,KAAlClF,EAHY,EAGZA,QAASC,EAHG,EAGHA,MAAO3E,EAHJ,EAGIA,KAKxB,GAHAP,QAAQC,IAAR,4BAAiCiF,IAG7BD,EACF,OAAO,8BAAK,cAAE,EAAF,MAEd,GAAIC,EAEF,OADAlF,QAAQkF,MAAMA,GACN,wCAGVlF,QAAQC,IAAR,uBAA4B4D,KAAKC,UAAUvD,EAAKqL,oBAMhD,OAGA,mCACA,gCAME,wBAUA,uBACA,qBAAK3O,UAAWb,EAAQH,KAAxB,SACI,cAAC8J,EAAA,EAAD,CAAMC,WAAS,EAAChK,QAAS,EACzBiK,QAAQ,SADR,SAIY,YAARd,EAEA,cAACY,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACD,cAAC2E,GAAD,CAAoBxK,KAAMA,EAAKqL,iBAAkB1L,QAASiF,EAAOkF,UAAW,uBAE9EwB,OAAOC,KAAKvL,EAAK4J,SAAS,IAAI4B,MAAM,GAAG,GAAGC,KAAI,SAACC,EAAMC,GAAQ,OAAQ,cAACnG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACvE,cAAC,GAAD,CAAa7F,KAAMA,EAAK4J,SAAUjK,QAASiF,EAAOkF,UAAW4B,KADwCC,gB,+TCjW9G,IAAMC,GAAcxM,IAAH,MA+CTyM,GAAcC,cAAW,SAACnR,GAAD,MAAY,CACzCe,KAAM,CACJS,MAAOxB,EAAMO,QAAQ6Q,gBAAgB,WACrC9Q,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,eALH6Q,CAQhB1H,KAEE4H,GAAeF,cAAW,SAACnR,GAAD,MAAY,CAC1Ce,KAAM,CACJS,MAAOxB,EAAMO,QAAQ6Q,gBAAgB,WACrC9Q,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,eALF6Q,CAQjB1H,KAEE6H,GAAeH,cAAW,SAACnR,GAAD,MAAY,CAC1Ce,KAAM,CACJS,MAAOxB,EAAMO,QAAQ6Q,gBAAgB,WACrC9Q,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,eALF6Q,CAQjB1H,KAGE3J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2K,OAAQ,CACNA,OAAQ3K,EAAMc,QAAQ,GACtByC,OAAO,QACPV,MAAM,QACNyB,UAAU,UAGZmG,KAAM,CACF5H,MAAO,OACPQ,SAAU,IACVwL,SAAU,SACV0C,WAAW,MACX5G,OAAO,aACP6G,WAAW,UAEbC,UAAW,CACT5O,MAAO,OACPQ,SAAU,IACVwL,SAAU,QAGZ6C,KAAK,CACH7O,MAAO,GACPU,OAAQ,GACRoO,aAAa,EACbhH,OAAO,eAaRiH,IARSC,aAAe,CAC3BtR,QAAS,CACPuR,QAASC,QAMY,SAAC9Q,GACxB,IAAMC,EAAUpB,KAEhB,OACI,gCAAK,uBAAK,uBACV,cAAC,KAAD,CAAWkS,OAAO,EAAlB,SACC,eAACC,GAAA,EAAD,WACG,cAACC,GAAA,EAAD,CAAKC,YAAA,EAASC,SAAA,EAAd,SACA,cAAClB,GAAD,CAAatO,QAAQ,YAAYpB,MAAM,UAAUO,UAAWb,EAAQyJ,OAAQ0H,UAAW,cAAC,KAAD,CAAwBtQ,UAAWb,EAAQwQ,OAAlI,SACI,eAAC,KAAD,WACI,cAACO,GAAA,EAAD,UAAK,cAACC,GAAA,EAAD,UACL,cAACI,GAAA,EAAD,CAAY1P,QAAQ,KAAK+J,UAAU,KAAK4F,cAAY,EAACxQ,UAAWb,EAAQuJ,KAAxE,SACI+H,SAASvR,EAAMoE,KAAKoN,WAAWC,uBAGnC,cAACT,GAAA,EAAD,UAAK,cAACC,GAAA,EAAD,UACL,cAACI,GAAA,EAAD,CAAY1P,QAAQ,KAAK+J,UAAU,KAAK4F,cAAY,EAACxQ,UAAWb,EAAQuQ,UAAxE,8CAOR,cAACS,GAAA,EAAD,CAAKC,YAAA,EAASC,SAAA,EAAd,SACI,cAACf,GAAD,CAAczO,QAAQ,YAAYpB,MAAM,UAAUO,UAAWb,EAAQyJ,OAAQ0H,UAAW,cAAC,KAAD,CAAiBtQ,UAAWb,EAAQwQ,OAA5H,SACA,eAAC,KAAD,WACI,cAACO,GAAA,EAAD,UAAK,cAACC,GAAA,EAAD,UAEL,cAACI,GAAA,EAAD,CAAY1P,QAAQ,KAAK+J,UAAU,KAAK4F,cAAY,EAACxQ,UAAWb,EAAQuJ,KAAxE,SACK+H,SAASvR,EAAMoE,KAAKsN,WAAWD,uBAGpC,cAACT,GAAA,EAAD,UAAK,cAACC,GAAA,EAAD,UACL,cAACI,GAAA,EAAD,CAAY1P,QAAQ,KAAK+J,UAAU,KAAK4F,cAAY,EAACxQ,UAAWb,EAAQuQ,UAAxE,8CAQR,cAACS,GAAA,EAAD,CAAKC,YAAA,EAASC,SAAA,EAAd,SACI,cAACd,GAAD,CAAc1O,QAAQ,YAAYpB,MAAM,UAAUoR,eAAa,EAAC7Q,UAAWb,EAAQyJ,OAAQ0H,UAAW,cAAC,KAAD,CAAqBtQ,UAAWb,EAAQwQ,OAA9I,SACA,eAAC,KAAD,WACI,cAACO,GAAA,EAAD,UAAK,cAACC,GAAA,EAAD,UACL,cAACI,GAAA,EAAD,CAAY1P,QAAQ,KAAK+J,UAAU,KAAK4F,cAAY,EAACxQ,UAAWb,EAAQuJ,KAAxE,SACK+H,SAASvR,EAAMoE,KAAKwN,UAAUH,uBAGnC,cAACT,GAAA,EAAD,UAAK,cAACC,GAAA,EAAD,UACL,cAACI,GAAA,EAAD,CAAY1P,QAAQ,KAAK+J,UAAU,KAAK4F,cAAY,EAACxQ,UAAWb,EAAQuQ,UAAxE,uDA+BDqB,GAfO,SAAC7R,GAAW,IAAD,EACE6I,YAASmH,IAAlClH,EADuB,EACvBA,QAASC,EADc,EACdA,MAAO3E,EADO,EACPA,KAExB,OAAI0E,EACK,qBAAKhI,UAAU,eAAf,wBAELiI,GACFlF,QAAQkF,MAAOA,GACP,yCAEH,8BAAK,cAAC,GAAD,CAAoB3E,KAAMA,EAAK0N,cAAc,QC5MhD,SAASC,KACtB,OACE,gCACG,cAAC,GAAD,IACD,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAACC,GAAD,CAAIxC,YAAY,eCHtB,IAAM3Q,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,OACVmH,SAAU,EACVlG,UAAU,QACV7B,OAAO,CACLjC,WAAY,mDACZ8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,yCAEbqO,WAAW,CACTxO,WAAY,mDACZ8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,yCAIf6C,MAAO,CACLD,OAAQ,EACRE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN7D,gBAAiB8D,IAAI,MAEvB3D,MAAO,CACHI,QAASb,EAAMc,QAAQ,GACvBwD,UAAW,SACX9C,MAAOxB,EAAMO,QAAQkK,KAAKC,UAC1BC,OAAQ,QAGVpG,OAAQ,CACNjE,gBAAiB,aASV,SAAS4S,KAAS,IAAD,EAC1BhS,EAAUpB,KACZ,OACJ,gCACI,uBAAK,uBACL,eAACoJ,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQ8N,WACvB5F,MAAO,qBACPC,UAAU,gBACV9E,OACE,cAACvD,GAAD,GAEAyB,OAAO,QAAQO,KAAK,SAFpB,uBAGO,iBAHP,qBAKF,sWALE,wBAOM,yBAPN,sBASF,gZATE,0BAcW9B,EAAQqD,QAdnB,MAiBV,cAAC+E,EAAA,EAAD,OAEA,cAAC2J,GAAD,CAAIxC,YAAY,e,wJC/EpB,IAAM0C,GAAc1O,IAAH,MAQX3E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,OACVmH,SAAU,EACVlG,UAAU,QACV7B,OAAO,CACLjC,WAAY,mDACZ8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,yCAEbqO,WAAW,CACTxO,WAAY,mDACZG,UAAW,wCACXa,MAAO,SAEXgC,MAAO,CACLD,OAAQ,EACRE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN7D,gBAAiB8D,IAAI,MAEvB3D,MAAO,CACHI,QAASb,EAAMc,QAAQ,GACvBwD,UAAW,SACX9C,MAAOxB,EAAMO,QAAQkK,KAAKC,UAC1BC,OAAQ,QAGVpG,OAAQ,CACNjE,gBAAiB,QAKjBO,QAAS,YAGF,SAASuS,KACJtT,KAAhB,IAD4B,EAEKgK,YAASqJ,IAAlCpJ,EAFoB,EAEpBA,QAASC,EAFW,EAEXA,MAAO3E,EAFI,EAEJA,KAGrB,OAAI0E,EACK,qBAAKhI,UAAU,eAAf,wBAELiI,GACFlF,QAAQkF,MAAMA,GACN,yCAIjB,gCACI,uBAAK,uBAET,cAAC,GAAD,CAAa3E,KAAMA,EAAKgO,kBAOxB,SAAS3O,GAAYzD,GACH2D,iBAAO,MAArB,IACM1D,EAAUpB,KAwDhB,OAtDAgF,QAAQC,IAAR,0BAA+B9D,EAAM+D,UACjB,cAAhB/D,EAAM+D,QACE,8BACc,cAAhB/D,EAAM+D,QACL,8BAEA,0BAEXC,2BAAgB,WACZ,IAAIN,EAAQxB,IAAe,WAAYmQ,MACvC3O,EAAMoE,KAAKxF,QAAW,KACtB,IAAIgQ,EAAgB5O,EAAMuB,OAAOV,KAAK,IAAI8N,MAsC5C,OApCEC,EAAclO,KAAO,CAAC,CACpBiB,KAAM,WACNkN,SAAU,CAAC,CACTlN,KAAM,MAAOvD,MAAO,IACnB,CACDuD,KAAM,WAAYvD,MAAO,KAG1B,CACDuD,KAAM,WACJkN,SAAU,CAAC,CACTlN,KAAM,MAAOvD,MAAO,IACnB,CACDuD,KAAM,WAAYvD,MAAO,MAG/BwQ,EAAcpN,WAAWsN,SAAW,WACpCF,EAAcpN,WAAWG,KAAO,OAChCiN,EAAcpN,WAAW3D,GAAK,OAC9B+Q,EAAcpN,WAAWpD,MAAQ,QACjCwQ,EAAcpN,WAAWqN,SAAW,WACpCD,EAAcG,MAAM/N,SAASgO,SAAW,EACxCJ,EAAcK,MAAMjO,SAASY,YAAc,SAC3CgN,EAAcK,MAAMjO,SAAS2J,YAAc,EAC3CiE,EAAcK,MAAMjO,SAASkO,YAAYC,MAAQ,EAEjDP,EAAcK,MAAMjO,SAAShD,MAAM8H,KAAO,SAC1C8I,EAAc1E,SAAW,EACzB0E,EAAcK,MAAMjO,SAAShD,MAAMoR,eAAgB,EACnDR,EAAcK,MAAMjO,SAAShD,MAAMqR,UAAW,EAC9CT,EAAcU,UAAY9Q,IAAgB,GAC1CoQ,EAAcW,kBAAoB,EAClCX,EAAcG,MAAM/N,SAASoB,cAAgB,EAE/CpC,EAAMqE,QAAUrE,EAET,WACLA,EAAMsE,aAER,CAAChI,EAAM+D,QAAQ/D,EAAMoE,OAIvB,8BACD,eAAC6D,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQuB,OAExB2G,MAAM,oBACNC,UAAU,oBACV9E,OACE,cAACvD,EAAD,CACAyB,OAAO,gBAEPO,KAAK,8FACLC,QAAQ,wBACRC,MACA,sGACAnB,UAAWb,EAAQqD,WAI5B,cAAC+E,EAAA,EAAD,IACG,cAACC,EAAA,EAAD,CAAc/G,GAAG,WAAWb,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,gBAjFlEJ,IAAiBC,K,0PCrEJ+Q,GAET,8BArBgB,CAAC,CACjB/K,MAAO,UACP0E,KAAM,QAEV,CACI1E,MAAO,WACP0E,KAAM,YAEV,CACI1E,MAAO,WACP0E,KAAM,YAEV,CACI1E,MAAO,YACP0E,KAAM,cAQWgD,KAAI,SAACsD,EAAQ7D,GAAT,OACb,eAAC8D,GAAA,EAAD,CAAUhQ,QAAM,EAAoBsI,UAAU,IAAIhD,KAAsB,SAAhByK,EAAOtG,KAAkB,KAAOsG,EAAOtG,KAA/F,UACI,cAACwG,GAAA,EAAD,UACe,YAAfF,EAAOhL,MAAmB,cAAC,KAAD,IACT,aAAfgL,EAAOhL,MAAqB,cAAC,KAAD,IACb,cAAfgL,EAAOhL,MAAsB,cAAC,KAAD,IACf,aAAfgL,EAAOhL,MAAqB,cAAC,KAAD,IAC5B,KAMD,cAACmL,GAAA,EAAD,CAAczC,QAASsC,EAAOhL,UAZZgL,EAAOhL,YCjBnCtJ,IDmEG0U,GAAA,EACAH,GAAA,EACIC,GAAA,EACI,KAEJC,GAAA,EAEJF,GAAA,EACIC,GAAA,EACI,KAEJC,GAAA,EAEJF,GAAA,EACIC,GAAA,EACI,KAEJC,GAAA,ECpFKxU,aAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJb,QAAS,QAEXuU,QAAS,CACPrP,aAAc,IAEhBsP,YAAY,aACVxU,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBS,QAAS,SACNb,EAAM2U,OAAOF,SAElBG,OAAQ,CACNC,OAAQ7U,EAAM6U,OAAOC,OAAS,EAC9BjR,WAAY7D,EAAM8D,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASiR,iBAGzCC,YAAa,CACXtR,WAxBgB,IAyBhBf,MAAM,eAAD,OAzBW,IAyBX,OACLgB,WAAY7D,EAAM8D,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASmR,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBpV,QAAS,QAEXkJ,MAAO,CACLoB,SAAU,GAEZ+K,YAAa,CACXC,SAAU,WACVhE,WAAY,SACZ3O,MA3CgB,IAoDhBgB,WAAY7D,EAAM8D,YAAYC,OAAO,QAAS,CAC5CgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASmR,kBAGzCM,iBAAiB,aACfC,UAAW,SACX7R,WAAY7D,EAAM8D,YAAYC,OAAO,QAAS,CAC5CgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASiR,gBAEvCpS,MAAO7C,EAAMc,QAAQ,IACpBd,EAAM2V,YAAYC,GAAG,MAAQ,CAC5B/S,MAAO7C,EAAMc,QAAQ,KAGzB+U,aAAc7V,EAAM2U,OAAOF,QAC3B9U,QAAS,CACP6K,SAAU,EACVjH,OAAQ,QACRuS,SAAU,QAEZhL,UAAW,CACTrH,WAAYzD,EAAMc,QAAQ,GAC1BiV,cAAe/V,EAAMc,QAAQ,IAE/BL,MAAO,CACLI,QAASb,EAAMc,QAAQ,GACvBZ,QAAS,OACT4V,SAAU,OACVE,cAAe,UAEjBC,YAAa,CACX1S,OAAQ,UAIG,SAASyP,KACtB,IAAM9R,EAAUpB,KADkB,EAEVqB,IAAMC,UAAS,GAFL,mBAE3BC,EAF2B,KAErBC,EAFqB,KAUlC,OACE,sBAAKK,MAAO,CAACzB,QAAQ,QAArB,UACE,cAACgW,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAQX,SAAS,WAAWzT,UAAWqU,aAAKlV,EAAQ0T,OAAQvT,GAAQH,EAAQgU,aAA5E,SACE,eAACmB,GAAA,EAAD,CAAStU,UAAWb,EAAQuT,QAA5B,UACE,cAAClT,EAAA,EAAD,CACE+U,KAAK,QACL9U,MAAM,UACNC,aAAW,cACXC,QAhBe,WACvBJ,GAAQ,IAgBAS,UAAWqU,aAAKlV,EAAQkU,WAAY/T,GAAQH,EAAQoU,kBALtD,SAOE,cAAC,KAAD,MAEF,cAAChD,GAAA,EAAD,CAAY3F,UAAU,KAAK/J,QAAQ,KAAKpB,MAAM,UAAU+U,QAAM,EAACxU,UAAWb,EAAQkI,MAAlF,2CAUJ,eAACoN,GAAA,EAAD,CACE5T,QAAQ,YACR1B,QAAS,CACPT,MAAO2V,aAAKlV,EAAQqU,aAAclU,GAAQH,EAAQuU,mBAEpDpU,KAAMA,EALR,UAOE,qBAAKU,UAAWb,EAAQwT,YAAxB,SACE,cAACnT,EAAA,EAAD,CAAYG,QApCM,WACxBJ,GAAQ,IAmCF,SACE,cAAC,KAAD,QAIJ,cAACgI,EAAA,EAAD,IACA,cAACmN,GAAA,EAAD,UAAOtC,W,wBCxJf,SAASuC,KACL,OACI,eAACpE,GAAA,EAAD,CAAY1P,QAAQ,QAAQpB,MAAM,gBAAgBmV,MAAM,SAAxD,UACK,kBACD,cAACC,GAAA,EAAD,CAAMpV,MAAM,UAAUmI,KAAK,2BAA3B,sBAEI,KACH,IAAInB,MAAOqO,cACX,OAIE,SAASC,KAEpB,OACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACN,GAAD,M,+UCKZ,IAAMvD,GAAc1O,IAAH,MAeX3E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCe,KAAM,CACJsC,SAAU,OACVmH,SAAU,EACVlG,UAAU,QACV7B,OAAO,CACLjC,WAAY,mDACZ8C,aAAc,EACd5C,OAAQ,EACRc,MAAO,QACP+B,OAAQ,GACR1C,QAAS,SACTF,UAAW,yCAEbqO,WAAW,CACTxO,WAAY,mDACZG,UAAW,wCACXa,MAAO,SAEXgC,MAAO,CACLD,OAAQ,EACRE,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY7D,EAAM8D,YAAYC,OAAO,YAAa,CAChDC,SAAUhE,EAAM8D,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACN7D,gBAAiB8D,IAAI,MAEvB3D,MAAO,CACHI,QAASb,EAAMc,QAAQ,GACvBwD,UAAW,SACX9C,MAAOxB,EAAMO,QAAQkK,KAAKC,UAC1BC,OAAQ,QAGVsM,MAAM,CACJ5T,SAAU,OACVmH,SAAU,EACVlG,UAAW,YAGJ,SAAS4S,KACJpX,KAAhB,IADsC,EAELgK,YAASqJ,IAAlCpJ,EAF8B,EAE9BA,QAASC,EAFqB,EAErBA,MAAO3E,EAFc,EAEdA,KAFc,EAGdjE,mBAAS,aAHK,mBAG/B6I,EAH+B,KAGzBC,EAHyB,KAMnC,GAAIH,EACF,OAAO,qBAAKhI,UAAU,eAAf,wBAET,GAAIiI,EAEF,OADAlF,QAAQkF,MAAMA,GACN,wCAEV,IAAMG,EAAiB,SAACnF,GACvBkF,EAASlF,IAIb,OACJ,gCAEI,sBAAKrD,MAAO,CAAC2C,UAAU,QAAvB,UACC,uBAAK,uBACN,eAAC8F,EAAA,EAAD,CAAa5I,MAAM,YAAYC,aAAW,kCAAkCE,MAAO,CAAC0I,aAAa,OAAjG,UACI,cAACZ,EAAA,EAAD,CAAQ/H,QAAS,kBAAIyI,EAAe,cAApC,uBACA,cAACV,EAAA,EAAD,CAAQ/H,QAAS,kBAAIyI,EAAe,UAApC,yBAGR,cAAC,GAAD,CAAa9E,KAAc,UAAR4E,EAAiB5E,EAAK8R,uBAAyB9R,EAAK+R,2BAA4BhO,MAAOa,IAC1G,uBACA,cAAC,GAAD,CAAa5E,KAAOA,EAAKgO,kBAMzB,SAAS3O,GAAYzD,GACH2D,iBAAO,MAArB,IACM1D,EAAUpB,KA2MhB,OA1MDgF,QAAQC,IAAI4D,KAAKC,UAAU3H,EAAMoE,OAChCJ,2BAAgB,WACZ,IAAI6F,EAAY3H,IAAe,kBAAmBA,KAClD2H,EAAUjI,MAAQM,IAAgB,KAClC2H,EAAUvH,OAASJ,IAAgB,KAEnC,IAAIkU,EAAkB,IAAIlU,IAGtBwB,GAFW,IAAIxB,IAEP2H,EAAU+B,YAAYyK,OAClCxM,EAAU/B,KAAKxF,QAAW,KAE1BoB,EAAMU,KAAMpE,EAAMoE,KAAKkS,UAEvB,IAAInP,EAAQnH,EAAMoE,KAAKgD,QACnB,SAACC,EAAMC,GAAP,OACC,IAAIC,KAAKF,EAAMkP,OAAY,IAAIhP,KAAKD,EAAMiP,OACzClP,EAAMC,KAGJG,EAAQzH,EAAMoE,KAAKgD,QACrB,SAACC,EAAMC,GAAP,OACC,IAAIC,KAAKF,EAAMmP,KAAU,IAAIjP,KAAKD,EAAMkP,KACvCnP,EAAMC,KACdzD,QAAQC,IAAR,kBAAuBqD,EAAQoP,QAC/B1S,QAAQC,IAAR,kBAAuB2D,EAAQ+O,MAE/B9S,EAAM+S,cAAcC,WAAa,aACjChT,EAAM+S,cAAcE,gBAAkB,aACtCjT,EAAMkT,GAAK,GACXlT,EAAMmT,aAAc,EAEpB,IAAI9H,EAAerL,EAAMmB,MAAMN,KAAK,IAAIL,KACxC6K,EAAa7J,WAAW8J,SAAW,OACnCD,EAAavK,SAAS6F,OAAO3F,SAASP,aAAe,GACrD4K,EAAavK,SAAS2J,gBAAkB,GACxCY,EAAavK,SAASsS,YAAc,EACpC/H,EAAavK,SAASyG,OAAS,IAC/B8D,EAAavK,SAASC,KAAKC,SAASC,SAAW,EAE/C,IAAIN,EAAWX,EAAMY,MAAMC,KAAK,IAAIL,KACpCG,EAASG,SAAS2J,gBAAkB,GACpC9J,EAASoG,IAAM,IAAIlD,KAAKJ,GAAS4P,UACjC1S,EAASqI,IAAM,IAAInF,KAAKE,GAASsP,UAEjC1S,EAAS2S,aAAe,CAAEC,MAAO,EAAGC,SAAU,SAC9C7S,EAASiG,eAAiB,GAE1BjG,EAASG,SAAS2S,OAAS,CAAC,CAAElT,GAAI,IAAK4H,EAAG,GAAK,CAAE5H,GAAI,IAAK4H,EAAG,GAAK,CAAE5H,EAAG,EAAG4H,EAAG,IAAM,CAAE5H,EAAG,IAAK4H,EAAG,GAAK,CAAE5H,EAAG,IAAK4H,EAAG,IAClHxH,EAASG,SAAS4S,WAAY,EAC9B/S,EAASG,SAAS6S,WAAWzM,SAAW,GACxCvG,EAASG,SAAS8S,gBAAkB,EACpCjT,EAASG,SAASC,KAAKC,SAASK,UAAW,EAC3CV,EAASG,SAAS+S,KAAKrR,gBAAkB,MACzC7B,EAASG,SAAS+S,KAAKzR,cAAgB,GACvCzB,EAASS,QAAQvF,WAAW8O,YAAc,GAC1ChK,EAASS,QAAQvF,WAAWgP,aAAe,EAC3ClK,EAASS,QAAQpD,MAAM4E,MAAO,IAAIpE,KAA4BsV,OAAO,yBACrEnT,EAASS,QAAQpD,MAAMc,WAAa,EAEpC,IAAIiV,EAAgBpT,EAASG,SAAS6F,OAAO3F,SAC7C+S,EAAcC,eAAiB,SAC/BD,EAAcpJ,YAAc,GAC5BoJ,EAAclY,WAAW+G,KAAO8P,EAAgBoB,OAAO,cACvDC,EAAclY,WAAW8O,YAAc,EACvCoJ,EAAc7X,QAAQ,EAAE,EAAE,EAAE,GAE5B,IAAIqF,EAASvB,EAAMuB,OAAOV,KAAK,IAAI8R,MACnCpR,EAAOiK,QAAQxK,SAASpC,OAASJ,IAAgB,IACjD+C,EAAOiK,QAAQxK,SAASY,YAAc,uDAEtCL,EAAOC,WAAWyS,UAAY,QAC9B1S,EAAOC,WAAWC,MAAQ,MAC1BF,EAAOC,WAAW0S,UAAY,OAC9B3S,EAAOiK,QAAQxK,SAASsG,eAAe1E,KAAO,QAC9CrB,EAAOiK,QAAQxK,SAASsG,eAAerF,OAAS,QAChDV,EAAOiK,QAAQxK,SAASoB,cAAgB,EAExCb,EAAOiK,QAAQxK,SAASiC,QAAQC,IAAI,QAAQ,SAAUN,EAAMQ,GACzD,OAAOpD,EAAMkC,OAAOC,SAAiC,EAAxBiB,EAAOuI,SAASC,UAGhD,IAAIuI,EAAc,IAAIC,KACtB7S,EAAO4F,QAAQtG,KAAKsT,GACpBA,EAAY9S,UAAW,EACvB8S,EAAY7M,eAAejG,SAAW,WACtC8S,EAAYE,UAAY,EACxBF,EAAYnW,MAAM8H,KAAO,QAEzB,IAAIwO,EAAc,IAAIF,KACtB7S,EAAO4F,QAAQtG,KAAKyT,GACpBA,EAAYjT,UAAW,EACvBiT,EAAYhN,eAAejG,SAAW,WACtCiT,EAAYD,UAAY,EACxBC,EAAYzY,WAAW+G,KAAO8P,EAAgBoB,OAAO,cACrDQ,EAAYtW,MAAM8H,KAAO,MAEzB,IAAInD,EAAS,IAAInC,IACjBe,EAAO4F,QAAQtG,KAAK8B,GACpBA,EAAOyE,OAAOG,OAAS,EACvB5E,EAAOyE,OAAOhF,cAAgB,EAC9BO,EAAO0R,UAAY,EAEnB1R,EAAOM,QAAQC,IAAI,QAAQ,SAAUN,EAAMQ,GACxC,OAAOpD,EAAMkC,OAAOC,SAAiC,EAAxBiB,EAAOuI,SAASC,UAGhD,IAAI2I,EAAU,IAAI/T,IAClBe,EAAO4F,QAAQtG,KAAK0T,GACpBA,EAAQnN,OAAOG,OAAS,EACxBgN,EAAQnN,OAAOhF,cAAgB,EAC/BmS,EAAQjN,eAAe1E,KAAO,QAC9B2R,EAAQF,UAAY,EAEpBE,EAAQtR,QAAQC,IAAI,QAAQ,SAAUN,EAAMQ,GACzC,OAAOpD,EAAMkC,OAAOC,SAAiC,EAAxBiB,EAAOuI,SAASC,UAGhD5L,EAAM8B,WAAa,IAAItD,IACvBwB,EAAM8B,WAAWkQ,MAAQ,SACzBhS,EAAM8B,WAAW5D,MAAQ,IACzB8B,EAAM8B,WAAW0S,OAASxU,EAAMyU,oBAChCzU,EAAM8B,WAAWoR,IAAO,GACxBlT,EAAM8B,WAAWuF,QAAU,GAE3B,IAAIxF,EAAS,IAAI8Q,KACjB3S,EAAM6B,OAASA,EACfA,EAAO6S,MAAQ/T,EACfkB,EAAO8S,MAAQtJ,EACfxJ,EAAOoF,MAAM5F,UAAW,EACxBQ,EAAO+S,MAAMpS,gBAAkB,MAC/BX,EAAO+S,MAAMxS,cAAgB,EAE7BzB,EAASG,SAAS+T,iBAAmB,EACrCxJ,EAAavE,sBAAuB,EAIpC,IAAIwL,EAAQnM,EAAU+B,YAAY1H,KAClC8R,EAAMwC,SAENxC,EAAM/K,OAAS,IACf+K,EAAMY,IAAM,IACZZ,EAAMyC,YAAc,GACpBzC,EAAM0C,SAAW,IAEjB,IAAIvO,EAAO6L,EAAM1R,MAAMC,KAAK,IAAIL,KAChCiG,EAAKM,IAAM,EACXN,EAAKuC,IAAM,GACXvC,EAAKwO,cAAe,EAEpBxO,EAAK3F,SAAS+S,KAAKpR,YAAc,EACjCgE,EAAK3F,SAAS+S,KAAKzR,cAAgB,GACnCqE,EAAK3F,SAAS+S,KAAKrR,gBAAkB,MACrCiE,EAAK3F,SAASoU,iBAAmB,IACjCzO,EAAK3F,SAASqU,QAAS,EACvB1O,EAAK3F,SAAS6F,OAAO3F,SAASuG,OAAS,GACvCd,EAAK3F,SAASC,KAAKC,SAASK,UAAW,EACvCoF,EAAK3F,SAASsU,MAAMpU,SAASqU,OAAS,GACtC5O,EAAK3F,SAASsU,MAAMpU,SAASoB,cAAgB,EAG7C,IAAIL,EAAQ0E,EAAKzE,WAAW5C,SAC5B2C,EAAM3D,MAAQ,EACd2D,EAAMuT,SAAW,GACjBvT,EAAMhB,KAAKwU,SAAU,EACrBxT,EAAMyT,KAAKD,SAAU,EACrBxT,EAAM/D,MAAMuX,SAAU,EAEPxT,EAAM0T,SAArB,IAGIC,EAAWpD,EAAMqD,MAAM9U,KAAK,IAAIL,KACpCkV,EAASnO,OAAS/I,IAAgB,IAClCkX,EAASE,WAAa,EACtBF,EAASG,SAAW,EACpBH,EAASI,kBAAoB,YAC7BJ,EAASK,IAAIxO,OAAS,EACtBmO,EAASxF,OAAS,EAElB,IAAI8F,EAAc1D,EAAMqD,MAAM9U,KAAK,IAAIL,KAiBzC,OAhBEwV,EAAYF,kBAAoB,YAChCE,EAAYJ,WAAa,EACzBI,EAAYH,SAAW,EACvBG,EAAYzO,OAAS/I,IAAgB,IACrCwX,EAAY9F,OAAS,EAErBlQ,EAAM6B,OAAO6G,OAAOC,GAAG,yBAAyB,SAAUsN,GACvD,IAAI7X,EAAQuC,EAASuV,gBAAgBD,EAAM7S,OAAO+S,WAC9CjS,EAAO,IAAIL,KAAKzF,GAChBgY,EAAQlS,EAAKmS,WACbC,EAAUpS,EAAKqS,aAEnBb,EAASc,UAAUJ,EAAQE,EAAU,GAAI,GAEzCN,EAAYQ,UAAU,GAAKF,EAAS,GAAI,MAEtC,WACLtW,EAAMsE,aAER,CAAChI,EAAM+D,QAAQ/D,EAAMoE,OAIvB,8BACD,eAAC6D,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQuB,OAExB2G,MAAM,uBACNC,UAAWpI,EAAMmI,MACjB7E,OACE,cAACvD,EAAD,CAAmByB,OAAO,gBAE1BO,KAAK,0JACLC,QAAQ,wBACRC,MACA,2IACoFnB,UAAWb,EAAQqD,WAIhH,cAAC+E,EAAA,EAAD,IACG,cAACC,EAAA,EAAD,CAAa/G,GAAG,kBAAkBb,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,WAClE,cAACiG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQlI,MAAM,UAA3B,SACE,mBAAGmI,KAAK,yEAAyE5B,OAAO,SAASpG,MAAO,CAACiI,eAAe,QAAxH,yDAUR,SAASwR,GAAYna,GACL2D,iBAAO,MAArB,IACM1D,EAAUpB,KA4FhB,OA1FAgF,QAAQC,IAAR,yBAA8B4D,KAAKC,UAAU3H,EAAMoE,QAC/B,cAAhBpE,EAAM+D,QACE,8BACc,cAAhB/D,EAAM+D,QACL,8BAEA,0BAEXC,2BAAgB,WAEpB,IAAIoW,EAAgBlY,IAAe,cAAeA,KAClDkY,EAAcxY,MAAQM,IAAgB,KACtCkY,EAAc9X,OAASJ,IAAgB,KACvCkY,EAAcC,OAAS,aACvBD,EAActS,KAAKxF,QAAW,KAC9B,IAAIgY,EAASta,EAAMoE,KAEfmW,EAAYH,EAAcxO,YAAY1H,KAC1CqW,EAAUpW,aAAe,EAEzBoW,EAAUnW,KAAKkW,EACfzW,QAAQC,IAAR,+CAAoD4D,KAAK8S,MAAM9S,KAAKC,UAAU2S,MAE9E,IAAIG,EAAmBF,EAAU1V,MAAMN,KAAK,IAAIL,KAGhDuW,EAAiBvV,WAAW8J,SAAW,OACvCyL,EAAiBjW,SAASC,KAAKC,SAASC,SAAW,EACnD8V,EAAiBjW,SAASkW,UAAW,EACrCD,EAAiBjW,SAAS2J,gBAAkB,GAE5C,IAAIwM,EAAgBJ,EAAUjW,MAAMC,KAAK,IAAIL,KAC7CyW,EAAcnW,SAASkW,UAAW,EAClCC,EAAclQ,IAAM,EACpBkQ,EAAcjO,IAAM,EACpBiO,EAAchC,cAAe,EAE7B8B,EAAiBhE,cAAgB,IAAIvU,IACrCuY,EAAiBhE,cAAcC,WAAc,cAK7C,IAAIkE,EAAaL,EAAUtV,OAAOV,KAAK,IAAIL,KAC3C0W,EAAW1V,WAAW2V,OAAS,QAG/BD,EAAW1V,WAAW0S,UAAY,OAElCgD,EAAW1L,QAAQxK,SAASY,YAAc,kBAI1C,IAAIwV,EAAcV,EAAcxO,YAAY1H,KAC5C4W,EAAYC,YAAc,EAE1BD,EAAY1W,KAAMkW,EAElB,IAAIU,EAAqBF,EAAYjW,MAAMN,KAAK,IAAIL,KACpD8W,EAAmBxW,SAASyW,UAAW,EACvCD,EAAmB9V,WAAW8J,SAAW,OACzCgM,EAAmBxW,SAASC,KAAKC,SAASC,SAAW,EACrDqW,EAAmBxW,SAAS2J,gBAAkB,GAC9C6M,EAAmBxW,SAASkW,UAAS,EACrC,IAAIQ,EAAkBJ,EAAYxW,MAAMC,KAAK,IAAIL,KACjDgX,EAAgBzQ,IAAM,EACtByQ,EAAgBxO,IAAM,EACtBwO,EAAgBvC,cAAe,EAG/BuC,EAAgB1W,SAASoU,iBAAmB,IAG5C,IAAIuC,EAAeL,EAAY7V,OAAOV,KAAK,IAAIL,KAYzC,OAXNiX,EAAajW,WAAW2V,OAAS,YAGjCM,EAAa7U,KAAOwU,EAAYlV,OAAOC,SAAS,GAChDsV,EAAaxV,OAASwV,EAAa7U,KAEnC6U,EAAajM,QAAQxK,SAASY,YAAc,sBAC5C6V,EAAajW,WAAW0S,UAAY,OAIvB,WACLwC,EAAcpS,aAEhB,CAAChI,EAAMoE,OAIT,8BACD,eAAC6D,EAAA,EAAD,CAAMnH,UAAWb,EAAQH,KAAzB,UAEA,cAACoI,EAAA,EAAD,CAAYpH,UAAWb,EAAQuB,OAExB2G,MAAM,eACNC,UAAU,0BACV9E,OACE,cAACvD,EAAD,CAAmByB,OAAO,gBAE1BO,KAAK,0JACLC,QAAQ,wBACRC,MACA,8IAEEnB,UAAWb,EAAQqD,WAI9B,cAAC+E,EAAA,EAAD,IACG,cAACC,EAAA,EAAD,CAAc/G,GAAG,cAAcb,MAAO,CAAEkB,MAAO,OAAQU,OAAQ,WAC/D,cAACiG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQlI,MAAM,UAA3B,SACE,mBAAGmI,KAAK,yEAAyE5B,OAAO,SAASpG,MAAO,CAACiI,eAAe,QAAxH,yDAvWVzG,IAAiBC,KC9GjB,IAEMtD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJb,QAAS,QAEXuU,QAAS,CACPrP,aAAc,IAEhBsP,YAAY,aACVxU,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBS,QAAS,SACNb,EAAM2U,OAAOF,SAElBG,OAAQ,CACNC,OAAQ7U,EAAM6U,OAAOC,OAAS,EAC9BjR,WAAY7D,EAAM8D,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASiR,iBAGzCC,YAAa,CACXtR,WAxBgB,IAyBhBf,MAAM,eAAD,OAzBW,IAyBX,OACLgB,WAAY7D,EAAM8D,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASmR,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBpV,QAAS,QAEXkJ,MAAO,CACLoB,SAAU,GAEZ+K,YAAa,CACXC,SAAU,WACVhE,WAAY,SACZ3O,MA3CgB,IA4ChBgB,WAAY7D,EAAM8D,YAAYC,OAAO,QAAS,CAC5CgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASmR,kBAGzCM,iBAAiB,aACfC,UAAW,SACX7R,WAAY7D,EAAM8D,YAAYC,OAAO,QAAS,CAC5CgR,OAAQ/U,EAAM8D,YAAYiR,OAAOC,MACjChR,SAAUhE,EAAM8D,YAAYE,SAASiR,gBAEvCpS,MAAO7C,EAAMc,QAAQ,IACpBd,EAAM2V,YAAYC,GAAG,MAAQ,CAC5B/S,MAAO7C,EAAMc,QAAQ,KAGzB+U,aAAc7V,EAAM2U,OAAOF,QAC3B9U,QAAS,CACP6K,SAAU,EACVjH,OAAQ,QACRuS,SAAU,QAEZhL,UAAW,CACTrH,WAAYzD,EAAMc,QAAQ,GAC1BiV,cAAe/V,EAAMc,QAAQ,IAG/BL,MAAO,CACLI,QAASb,EAAMc,QAAQ,GACvBZ,QAAS,OACT4V,SAAU,OACVE,cAAe,UAEjBC,YAAa,CACX1S,OAAQ,SA4BG8Y,OAzBf,WAAgB,IAAD,EACPnb,EAAUpB,KAEhB,OACE,qBAAKiC,UAAU,MAAf,SACE,sBAAKA,UAAWb,EAAQH,KAAxB,UACE,cAAC,GAAD,IACA,uBAAMgB,UAAWb,EAAQvB,QAAzB,UACE,qBAAKoC,UAAWb,EAAQ2U,eACxB,eAACyG,EAAA,EAAD,CAAWjZ,SAAS,KAAKtB,UAAWb,EAAQ4J,UAA5C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,GAAOyR,OAAK,EAACzO,KAAK,KAAlB,kDAAoC,kBAAM,cAAC,IAAD,CAAUO,GAAG,kBAAvD,IACA,cAAC,IAAD,CAAOkO,OAAK,EAACzO,KAAK,aAAanB,UAAWqG,KAC1C,cAAC,IAAD,CAAOuJ,OAAK,EAACzO,KAAK,YAAYnB,UAAWuG,KACzC,cAAC,IAAD,CAAOqJ,OAAK,EAACzO,KAAK,aAAanB,UAAWyG,KAC1C,cAAC,IAAD,CAAOmJ,OAAK,EAACzO,KAAK,YAAYnB,UAAWuK,QAE3C,cAACJ,GAAD,gBCrGG0F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uCCKRQ,I,OAAQ,IAAIC,MACZC,GAAO,IAAIC,KAAS,CAGxBC,IAAM,8DAIFC,GAAS,IAAIC,KAAa,CAC9BN,SACAE,UAGFK,IAASC,OACP,cAAC,IAAD,UACE,cAAC,KAAD,CAAgBH,OAAQA,GAAxB,SACE,cAAC,IAAMI,SAAP,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,YAKRC,SAASC,eAAe,SAM1BrB,O","file":"static/js/main.b2abbb9f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    {/* <Segment>\r\n      <Dimmer active>\r\n        <Loader content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment> */}\r\n\r\n    <Segment>\r\n      <Dimmer active inverted>\r\n        <Loader inverted content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment>\r\n  </div>\r\n)\r\n\r\nexport default Loading","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  papermodel: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  root:{\r\n    padding:'20px',\r\n  }\r\n}));\r\nexport default function Informationbutton(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n\r\n\r\n<IconButton color=\"inherit\" aria-label=\"Info\" onClick={handleOpen} style={{padding: '20px'}}>\r\n    <InfoIcon/>\r\n    </IconButton>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.papermodel}>\r\n              \r\n              <h3 id=\"transition-modal-title\">{props.header}</h3>\r\n                <TextField id=\"outlined-basic\" label=\"\" variant=\"outlined\" style={{width: '100ch',}}\r\n                multiline\r\n                value={props.body}\r\n                />\r\n               <h3 id=\"transition-modal-title\">{props.header1}</h3> \r\n                <TextField id=\"outlined-basic\" label=\"\" variant=\"outlined\" style={{width: '100ch',}}\r\n                multiline\r\n                value={props.body1}\r\n                />\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }","import React, { useRef, useLayoutEffect,useState } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Link from '@material-ui/core/Link';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Informationbutton from './Informationbutton'\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      \r\n\r\n    },\r\n    header:{\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    button:{\r\n      textAlign:\"left\"\r\n    },\r\n    action: {\r\n      backgroundColor: '#ffff',\r\n      // foregroundColor:'#ffffff'\r\n      // textAlign:\"right\",\r\n      // alignItems: 'right',\r\n      // flexGrow:1\r\n      padding: '30px',\r\n    }\r\n\r\n  }));\r\n\r\n\r\nconst data1=  gql`   \r\n    query{\r\n           actuals{\r\n               Date,Confirmed,Recovered,Deceased,Type\r\n             }\r\n         }\r\n       `\r\n\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  const classes = useStyles();\r\n  let itemtitle=''\r\n  console.log(`In CreateChart: ${props.btnname}`)\r\n  if (props.btnname==='Confirmed') {\r\n   itemtitle =\"Covid Confirmed Cases Trend\"\r\n  } else if(props.btnname==='Recovered'){\r\n   itemtitle=\"Covid Recovered Cases Trend\"\r\n  } else {\r\n   itemtitle=\"Covid Fatality Cases Trend\"\r\n  }\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n   \r\n    x.paddingRight = 20;\r\n\r\n    // let data = [];\r\n    // let visits = 10;\r\n\r\n    // for (let i = 1; i < 366; i++) {\r\n    //   visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n    //   data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n    // }\r\n\r\n    x.data = props.data;\r\n\r\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = x.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"Date\";\r\n    series.dataFields.valueY = props.btnname;\r\n    series.name=\"Actuals\"\r\n    series.tooltipText = \"{valueY.value}\";\r\n    x.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    x.scrollbarX = scrollbarX;\r\n    var range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\n    range.grid.stroke = x.colors.getIndex(0);\r\n    range.grid.strokeOpacity = 1;\r\n   \r\n    var seriesRange = dateAxis.createSeriesRange(series);\r\n    seriesRange.contents.strokeDasharray = \"2,3\";\r\n    seriesRange.contents.stroke = x.colors.getIndex(8);\r\n    seriesRange.contents.strokeWidth = 1;\r\n    seriesRange.name=\"b\"\r\nx.legend = new am4charts.Legend();\r\n\r\nrange.bullet = new am4core.ResizeButton();\r\nrange.bullet.background.fill = x.colors.getIndex(0);\r\nrange.bullet.background.states.copyFrom(x.zoomOutButton.background.states);\r\nrange.bullet.minX = 0;\r\nrange.bullet.adapter.add(\"minY\", function(minY, target) {\r\n  target.maxY = x.plotContainer.maxHeight;\r\n  target.maxX = x.plotContainer.maxWidth;\r\n  return x.plotContainer.maxHeight;\r\n})\r\n\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\nlet min_act=props.data.reduce(\r\n  (olddt,newdt)=> \r\n  (new Date(olddt.Date) && olddt.Type==='Acutals') > (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n  ? olddt:newdt)\r\n\r\n\r\n  let max_act=props.data.reduce(\r\n    (olddt,newdt)=> \r\n    (new Date(olddt.Date) && olddt.Type==='Acutals') < (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n    ? olddt:newdt)\r\n  \r\nconsole.log(`min_act:${JSON.stringify(min_act)} mix_act${JSON.stringify(max_act)}`)\r\n\r\nrange.date = new Date(min_act.Date);\r\nseriesRange.date = new Date(min_act.Date);\r\nseriesRange.endDate = new Date(max_act.Date)\r\n\r\n\r\n\r\n\r\n\r\n\r\nx.logo.height =  -15000; \r\n    chart.current = x;\r\n\r\n    return () => {\r\n      x.dispose();\r\n    };\r\n  },[props.btnname,props.data] );\r\n  const preventDefault = (event) => event.preventDefault();\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n  // style={{Color: \"#000\", Background: \"blue\"}}\r\n  action={\r\n    <Informationbutton header=\"How it works?\" \r\n    body=\r\n    \"● It provide the prediction for the next 4 months on Confirmed, Recovered and Fatality cases.\r\n    ● The prediction helps to estimate the date to open the office premises\" \r\n    header1=\"How it is calculated?\"\r\n    body1=\r\n    \"● Pandamic Analytics models are used to predict the values.\r\n    ● The models are predicated at 85% accuracy based on history data.\"\r\n    className={classes.action} style={{padding: '20px'}}/>\r\n    \r\n  }\r\n        title={itemtitle}\r\n        subheader=\"For Telengana (Year 2020)\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n    <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <a href=\"https://covid19.telangana.gov.in/announcements/media-bulletins/\" target=\"_blank\" style={{textDecoration:\"none\"}}>Source: Telengana Govt Bulletin</a>\r\n          </Button>\r\n        \r\n      </CardActions>\r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n const  ActualForecast = () => {\r\n    const { loading, error, data } = useQuery(data1);\r\n const [state,setState]= useState('Confirmed');\r\n\r\n const classes = useStyles();\r\n\r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n   \r\n    const onClickHandler = (btnname,data) =>{\r\n      setState(btnname)\r\n      // console.log(`btn clicked ${btnname} ${JSON.stringify(data)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div style={{textAlign:'left'}}>\r\n     <br/>\r\n     {/* <br/> */}\r\n     {/* <br/><br/> */}\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\" style={{marginBottom:'5px'}}>\r\n        <Button onClick={()=>onClickHandler(\"Confirmed\",data.actuals)}>Confirmed</Button>\r\n        <Button onClick={()=>onClickHandler(\"Recovered\",data.actuals)}>Recovered</Button>\r\n        <Button onClick={()=>onClickHandler(\"Deceased\",data.actuals)}>Fatality </Button>\r\n      </ButtonGroup>\r\n      <CreateChart data={data.actuals} btnname={state} />\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default ActualForecast;","// import { Bar } from \"react-chartjs-2\";\r\nimport React,{ useLayoutEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport {Container,Row, Col } from 'reactstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\nconst querygraph=  gql`   \r\n    query{\r\n        cases_per_thousand{\r\n            Date,ACTIVE_CASES_PER_1000,NEW_CASES_PER_10000,DEATHS_PER_1000\r\n             }\r\n         }\r\n       `\r\n       \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 0,\r\n    //   maxHeight:'20%'\r\n      \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '0%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        // background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        // color: 'white',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\n       function Griditem(props){\r\n    \r\n    \r\n        const classes = useStyles();\r\n        \r\n        return (\r\n            <div className={classes.root}>\r\n              <Grid container spacing={3} className={classes.root}\r\n              justify=\"center\"\r\n              >\r\n               \r\n                <Grid item xs={6} sm={2} id='1'>\r\n                {/* <Paper className={classes.paper} ><CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> </Paper> */}\r\n                <SmallBarsViews  chtname=\"small1\" color=\"#800080\"  data={props.data} axis='ACTIVE_CASES_PER_1000'/> \r\n                </Grid>\r\n                <Grid item xs={6} sm={2} id='2'>\r\n                  {/* <Paper className={classes.paper} ><CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/></Paper> */}\r\n                  <SmallBarsViews chtname=\"small2\" color=\"#34a4eb\" data={props.data} axis='NEW_CASES_PER_10000'/>\r\n                </Grid>\r\n                <Grid item xs={6} sm={2} id='3'>\r\n                  {/* <Paper className={classes.paper} ><CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/></Paper> */}\r\n                  <SmallBarsViews chtname=\"small3\" color=\"#3333cc\"  data={props.data} axis='DEATHS_PER_1000'/>\r\n                {/* <SparkLineChart/> */}\r\n                </Grid>\r\n                \r\n              </Grid>\r\n            </div>\r\n          );\r\n    }\r\n    \r\nconst   SmallBarsViews =(props)=>{\r\n// const chart = useRef(null);\r\nconsole.log(`${props.data}`)\r\nuseLayoutEffect(() => {\r\n    am4core.useTheme(am4themes_animated);\r\n\r\n    var chart = am4core.create(props.chtname, am4charts.XYChart);\r\n    chart.logo.height =  -15000; \r\n    chart.data =props.data;\r\n    \r\n    chart.padding(0, 0, 0, 0);\r\n    \r\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.disabled = true;\r\n    dateAxis.renderer.labels.template.disabled = true;\r\n    dateAxis.startLocation = 0.5;\r\n    dateAxis.endLocation = 0.7;\r\n    dateAxis.cursorTooltipEnabled = false;\r\n    \r\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.min = 0;\r\n    valueAxis.renderer.grid.template.disabled = true;\r\n    valueAxis.renderer.baseGrid.disabled = true;\r\n    valueAxis.renderer.labels.template.disabled = true;\r\n    valueAxis.cursorTooltipEnabled = false;\r\n    \r\n    chart.cursor = new am4charts.XYCursor();\r\n    chart.cursor.lineY.disabled = true;\r\n    \r\n    var series = chart.series.push(new am4charts.ColumnSeries());\r\n    series.tooltipText = `{Date}: [bold]${props.axis==='ACTIVE_CASES_PER_1000' ? '{ACTIVE_CASES_PER_1000}':props.axis==='NEW_CASES_PER_10000' ? '{NEW_CASES_PER_10000}':props.axis==='DEATHS_PER_1000'?'{DEATHS_PER_1000}':''}`;\r\n    series.dataFields.dateX = \"Date\";\r\n    series.dataFields.valueY = props.axis;\r\n    series.tensionX = 0.8;\r\n    series.strokeWidth = 2;\r\n    series.stroke = am4core.color(props.color);\r\n    // series.colors = am4core.color(\"green\");\r\n    // render data points as bullets\r\n    var bullet = series.bullets.push(new am4charts.CircleBullet());\r\n    bullet.circle.opacity = 0;\r\n    bullet.circle.propertyFields.opacity = \"opacity\";\r\n    bullet.circle.radius = 3;\r\n    // bullet.circle.stroke = am4core.color(props.color);\r\n\r\n   return () => {\r\n    chart.dispose();\r\n};\r\n}, [props.data,props.chtname]);\r\n\r\nreturn(\r\n    <div id={props.chtname}></div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport const  SmallBars =()=>{\r\n    const { loading, error, data } = useQuery(querygraph);\r\n//   console.log(`SmallBars ${JSON.stringify(data.actuals)}`)\r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error( error);\r\n      return  <div>Error</div>;\r\n    }return( \r\n    \r\n    <Griditem data={data.cases_per_thousand}/>\r\n\r\n )\r\n}\r\n\r\nexport default SmallBars;","import React, { useRef, useLayoutEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport './App.css'\r\n// import Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport Button from '@material-ui/core/Button';\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red,blue,white } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Informationbutton from './Informationbutton'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SmallBars from './SmallBars'\r\nam4core.useTheme(am4themes_animated);\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      textAlign:'left'\r\n      \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    action: {\r\n      backgroundColor: '#ffff',\r\n      // foregroundColor:'#ffffff'\r\n      // textAlign:\"right\",\r\n      // alignItems: 'right',\r\n      // flexGrow:1\r\n      padding: '21px',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        // background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        // color: 'white',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        \r\n      },\r\n      modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      paper1: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n      header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      }\r\n  }));\r\n\r\n\r\nconst data2=  gql`   \r\n    query{\r\n      latest_cases_per_thousand{\r\n        Date,ACTIVE_CASES_PER_1000,NEW_CASES_PER_10000,DEATHS_PER_1000\r\n      }\r\n         }\r\n       `\r\nfunction Griditem(props){\r\n    \r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}\r\n          justify=\"center\"\r\n          >\r\n           \r\n            <Grid item xs={6} sm={2} >\r\n            {/* <Paper className={classes.paper} ><CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> </Paper> */}\r\n            <CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={props.data[0].ACTIVE_CASES_PER_1000} /> \r\n            </Grid>\r\n            <Grid item xs={6} sm={2}>\r\n              {/* <Paper className={classes.paper} ><CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/></Paper> */}\r\n              <CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 10K\" value={props.data[0].NEW_CASES_PER_10000}/>\r\n            </Grid>\r\n            <Grid item xs={6} sm={2}>\r\n              {/* <Paper className={classes.paper} ><CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/></Paper> */}\r\n              <CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={props.data[0].DEATHS_PER_1000}/>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </div>\r\n      );\r\n}\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  \r\n  useLayoutEffect(() => {\r\n   \r\n    var capacity = 1000;\r\n    var value = props.value;\r\n    var circleSize = 0.8;\r\n    console.log(props.value)\r\n    var component = am4core.create(props.chtname, am4core.Container)\r\n    component.width = am4core.percent(100);\r\n    component.height = am4core.percent(100);\r\n    component.logo.height =  -15000; \r\n    var chartContainer = component.createChild(am4core.Container);\r\n    chartContainer.x = am4core.percent(50)\r\n    chartContainer.y = am4core.percent(50)\r\n    \r\n    var circle = chartContainer.createChild(am4core.Circle);\r\n    circle.fill = am4core.color(\"#f8f9fa\");\r\n    \r\n    var circleMask = chartContainer.createChild(am4core.Circle);\r\n    \r\n    var waves = chartContainer.createChild(am4core.WavedRectangle);\r\n    waves.fill = am4core.color(props.color);\r\n    waves.mask = circleMask;\r\n    waves.horizontalCenter = \"middle\";\r\n    waves.waveHeight = 10;\r\n    waves.waveLength = 30;\r\n    waves.y = 500;\r\n    circleMask.y = -500;\r\n    \r\n    component.events.on(\"maxsizechanged\", function(){\r\n      var smallerSize = Math.min(component.pixelWidth, component.pixelHeight);  \r\n      var radius = smallerSize * circleSize / 2;\r\n    \r\n      circle.radius = radius;\r\n      circleMask.radius = radius;\r\n      waves.height = smallerSize;\r\n      waves.width = Math.max(component.pixelWidth, component.pixelHeight);  \r\n    \r\n      // capacityLabel.y = radius;\r\n    \r\n      var labelRadius = radius + 15\r\n    \r\n      capacityLabel.path = am4core.path.moveTo({x:-labelRadius, y:0}) + am4core.path.arcToPoint({x:labelRadius, y:0}, labelRadius, labelRadius);\r\n      capacityLabel.locationOnPath = 0.5;\r\n    \r\n      setValue(value);\r\n    })\r\n    \r\n    \r\n    function setValue(value){\r\n       var y = - circle.radius - waves.waveHeight + (1 - value / capacity) * circle.pixelRadius * 2;\r\n       waves.animate([{property:\"y\", to:y}, {property:\"waveHeight\", to:10, from:15}, {property:\"x\", from:-50, to:0}], 5000, am4core.ease.elasticOut);\r\n       circleMask.animate([{property:\"y\", to:-y},{property:\"x\", from:50, to:0}], 5000, am4core.ease.elasticOut);\r\n    }\r\n    \r\n    \r\n    var label = chartContainer.createChild(am4core.Label)\r\n    var formattedValue = component.numberFormatter.format(value, \"#.#a\");\r\n    formattedValue = formattedValue.toUpperCase();\r\n    \r\n    label.text = value ;\r\n    label.fill = am4core.color(\"#03a9f4\");\r\n    label.fontSize = 30;\r\n    label.horizontalCenter = \"middle\";\r\n    \r\n    \r\n    var capacityLabel = chartContainer.createChild(am4core.Label)\r\n    \r\n    var formattedCapacity = component.numberFormatter.format(capacity, \"#.#a\").toUpperCase();;\r\n    console.log(props.title)\r\n    capacityLabel.text = props.title;\r\n    capacityLabel.fill = am4core.color(\"#1769aa\");\r\n    capacityLabel.fontSize = 20;\r\n    capacityLabel.textAlign = \"middle\";\r\n    capacityLabel.padding(0,0,0,0);\r\n    \r\n    chart.current = component;\r\n    return () => {\r\n        component.dispose();\r\n    };\r\n  }, [props.data,props.chtname]);\r\n\r\n  return (\r\n   \r\n  <div id={props.chtname}    \r\n  //  style={{ width: \"100%\", height: \"250\" }}\r\n  >\r\n    </div>\r\n  );\r\n}\r\n\r\n const  KPIViews = () => {\r\n    const { loading, error, data } = useQuery(data2);\r\n    const classes = useStyles();\r\n\r\n    \r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error( error);\r\n      return  <div>Error</div>;\r\n    }\r\n    return <div style={{textAlign:'center'}}><br/>\r\n  <Card className={classes.root} >\r\n <CardHeader \r\n className={classes.header}\r\n  // style={{Color: \"#000\", Background: \"blue\"}}\r\n        \r\n  action={\r\n          \r\n          <Informationbutton header=\"How it works?\" \r\n          body=\r\n          \"Provides holistic view of cases per Thousand or 10 Thousands, which helps us to infer to the population\" \r\n          header1=\"How it is calculated?\" \r\n          body1=\r\n          \"● The Viral Load module provides three measures namely by applying mathematical calculation at 5 day rolling average ‘Active COVID cases per 1000 people’, ‘New COVID cases per 10000 people’ and ‘Death cases per 1000 people’. \r\n           ● Main source for data is JHU data repository\"\r\n          className={classes.action}/>\r\n        }\r\n\r\n        \r\n        title=\"Cases Summary\"\r\n        subheader=\"For Telengana\"\r\n\r\n        \r\n      />\r\n {/* <Informationbutton header=\"test\" body=\"test\"/> */}\r\n \r\n <Divider />\r\n    <CardContent style={{ width: \"100%\", height: \"350px\" }}> \r\n    <Griditem  data={data.latest_cases_per_thousand}/>\r\n    <SmallBars />\r\n    </CardContent>\r\n    <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <a href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_daily_reports\" target=\"_blank\" style={{textDecoration:\"none\"}}>Source: Johns Hopkins - Viral load information</a>\r\n          </Button>\r\n        \r\n      </CardActions>\r\n    </Card>\r\n    \r\n     {/* <div><Griditem  data={data.latest_cases_per_thousand}/> */}\r\n     {/* <Informationbutton header=\"test\" body={\"this is an body \\n explainning the details\"}/> */}\r\n     {/* <IconButton color=\"primary\" aria-label=\"Info\" onClick={()=>handleOpen}>\r\n    <InfoIcon/>\r\n    </IconButton> */}\r\n    \r\n    </div>\r\n  };\r\n\r\n\r\n  \r\n \r\n\r\nexport default KPIViews;\r\nexport {Griditem}","import React, { useRef, useLayoutEffect,useState, useEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Informationbutton from './Informationbutton'\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      textAlign:'left'\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n      action: {\r\n        backgroundColor: '#ffff',\r\n        // foregroundColor:'#ffffff'\r\n        // textAlign:\"right\",\r\n        // alignItems: 'right',\r\n        // flexGrow:1\r\n        padding: '30px',\r\n      }\r\n  }));\r\n\r\n\r\n\r\nconst mobility=  gql`   \r\nquery{\r\n  mobility{\r\n         Date,Retail_Recreation,Grocery_Pharmacy,Parks,Transit_Stations,Workplaces,Residential\r\n       \r\n   }\r\n   mobility_summary{\r\n    Category,Value\r\n     }\r\n    }\r\n       `\r\n// const mobilitysummary=  gql`   \r\n//     query{\r\n//         mobility_summary{\r\n//             Category,Value\r\n//              }\r\n//          }\r\n//        `\r\n\r\nfunction CreateChart(props) {\r\n  const chartcurr = useRef(null);\r\n  const classes = useStyles();\r\n//   let itemtitle=''\r\n//   console.log(`In CreateChart: ${props.btnname}`)\r\n//   if (props.btnname==='Summary') {\r\n//    itemtitle =\"Latest Day Mobility Report\"\r\n//   } else {\r\n//    itemtitle=\"Mobility Report Trends\"\r\n//   }\r\n  useLayoutEffect(() => {\r\n    var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n\r\n    chart.width = am4core.percent(100);\r\n    chart.height = am4core.percent(100);\r\n    chart.logo.height =  -15000; \r\n    console.log(`titlename:${props.titlename}`)\r\n   \r\n// Add data\r\nchart.data = props.data;\r\nconsole.log(`chart.data[0]: ${JSON.stringify(chart.data[0].Date)}`)\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\ndateAxis.renderer.grid.template.location = 0;\r\ndateAxis.renderer.minGridDistance = 30;\r\n// dateAxis.renderer.opposite = true;\r\n\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n// Create series\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = props.titlename;\r\nseries.dataFields.dateX = \"Date\";\r\nseries.strokeWidth = 1;\r\nseries.minBulletDistance = 10;\r\n// series.tooltipText = \"{valueY.value}\";\r\nseries.tooltipText =\"aa\"\r\nseries.fillOpacity = 0.1;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.fillOpacity = 0.5;\r\nseries.tooltip.label.padding(12, 12, 12, 12)\r\n\r\nvar seriesRange = dateAxis.createSeriesRange(series);\r\nseriesRange.contents.strokeDasharray = \"2,3\";\r\nseriesRange.contents.stroke = chart.colors.getIndex(8);\r\nseriesRange.contents.strokeWidth = 1;\r\n\r\nvar pattern = new am4core.LinePattern();\r\npattern.rotation = -45;\r\npattern.stroke = seriesRange.contents.stroke;\r\npattern.width = 100;\r\npattern.height = 100;\r\npattern.gap = 6;\r\nseriesRange.contents.fill = pattern;\r\nseriesRange.contents.fillOpacity = 0.5;\r\n\r\n// Add scrollbar\r\nchart.scrollbarX = new am4core.Scrollbar();\r\n\r\n// add range\r\nvar range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\nrange.grid.stroke = chart.colors.getIndex(0);\r\nrange.grid.strokeOpacity = 1;\r\n// range.bullet = new am4core.ResizeButton();\r\n// range.bullet.background.fill = chart.colors.getIndex(0);\r\n// range.bullet.background.states.copyFrom(chart.zoomOutButton.background.states);\r\n// range.bullet.minX = 0;\r\n// range.bullet.adapter.add(\"minY\", function(minY, target) {\r\n//   target.maxY = chart.plotContainer.maxHeight;\r\n//   target.maxX = chart.plotContainer.maxWidth;\r\n//   return chart.plotContainer.maxHeight;\r\n// })\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\n\r\n\r\n// var firstTime = new Date(chart.data[0].Date).getTime();\r\n// var lastTime = new Date(chart.data[chart.data.length - 1].Date).getTime();\r\n// var date = new Date(firstTime + (lastTime - firstTime) / 2);\r\n\r\n// range.date = date;\r\n\r\n// seriesRange.date = date;\r\n// seriesRange.endDate = new Date(chart.data[chart.data.length - 1].Date);\r\n// dateAxis.zoomToDates(\r\n//     new Date(2020, 3, 0),\r\n//     new Date(2020, 10, 30));\r\n    chartcurr.current = chart;\r\n\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  },[props.titlename,props.data]);\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n        title={props.titlename.replace(\"_\",\" \")}\r\n        \r\n        // subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"200px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateChartsummary(props) {\r\n    const chartcurr = useRef(null);\r\n    const classes = useStyles();\r\n    // let itemtitle=''\r\n    // console.log(`In CreateChart: ${props.btnname}`)\r\n    // if (props.btnname==='Summary') {\r\n    //  itemtitle =\"Latest Day Mobility Report\"\r\n    // } else {\r\n    //  itemtitle=\"Mobility Report Trends\"\r\n    // }\r\n    useLayoutEffect(() => {\r\n      var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n      chart.logo.height =  -15000; \r\n      chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\r\n\r\n      chart.data = props.data;\r\n      \r\n      \r\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"Category\";\r\n      categoryAxis.renderer.minGridDistance = 40;\r\n      \r\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.cursorTooltipEnabled = false;\r\n      var series = chart.series.push(new am4charts.CurvedColumnSeries());\r\n      series.dataFields.categoryX = \"Category\";\r\n      series.dataFields.valueY = \"Value\";\r\n      series.tooltipText = \"{valueY.Value}\"\r\n      series.columns.template.strokeOpacity = 0;\r\n      \r\n      series.columns.template.fillOpacity = 0.75;\r\n      \r\n      var hoverState = series.columns.template.states.create(\"hover\");\r\n      hoverState.properties.fillOpacity = 1;\r\n      hoverState.properties.tension = 0.4;\r\n      \r\n      chart.cursor = new am4charts.XYCursor();\r\n      \r\n      // Add distinctive colors for each column using adapter\r\n      series.columns.template.adapter.add(\"fill\", function(fill, target) {\r\n        return chart.colors.getIndex(target.dataItem.index);\r\n      });\r\n      \r\n    //   chart.scrollbarX = new am4core.Scrollbar();\r\n    //   // chartcurr.current = chart;\r\n  \r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  }, [props.data,props.titlename]);\r\n\r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n          title={props.titlename.replace(\"_\",\" \")}\r\n          \r\n          // subheader=\"For the Year 2020\"\r\n          action={\r\n            <Informationbutton header=\"How it works?\" \r\n            body=\r\n            \"● These Community Mobility Reports aim to provide insights into what has changed in response to policies aimed at combating COVID-19.\r\n            ● The reports chart movement trends over time by geography, across different categories of places such as retail and recreation, groceries and pharmacies, parks, transit stations, workplaces, and residential.\"\r\n            header1=\"How it is calculated?\"\r\n            body1=\r\n            \"● Changes for each day are compared to a baseline value for that day of the week.\r\n            ● The baseline is the median value, for the corresponding day of the week, during the five week period 3 Jan – 6 Feb 2020.\r\n            ● The reports show trends over several weeks with the most recent data representing approximately 2–3 days ago (this is how long it takes to produce the reports).\" \r\n            className={classes.action}/>\r\n        \r\n          }\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"500px\" }}/> \r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <a href=\"https://www.google.com/covid19/mobility/\" target=\"_blank\" style={{textDecoration:\"none\"}}>Source: Google Mobility</a>\r\n          </Button>\r\n        \r\n      </CardActions>\r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n const  MS = (props) => {\r\n    const classes = useStyles();\r\n    const [state,setState]= useState(props.placeRender);\r\n    const { loading, error, data } = useQuery(mobility);\r\n    // const { loading, error, data } = useQuery(mobilitysummary);\r\n    console.log(`mobilitysummmary: ${error}`)\r\n   \r\n   \r\n    if (loading) {\r\n      return <div>< Loading/></div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n    console.log(`mobility data${JSON.stringify(data.mobility_summary)}`)\r\n    const onClickHandler = (btnname) =>{\r\n      setState(btnname)\r\n      console.log(`btn clicked ${btnname} ${JSON.stringify(data.mobility_summary)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div>\r\n     {/* <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n        <Button onClick={()=>onClickHandler(\"Summary\")}>Summery</Button>\r\n        <Button onClick={()=>onClickHandler(\"Details\")}>Details</Button>\r\n      </ButtonGroup> */}\r\n      <div>\r\n    {/* <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics\"} */}\r\n        {/* />\r\n    <Divider />\r\n    </Card> */}\r\n\r\n    </div>\r\n      <br/>\r\n      <div className={classes.root}>\r\n          <Grid container spacing={2}\r\n          justify=\"center\"\r\n          >\r\n            \r\n            { state==='Summary' ? (\r\n              \r\n              <Grid item xs={12} sm={12} >\r\n             <CreateChartsummary data={data.mobility_summary} btnname={state} titlename={\"Mobility Summary\"}/>\r\n             </Grid>):\r\n          (Object.keys(data.mobility[0]).slice(1,-1).map((prop, key)=>{ return (<Grid item xs={3} sm={4} key={key}>\r\n         <CreateChart data={data.mobility} btnname={state} titlename={prop}/>\r\n         </Grid>)}))}\r\n          </Grid>\r\n        \r\n        </div>\r\n\r\n      {/* <CreateChart data={data.mobility} btnname={state} /> */}\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default MS;","import 'bootstrap/dist/css/bootstrap.css';\r\nimport {Container,Row, Col } from 'reactstrap'\r\nimport React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createMuiTheme, withStyles, ThemeProvider,makeStyles } from '@material-ui/core/styles';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n// import KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\n// import Icon from '@material-ui/core/Icon';\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\r\nimport gql from \"graphql-tag\";\r\n\r\n\r\nconst query_stats=  gql`   \r\n    query{\r\n      overall_stats{\r\n            Confirmed,Recovered,Deceased\r\n             }\r\n         }\r\n       `\r\n\r\n\r\n// const BootstrapButton = withStyles({\r\n//     root: {\r\n//       boxShadow: 'none',\r\n//       textTransform: 'none',\r\n//       fontSize: 16,\r\n//       padding: '6px 12px',\r\n//       border: '1px solid',\r\n//       lineHeight: 1.5,\r\n//       backgroundColor: '#0063cc',\r\n//       borderColor: '#0063cc',\r\n//       fontFamily: [\r\n//         '-apple-system',\r\n//         'BlinkMacSystemFont',\r\n//         '\"Segoe UI\"',\r\n//         'Roboto',\r\n//         '\"Helvetica Neue\"',\r\n//         'Arial',\r\n//         'sans-serif',\r\n//         '\"Apple Color Emoji\"',\r\n//         '\"Segoe UI Emoji\"',\r\n//         '\"Segoe UI Symbol\"',\r\n//       ].join(','),\r\n//       '&:hover': {\r\n//         backgroundColor: '#0069d9',\r\n//         borderColor: '#0062cc',\r\n//         boxShadow: 'none',\r\n//       },\r\n//       '&:active': {\r\n//         boxShadow: 'none',\r\n//         backgroundColor: '#0062cc',\r\n//         borderColor: '#005cbf',\r\n//       },\r\n//       '&:focus': {\r\n//         boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n//       },\r\n//     },\r\n//   })(Button);\r\n  \r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText('#17a1b9'),\r\n      backgroundColor: '#17a1b9',\r\n      '&:hover': {\r\n        backgroundColor: '#17a1b9',\r\n      },\r\n    },\r\n  }))(Button);\r\n  \r\n  const ColorButton1 = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(\"#ffc107\"),\r\n      backgroundColor: '#ffc107',\r\n      '&:hover': {\r\n        backgroundColor: \"#ffc107\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const ColorButton2 = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(\"#28a745\"),\r\n      backgroundColor: '#28a745',\r\n      '&:hover': {\r\n        backgroundColor: \"#28a745\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      height:'100px',\r\n      width:'300px',\r\n      textAlign:'center',\r\n    //   boxShadow:'0 0 1px rgba(0,0,0,.125), 0 1px 3px rgba(0,0,0,.2)'\r\n    },\r\n    text: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        fontSize: '2.2rem',\r\n        fontWeight:'700',\r\n        margin:'0 0 10px 0',\r\n        whiteSpace:'nowrap',\r\n      },\r\n      textsmall: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        fontSize: '12px',\r\n        // fontWeight:'700'\r\n      },\r\n      icon:{\r\n        width: 60,\r\n        height: 60,\r\n        paddingright:0,\r\n        margin:'0 0 0 0',\r\n      },\r\n\r\n  }));\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: green,\r\n    },\r\n  });\r\n\r\n// import './small-box.scss'\r\n\r\nconst  OverallStats_View = (props) => {\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <div><br/><br/>\r\n        <Container fluid={false}>\r\n         <Row>\r\n            <Col col-lg-4 col-6>\r\n            <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin} startIcon={<ConfirmationNumberIcon className={classes.icon} />}>\r\n                <Container>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.text}>\r\n                       {parseInt(props.data.Confirmed).toLocaleString()}\r\n                    </Typography>\r\n                    </Col></Row>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.textsmall}>\r\n                        Total Confirmed Cases\r\n                    </Typography>\r\n                    </Col></Row>\r\n                </Container>\r\n         </ColorButton>\r\n            </Col>\r\n            <Col col-lg-4 col-6>\r\n                <ColorButton1 variant=\"contained\" color=\"primary\" className={classes.margin} startIcon={<EmojiPeopleIcon className={classes.icon} />}>\r\n                <Container>\r\n                    <Row><Col>\r\n                    \r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.text}>\r\n                        {parseInt(props.data.Recovered).toLocaleString()}\r\n                    </Typography>\r\n                    </Col></Row>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.textsmall}>\r\n                        Total Recovered Cases\r\n                    </Typography>\r\n                    </Col></Row>\r\n                </Container>\r\n                </ColorButton1>\r\n\r\n            </Col>\r\n            <Col col-lg-4 col-6>\r\n                <ColorButton2 variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} startIcon={<AirlineSeatFlatIcon className={classes.icon} />}>\r\n                <Container>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.text}>\r\n                        {parseInt(props.data.Deceased).toLocaleString()}\r\n                    </Typography>\r\n                    </Col></Row>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.textsmall}>\r\n                        Total Fatality Cases\r\n                    </Typography>\r\n                    </Col></Row>\r\n                </Container>\r\n                </ColorButton2>\r\n\r\n            </Col>\r\n           \r\n                </Row>\r\n         </Container>\r\n         </div>\r\n    )\r\n    }\r\n\r\n\r\n    const  OverallStats = (props) => {\r\n      const { loading, error, data } = useQuery(query_stats);\r\n    \r\n      if (loading) {\r\n        return <div className='loader_graph'>Loading...</div>;\r\n      }\r\n      if (error) {\r\n        console.error( error);\r\n        return  <div>Error</div>;\r\n      }\r\n      return <div><OverallStats_View  data={data.overall_stats[0]}/></div>\r\n      \r\n    };\r\n\r\n\r\n    export default OverallStats;","import React from 'react';\r\nimport ActualForecast from './ActualForecast'\r\nimport KPIViews from './KPIViews'\r\nimport SmallBars from './SmallBars'\r\n// import MobilitySummary from './MobilitySummary'\r\nimport Ms from './Ms'\r\nimport OverallStats from './OverallStats'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div >\r\n       <OverallStats />\r\n      <ActualForecast />\r\n      <KPIViews />\r\n      <Ms placeRender=\"Summary\"/>\r\n      {/* <MobilitySummary /> */}\r\n    </div>\r\n  );\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Informationbutton from './Informationbutton'\r\nimport Ms from './Ms'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      textAlign:'left'\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 40px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 40px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n\r\n\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n      action: {\r\n        backgroundColor: '#ffff',\r\n        // foregroundColor:'#ffffff'\r\n        // textAlign:\"right\",\r\n        // alignItems: 'right',\r\n        // flexGrow:1\r\n        // padding: '21px',\r\n      }\r\n  }));\r\n\r\nexport default function Page1() {\r\nconst classes = useStyles();\r\n    return (\r\n<div>\r\n    <br/><br/>\r\n    <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics\"}\r\n            subheader=\"For Telengana\"\r\n            action={\r\n              <Informationbutton \r\n              \r\n              header=\"testa\" body=\"testa\" \r\n              header=\"How it works?\" \r\n            body=\r\n            \"● These Community Mobility Reports aim to provide insights into what has changed in response to policies aimed at combating COVID-19.\r\n            ● The reports chart movement trends over time by geography, across different categories of places such as retail and recreation, groceries and pharmacies, parks, transit stations, workplaces, and residential.\"\r\n            header1=\"How it is calculated?\"\r\n            body1=\r\n            \"● Changes for each day are compared to a baseline value for that day of the week.\r\n            ● The baseline is the median value, for the corresponding day of the week, during the five week period 3 Jan – 6 Feb 2020.\r\n            ● The reports show trends over several weeks with the most recent data representing approximately 2–3 days ago (this is how long it takes to produce the reports).\" \r\n              \r\n              \r\n              className={classes.action}/>\r\n            }\r\n     />\r\n    <Divider />\r\n    </Card>\r\n    <Ms placeRender=\"Details\"/>\r\n</div>\r\n    );\r\n}\r\n","import Typography from '@material-ui/core/Typography';\r\nimport React, { useRef, useLayoutEffect,useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Informationbutton from './Informationbutton'\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\"; \r\n\r\n\r\nconst policyindex=  gql`   \r\nquery{\r\n    policy_index{\r\n    date,india,telangana\r\n     }\r\n}`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      textAlign:'left'\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n      action: {\r\n        backgroundColor: '#ffff',\r\n        // foregroundColor:'#ffffff'\r\n        // textAlign:\"right\",\r\n        // alignItems: 'right',\r\n        // flexGrow:1\r\n        padding: '21px',\r\n      }\r\n  }));\r\nexport default function Page2() {\r\n    const classes = useStyles();\r\n    const { loading, error, data } = useQuery(policyindex);\r\n    // const [state,setState]= useState('Confirmed');\r\n   \r\n       if (loading) {\r\n         return <div className='loader_graph'>Loading...</div>;\r\n       }\r\n       if (error) {\r\n         console.error(error);\r\n         return  <div>Error</div>;\r\n       }\r\n   \r\n    return (\r\n<div>\r\n    <br/><br/>\r\n\r\n<CreateChart data={data.policy_index} />\r\n{/* <PolicyIndex data ={data.policy_index}/> */}\r\n</div>\r\n    );\r\n}\r\n\r\nam4core.useTheme(am4themes_animated);\r\nfunction CreateChart(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In CreateChart: ${props.btnname}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n        var chart = am4core.create(\"chartdiv\", am4plugins_forceDirected.ForceDirectedTree);\r\n        chart.logo.height =  -15000; \r\n        var networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n        \r\n        networkSeries.data = [{\r\n          name: 'Positive',\r\n          children: [{\r\n            name: 'Pos', value: 10\r\n          }, {\r\n            name: 'Positive', value: 6\r\n          }\r\n            ]\r\n        }, {\r\n          name: 'Negative',\r\n            children: [{\r\n              name: 'Neg', value: 10\r\n            }, {\r\n              name: 'Negative', value: 6\r\n            }]}]\r\n        \r\n        networkSeries.dataFields.linkWith = \"linkWith\";\r\n        networkSeries.dataFields.name = \"name\";\r\n        networkSeries.dataFields.id = \"name\";\r\n        networkSeries.dataFields.value = \"value\";\r\n        networkSeries.dataFields.children = \"children\";\r\n        networkSeries.links.template.distance = 1;\r\n        networkSeries.nodes.template.tooltipText = \"{name}\";\r\n        networkSeries.nodes.template.fillOpacity = 1;\r\n        networkSeries.nodes.template.outerCircle.scale = 1;\r\n        \r\n        networkSeries.nodes.template.label.text = \"{name}\"\r\n        networkSeries.fontSize = 8;\r\n        networkSeries.nodes.template.label.hideOversized = true;\r\n        networkSeries.nodes.template.label.truncate = true;\r\n        networkSeries.minRadius = am4core.percent(2);\r\n        networkSeries.manyBodyStrength = -5;\r\n        networkSeries.links.template.strokeOpacity = 0;\r\n  \r\n      chart.current = chart;\r\n  \r\n      return () => {\r\n        chart.dispose();\r\n      };\r\n    },[props.btnname,props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Twitter Sentiment\"\r\n          subheader=\"Hashtag #covid-19\"\r\n          action={\r\n            <Informationbutton \r\n            header=\"How it works?\" \r\n            \r\n            body=\"● We are going to integrate the Novartis Survey details to show Sentiment of employees\" \r\n            header1=\"How it is calculated?\"\r\n            body1=\r\n            \"● We are going to use anonymous data and extract the sentiment though advanced NLP techniques.\"\r\n            className={classes.action}/>\r\n          }\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PolicyIndex(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In malefemale: ${JSON.stringify(props.data)}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n       \r\nvar mainContainer = am4core.create(\"PolicyIndex\", am4core.Container);\r\nmainContainer.width = am4core.percent(100);\r\nmainContainer.height = am4core.percent(100);\r\nmainContainer.layout = \"horizontal\";\r\nmainContainer.logo.height =  -15000; \r\nvar usData = props.data;\r\n\r\nvar maleChart = mainContainer.createChild(am4charts.XYChart);\r\nmaleChart.paddingRight = 0;\r\n// maleChart.data = JSON.parse(JSON.stringify(usData));\r\nmaleChart.data=usData\r\nconsole.log(`JSON.parse(JSON.stringify(usData)) : ${JSON.parse(JSON.stringify(usData))}`)\r\n// Create axes\r\nvar maleCategoryAxis = maleChart.yAxes.push(new am4charts.CategoryAxis());\r\n// let maleCategoryAxis = maleChart.yAxes.push(new am4charts.DateAxis());\r\n\r\nmaleCategoryAxis.dataFields.category = \"date\";\r\nmaleCategoryAxis.renderer.grid.template.location = 0;\r\nmaleCategoryAxis.renderer.inversed = false;\r\nmaleCategoryAxis.renderer.minGridDistance = 15;\r\n\r\nvar maleValueAxis = maleChart.xAxes.push(new am4charts.ValueAxis());\r\nmaleValueAxis.renderer.inversed = true;\r\nmaleValueAxis.min = 0;\r\nmaleValueAxis.max = 1;\r\nmaleValueAxis.strictMinMax = true;\r\n\r\nmaleCategoryAxis.dateFormatter = new am4core.DateFormatter();\r\nmaleCategoryAxis.dateFormatter.dateFormat  = \"d MMM, yyyy\";\r\n// maleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// maleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\n\r\n// Create series\r\nvar maleSeries = maleChart.series.push(new am4charts.ColumnSeries());\r\nmaleSeries.dataFields.valueX = \"india\";\r\n// maleSeries.dataFields.valueXShow = \"percent\";\r\n// maleSeries.calculatePercent = true;\r\nmaleSeries.dataFields.categoryY = \"date\";\r\n// maleSeries.interpolationDuration = 1000;\r\nmaleSeries.columns.template.tooltipText = \"India: {valueX}\";\r\n//maleSeries.sequencedInterpolation = true;\r\n\r\n\r\nvar femaleChart = mainContainer.createChild(am4charts.XYChart);\r\nfemaleChart.paddingLeft = 0;\r\n// femaleChart.data = JSON.parse(JSON.stringify(usData));\r\nfemaleChart.data= usData\r\n// Create axes\r\nvar femaleCategoryAxis = femaleChart.yAxes.push(new am4charts.CategoryAxis());\r\nfemaleCategoryAxis.renderer.opposite = true;\r\nfemaleCategoryAxis.dataFields.category = \"date\";\r\nfemaleCategoryAxis.renderer.grid.template.location = 0;\r\nfemaleCategoryAxis.renderer.minGridDistance = 15;\r\nfemaleCategoryAxis.renderer.inversed=false;\r\nvar femaleValueAxis = femaleChart.xAxes.push(new am4charts.ValueAxis());\r\nfemaleValueAxis.min = 0;\r\nfemaleValueAxis.max = 1;\r\nfemaleValueAxis.strictMinMax = true;\r\n// femaleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// femaleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\nfemaleValueAxis.renderer.minLabelPosition = 0.01;\r\n\r\n// Create series\r\nvar femaleSeries = femaleChart.series.push(new am4charts.ColumnSeries());\r\nfemaleSeries.dataFields.valueX = \"telangana\";\r\n// femaleSeries.dataFields.valueXShow = \"percent\";\r\n// femaleSeries.calculatePercent = true;\r\nfemaleSeries.fill = femaleChart.colors.getIndex(4);\r\nfemaleSeries.stroke = femaleSeries.fill;\r\n//femaleSeries.sequencedInterpolation = true;\r\nfemaleSeries.columns.template.tooltipText = \"Telangana: {valueX}\";\r\nfemaleSeries.dataFields.categoryY = \"date\";\r\n// femaleSeries.interpolationDuration = 1000;\r\n\r\n  \r\n      return () => {\r\n        mainContainer.dispose();\r\n      };\r\n    },[props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Policy Index\"\r\n          subheader=\"Lesser the value better\"\r\n          action={\r\n            <Informationbutton header=\"test\" body=\"test\" className={classes.action}/>\r\n          }\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"PolicyIndex\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PolicyIcon from '@material-ui/icons/Policy';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { Switch } from '@material-ui/core';\r\nconst sideOptions = [{\r\n    title: \"Summary\",\r\n    path: \"home\"\r\n},\r\n{\r\n    title: \"Mobility\",\r\n    path: \"Mobility\"\r\n},\r\n{\r\n    title: \"Policies\",\r\n    path: \"Policies\"\r\n},\r\n{\r\n    title: \"Sentiment\",\r\n    path: \"Sentiment\"\r\n},\r\n\r\n\r\n]\r\nexport const mainListItems = (\r\n    \r\n    <div>\r\n        {sideOptions.map((option, index) => (\r\n            <ListItem button key={option.title} component=\"a\" href={option.path === \"home\" ? \"\\\\\" : option.path}>\r\n                <ListItemIcon>\r\n              { option.title==='Summary'? <Assessment />\r\n                : option.title==='Mobility' ? <Commute /> \r\n                : option.title==='Sentiment' ? <SentimentVerySatisfiedIcon />\r\n                :option.title==='Policies' ? <PolicyIcon />\r\n                :''\r\n\r\n              }\r\n              \r\n              \r\n                </ListItemIcon>\r\n                <ListItemText primary={option.title} />\r\n            </ListItem>\r\n        ))}\r\n        {/* <ListItem button key={text.topic} component=\"a\" href={text.path === \"home\" ? \"\\\\\" : text.path}>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sentiment\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Mobility\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"About\" />\r\n        </ListItem>\r\n        {/* <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem> */}\r\n    </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Saved reports</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem>\r\n    </div>\r\n);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './menuOptions';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    // width: '100%',\r\n    // height: 'calc(100% - 200px)',\r\n    // [theme.breakpoints.up(\"md\")]: {\r\n    //   overflow: \"auto\",\r\n    //   width: drawerWidth,\r\n    //   position: \"relative\",\r\n    //   height: \"100%\"\r\n    // },\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{display:'flex'}}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Back to Office Analytics\r\n          </Typography>\r\n          {/* <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        {/* <Divider />\r\n        <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Novartis\r\n        </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <Box pt={4}>\r\n            <Copyright />\r\n        </Box>)\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport React, { useRef, useLayoutEffect,useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Informationbutton from './Informationbutton'\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_timeline from \"@amcharts/amcharts4/plugins/timeline\";\r\nimport * as am4plugins_bullets from \"@amcharts/amcharts4/plugins/bullets\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\"; \r\n\r\n\r\nconst policyindex=  gql`   \r\nquery{\r\n    policy_index{\r\n    date,india,telangana\r\n     }\r\n     ,\r\n     country_policies_india{\r\n            start,end,task           \r\n    },\r\n     country_policies_telangana{\r\n            start,end,task           \r\n    },\r\n}`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      textAlign:'left'\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n      clock:{\r\n        maxWidth: '100%',\r\n        flexGrow: 1,\r\n        textAlign: 'left',\r\n      }\r\n  }));\r\nexport default function CountryPolicies() {\r\n    const classes = useStyles();\r\n    const { loading, error, data } = useQuery(policyindex);\r\n    const [state,setState]= useState('Telangana');\r\n    // const [state,setState]= useState('Confirmed');\r\n   \r\n       if (loading) {\r\n         return <div className='loader_graph'>Loading...</div>;\r\n       }\r\n       if (error) {\r\n         console.error(error);\r\n         return  <div>Error</div>;\r\n       }\r\n       const onClickHandler = (btnname) =>{\r\n        setState(btnname)\r\n        // console.log(`btn clicked ${btnname} ${JSON.stringify(data)}`)\r\n      //  return <Test data={data} btnname={state} />\r\n      }\r\n    return (\r\n<div>\r\n   \r\n    <div style={{textAlign:'left'}}>\r\n     <br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\" style={{marginBottom:'5px'}}>\r\n        <Button onClick={()=>onClickHandler(\"Telangana\")}>Telangana</Button>\r\n        <Button onClick={()=>onClickHandler(\"India\")}>India</Button>\r\n      </ButtonGroup>\r\n      </div>\r\n<CreateChart data={state==='India'? data.country_policies_india : data.country_policies_telangana} title={state} />\r\n<br/>\r\n<PolicyIndex data ={data.policy_index}/>\r\n</div>\r\n    );\r\n}\r\n\r\nam4core.useTheme(am4themes_animated);\r\nfunction CreateChart(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n   console.log(JSON.stringify(props.data));\r\n    useLayoutEffect(() => {\r\n        var container = am4core.create(\"countrypolicies\", am4core.Container);\r\n        container.width = am4core.percent(100);\r\n        container.height = am4core.percent(100);\r\n        \r\n        var interfaceColors = new am4core.InterfaceColorSet();\r\n        var colorSet = new am4core.ColorSet();\r\n        \r\n        var chart = container.createChild(am4plugins_timeline.CurveChart);\r\n        container.logo.height =  -15000; \r\n\r\n        chart.data =props.data.reverse()\r\n\r\n        let min_act=props.data.reduce(\r\n            (olddt,newdt)=> \r\n            (new Date(olddt.start) ) < (new Date(newdt.start) )\r\n            ? olddt:newdt)\r\n          \r\n          \r\n            let max_act=props.data.reduce(\r\n              (olddt,newdt)=> \r\n              (new Date(olddt.end) ) > (new Date(newdt.end))\r\n              ? olddt:newdt)\r\n        console.log(`min_act:${min_act.start}`);\r\n        console.log(`max_act:${max_act.end}`);\r\n        \r\n        chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n        chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\r\n        chart.dy = 75;\r\n        chart.maskBullets = false;\r\n        \r\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"task\";\r\n        categoryAxis.renderer.labels.template.paddingRight = 25;\r\n        categoryAxis.renderer.minGridDistance = 10;\r\n        categoryAxis.renderer.innerRadius = 0;\r\n        categoryAxis.renderer.radius = 100;\r\n        categoryAxis.renderer.grid.template.location = 1;\r\n        \r\n        var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.minGridDistance = 70;\r\n        dateAxis.min = new Date(min_act).getTime();\r\n        dateAxis.max = new Date(max_act).getTime();\r\n        \r\n        dateAxis.baseInterval = { count: 1, timeUnit: \"month\" };\r\n        dateAxis.startLocation = -0.5;\r\n        \r\n        dateAxis.renderer.points = [{ x: -400, y: 0 }, { x: -250, y: 0 }, { x: 0, y: 60 }, { x: 250, y: 0 }, { x: 400, y: 0 }];\r\n        dateAxis.renderer.autoScale = false;\r\n        dateAxis.renderer.polyspline.tensionX = 0.8;\r\n        dateAxis.renderer.tooltipLocation = 0;\r\n        dateAxis.renderer.grid.template.disabled = true;\r\n        dateAxis.renderer.line.strokeDasharray = \"1,4\";\r\n        dateAxis.renderer.line.strokeOpacity = 0.7;\r\n        dateAxis.tooltip.background.fillOpacity = 0.2;\r\n        dateAxis.tooltip.background.cornerRadius = 5;\r\n        dateAxis.tooltip.label.fill = new am4core.InterfaceColorSet().getFor(\"alternativeBackground\");\r\n        dateAxis.tooltip.label.paddingTop = 7;\r\n        \r\n        var labelTemplate = dateAxis.renderer.labels.template;\r\n        labelTemplate.verticalCenter = \"middle\";\r\n        labelTemplate.fillOpacity = 0.7;\r\n        labelTemplate.background.fill = interfaceColors.getFor(\"background\");\r\n        labelTemplate.background.fillOpacity = 1;\r\n        labelTemplate.padding(7,7,7,7);\r\n        \r\n        var series = chart.series.push(new am4plugins_timeline.CurveColumnSeries());\r\n        series.columns.template.height = am4core.percent(15);\r\n        series.columns.template.tooltipText = \"{categoryX}: [bold]{openDateX}[/] - [bold]{dateX}[/]\";\r\n        \r\n        series.dataFields.openDateX = \"start\";\r\n        series.dataFields.dateX = \"end\";\r\n        series.dataFields.categoryY = \"task\";\r\n        series.columns.template.propertyFields.fill = \"color\"; // get color from data\r\n        series.columns.template.propertyFields.stroke = \"color\";\r\n        series.columns.template.strokeOpacity = 0;\r\n        \r\n        series.columns.template.adapter.add(\"fill\", function (fill, target) {\r\n           return chart.colors.getIndex(target.dataItem.index * 3);\r\n        })\r\n        \r\n        var flagBullet1 = new am4plugins_bullets.FlagBullet();\r\n        series.bullets.push(flagBullet1);\r\n        flagBullet1.disabled = true;\r\n        flagBullet1.propertyFields.disabled = \"bulletf1\";\r\n        flagBullet1.locationX = 1;\r\n        flagBullet1.label.text = \"start\";\r\n        \r\n        var flagBullet2 = new am4plugins_bullets.FlagBullet();\r\n        series.bullets.push(flagBullet2);\r\n        flagBullet2.disabled = true;\r\n        flagBullet2.propertyFields.disabled = \"bulletf2\";\r\n        flagBullet2.locationX = 0;\r\n        flagBullet2.background.fill = interfaceColors.getFor(\"background\");\r\n        flagBullet2.label.text = \"end\";\r\n        \r\n        var bullet = new am4charts.CircleBullet();\r\n        series.bullets.push(bullet);\r\n        bullet.circle.radius = 3;\r\n        bullet.circle.strokeOpacity = 0;\r\n        bullet.locationX = 0;\r\n        \r\n        bullet.adapter.add(\"fill\", function (fill, target) {\r\n           return chart.colors.getIndex(target.dataItem.index * 3);\r\n        })\r\n        \r\n        var bullet2 = new am4charts.CircleBullet();\r\n        series.bullets.push(bullet2);\r\n        bullet2.circle.radius = 3;\r\n        bullet2.circle.strokeOpacity = 0;\r\n        bullet2.propertyFields.fill = \"color\";\r\n        bullet2.locationX = 1;\r\n        \r\n        bullet2.adapter.add(\"fill\", function (fill, target) {\r\n           return chart.colors.getIndex(target.dataItem.index * 3);\r\n        })\r\n        \r\n        chart.scrollbarX = new am4core.Scrollbar();\r\n        chart.scrollbarX.align = \"center\"\r\n        chart.scrollbarX.width = 800;\r\n        chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n        chart.scrollbarX.dy = - 90;\r\n        chart.scrollbarX.opacity = 0.4;\r\n        \r\n        var cursor = new am4plugins_timeline.CurveCursor();\r\n        chart.cursor = cursor;\r\n        cursor.xAxis = dateAxis;\r\n        cursor.yAxis = categoryAxis;\r\n        cursor.lineY.disabled = true;\r\n        cursor.lineX.strokeDasharray = \"1,4\";\r\n        cursor.lineX.strokeOpacity = 1;\r\n        \r\n        dateAxis.renderer.tooltipLocation2 = 0;\r\n        categoryAxis.cursorTooltipEnabled = false;\r\n        \r\n        \r\n        /// clock\r\n        var clock = container.createChild(am4charts.GaugeChart);\r\n        clock.toBack();\r\n        \r\n        clock.radius = 120;\r\n        clock.dy = -100;\r\n        clock.startAngle = -90;\r\n        clock.endAngle = 270;\r\n        \r\n        var axis = clock.xAxes.push(new am4charts.ValueAxis());\r\n        axis.min = 0;\r\n        axis.max = 12;\r\n        axis.strictMinMax = true;\r\n        \r\n        axis.renderer.line.strokeWidth = 1;\r\n        axis.renderer.line.strokeOpacity = 0.5;\r\n        axis.renderer.line.strokeDasharray = \"1,4\";\r\n        axis.renderer.minLabelPosition = 0.05; // hides 0 label\r\n        axis.renderer.inside = true;\r\n        axis.renderer.labels.template.radius = 30;\r\n        axis.renderer.grid.template.disabled = true;\r\n        axis.renderer.ticks.template.length = 12;\r\n        axis.renderer.ticks.template.strokeOpacity = 1;\r\n        \r\n        // serves as a clock face fill\r\n        var range = axis.axisRanges.create();\r\n        range.value = 0;\r\n        range.endValue = 12;\r\n        range.grid.visible = false;\r\n        range.tick.visible = false;\r\n        range.label.visible = false;\r\n        \r\n        var axisFill = range.axisFill;\r\n        \r\n        // hands\r\n        var hourHand = clock.hands.push(new am4charts.ClockHand());\r\n        hourHand.radius = am4core.percent(60);\r\n        hourHand.startWidth = 5;\r\n        hourHand.endWidth = 5;\r\n        hourHand.rotationDirection = \"clockWise\";\r\n        hourHand.pin.radius = 8;\r\n        hourHand.zIndex = 1;\r\n        \r\n        var minutesHand = clock.hands.push(new am4charts.ClockHand());\r\n        minutesHand.rotationDirection = \"clockWise\";\r\n        minutesHand.startWidth = 3;\r\n        minutesHand.endWidth = 3;\r\n        minutesHand.radius = am4core.percent(78);\r\n        minutesHand.zIndex = 2;\r\n        \r\n        chart.cursor.events.on(\"cursorpositionchanged\", function (event) {\r\n           var value = dateAxis.positionToValue(event.target.xPosition)\r\n           var date = new Date(value);\r\n           var hours = date.getHours();\r\n           var minutes = date.getMinutes();\r\n           // set hours\r\n           hourHand.showValue(hours + minutes / 60, 0);\r\n           // set minutes\r\n           minutesHand.showValue(12 * minutes/ 60, 0);       \r\n        })\r\n      return () => {\r\n        chart.dispose();\r\n      };\r\n    },[props.btnname,props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Restriction Policies\"\r\n          subheader={props.title}\r\n          action={\r\n            <Informationbutton header=\"How it works?\" \r\n            \r\n            body=\"● Policy scores reflect the restrictions imposed through government policies such as business closure, school closure, gathering restrictions etc.\" \r\n            header1=\"How it is calculated?\"\r\n            body1=\r\n            \"● This data is being retrieved from IHME.\r\n            ● Policy list refers to policy for each region as per the recent update from IHME.\" className={classes.action}/>\r\n          }\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent id=\"countrypolicies\" style={{ width: \"100%\", height: \"500px\"}}/> \r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <a href=\"https://covid19.healthdata.org/global?view=social-distancing&tab=trend\" target=\"_blank\" style={{textDecoration:\"none\"}}>Source: IHME - Policy restrictions</a>\r\n          </Button>\r\n        \r\n      </CardActions>\r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PolicyIndex(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In malefemale: ${JSON.stringify(props.data)}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n       \r\nvar mainContainer = am4core.create(\"PolicyIndex\", am4core.Container);\r\nmainContainer.width = am4core.percent(100);\r\nmainContainer.height = am4core.percent(100);\r\nmainContainer.layout = \"horizontal\";\r\nmainContainer.logo.height =  -15000; \r\nvar usData = props.data;\r\n\r\nvar maleChart = mainContainer.createChild(am4charts.XYChart);\r\nmaleChart.paddingRight = 0;\r\n// maleChart.data = JSON.parse(JSON.stringify(usData));\r\nmaleChart.data=usData\r\nconsole.log(`JSON.parse(JSON.stringify(usData)) : ${JSON.parse(JSON.stringify(usData))}`)\r\n// Create axes\r\nvar maleCategoryAxis = maleChart.yAxes.push(new am4charts.CategoryAxis());\r\n// let maleCategoryAxis = maleChart.yAxes.push(new am4charts.DateAxis());\r\n\r\nmaleCategoryAxis.dataFields.category = \"date\";\r\nmaleCategoryAxis.renderer.grid.template.location = 0;\r\nmaleCategoryAxis.renderer.inversed = false;\r\nmaleCategoryAxis.renderer.minGridDistance = 15;\r\n\r\nvar maleValueAxis = maleChart.xAxes.push(new am4charts.ValueAxis());\r\nmaleValueAxis.renderer.inversed = true;\r\nmaleValueAxis.min = 0;\r\nmaleValueAxis.max = 1;\r\nmaleValueAxis.strictMinMax = true;\r\n\r\nmaleCategoryAxis.dateFormatter = new am4core.DateFormatter();\r\nmaleCategoryAxis.dateFormatter.dateFormat  = \"d MMM, yyyy\";\r\n// maleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// maleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\n\r\n// Create series\r\nvar maleSeries = maleChart.series.push(new am4charts.ColumnSeries());\r\nmaleSeries.dataFields.valueX = \"india\";\r\n// maleSeries.dataFields.valueXShow = \"percent\";\r\n// maleSeries.calculatePercent = true;\r\nmaleSeries.dataFields.categoryY = \"date\";\r\n// maleSeries.interpolationDuration = 1000;\r\nmaleSeries.columns.template.tooltipText = \"India: {valueX}\";\r\n//maleSeries.sequencedInterpolation = true;\r\n\r\n\r\nvar femaleChart = mainContainer.createChild(am4charts.XYChart);\r\nfemaleChart.paddingLeft = 0;\r\n// femaleChart.data = JSON.parse(JSON.stringify(usData));\r\nfemaleChart.data= usData\r\n// Create axes\r\nvar femaleCategoryAxis = femaleChart.yAxes.push(new am4charts.CategoryAxis());\r\nfemaleCategoryAxis.renderer.opposite = true;\r\nfemaleCategoryAxis.dataFields.category = \"date\";\r\nfemaleCategoryAxis.renderer.grid.template.location = 0;\r\nfemaleCategoryAxis.renderer.minGridDistance = 15;\r\nfemaleCategoryAxis.renderer.inversed=false;\r\nvar femaleValueAxis = femaleChart.xAxes.push(new am4charts.ValueAxis());\r\nfemaleValueAxis.min = 0;\r\nfemaleValueAxis.max = 1;\r\nfemaleValueAxis.strictMinMax = true;\r\n// femaleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// femaleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\nfemaleValueAxis.renderer.minLabelPosition = 0.01;\r\n\r\n// Create series\r\nvar femaleSeries = femaleChart.series.push(new am4charts.ColumnSeries());\r\nfemaleSeries.dataFields.valueX = \"telangana\";\r\n// femaleSeries.dataFields.valueXShow = \"percent\";\r\n// femaleSeries.calculatePercent = true;\r\nfemaleSeries.fill = femaleChart.colors.getIndex(4);\r\nfemaleSeries.stroke = femaleSeries.fill;\r\n//femaleSeries.sequencedInterpolation = true;\r\nfemaleSeries.columns.template.tooltipText = \"Telangana: {valueX}\";\r\nfemaleSeries.dataFields.categoryY = \"date\";\r\n// femaleSeries.interpolationDuration = 1000;\r\n\r\n  \r\n      return () => {\r\n        mainContainer.dispose();\r\n      };\r\n    },[props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Policy Index\"\r\n          subheader=\"Lesser the value better\"\r\n          action={\r\n            <Informationbutton header=\"How it works?\" \r\n            \r\n            body=\"● Policy scores reflect the restrictions imposed through government policies such as business closure, school closure, gathering restrictions etc.\" \r\n            header1=\"How it is calculated?\"\r\n            body1=\r\n            \"● This data is being retrieved from IHME.\r\n            ● Policy list refers to policy for each region as per the recent update from IHME.\r\n            \" className={classes.action}/>\r\n          }\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"PolicyIndex\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <a href=\"https://covid19.healthdata.org/global?view=social-distancing&tab=trend\" target=\"_blank\" style={{textDecoration:\"none\"}}>Source: IHME - Policy restrictions</a>\r\n          </Button>\r\n        \r\n      </CardActions>\r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  ","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Dashboard from './Dashboard'\r\nimport Page1 from './Page1'\r\nimport Page2 from './Page2'\r\nimport SideBar from './sideBar'\r\nimport Footer from './footer'\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport CountryPolicies from './CountryPolicies';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <SideBar />\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Switch>\r\n              <Route exact path=\"/\" exact render={() => <Redirect to=\"/Dashboard\" />} />\r\n              <Route exact path=\"/Dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/Mobility\" component={Page1} />\r\n              <Route exact path=\"/Sentiment\" component={Page2} />\r\n              <Route exact path=\"/Policies\" component={CountryPolicies} />\r\n            </Switch>\r\n            <Footer />\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n\r\n  // uri: 'http://localhost:8080/graphql'\r\n  uri:  'http://hfa-backend-hfa.statwb-dev.eu.novartis.net/graphql'\r\n  // uri:'http://covid-backend-back-to-office-analytics.statwb-dev.eu.novartis.net/graphql'\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n})\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ApolloProvider client={client}>\r\n      <React.Fragment>\r\n        <React.StrictMode>\r\n          <App />\r\n        </React.StrictMode>\r\n      </React.Fragment>\r\n    </ApolloProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}