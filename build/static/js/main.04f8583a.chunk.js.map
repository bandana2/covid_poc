{"version":3,"sources":["Loading.js","ActualForecast.js","KPIViews.js","SmallBars.js","Ms.js","OverallStats.js","Dashboard.js","Page1.js","Page2.js","menuOptions.js","sideBar.js","footer.js","CountryPolicies.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","Segment","Dimmer","active","inverted","Loader","content","Image","src","am4core","am4themes_animated","useStyles","makeStyles","theme","root","maxWidth","header","background","borderRadius","border","color","height","padding","boxShadow","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","button","textAlign","data1","gql","CreateChart","props","chart","useRef","classes","itemtitle","console","log","btnname","useLayoutEffect","x","am4charts","paddingRight","data","dateAxis","xAxes","push","renderer","grid","template","location","valueAxis","yAxes","tooltip","disabled","minWidth","series","dataFields","dateX","valueY","name","tooltipText","cursor","scrollbarX","range","axisRanges","stroke","colors","getIndex","strokeOpacity","seriesRange","createSeriesRange","contents","strokeDasharray","strokeWidth","legend","bullet","fill","states","copyFrom","zoomOutButton","minX","adapter","add","minY","target","maxY","plotContainer","maxHeight","maxX","min_act","reduce","olddt","newdt","Date","Type","max_act","JSON","stringify","date","endDate","logo","current","dispose","Card","className","CardHeader","title","subheader","Divider","CardContent","id","style","width","ActualForecast","useQuery","loading","error","useState","state","setState","onClickHandler","ButtonGroup","aria-label","marginBottom","Button","onClick","actuals","flexGrow","paper","spacing","palette","text","secondary","margin","data2","Griditem","Grid","container","justify","item","xs","sm","chtname","value","ACTIVE_CASES_PER_1000","NEW_CASES_PER_10000","DEATHS_PER_1000","capacity","component","chartContainer","createChild","y","circle","circleMask","waves","mask","horizontalCenter","waveHeight","waveLength","events","on","smallerSize","Math","min","pixelWidth","pixelHeight","radius","max","labelRadius","capacityLabel","path","moveTo","arcToPoint","locationOnPath","pixelRadius","animate","property","to","from","elasticOut","setValue","label","formattedValue","numberFormatter","format","toUpperCase","fontSize","KPIViews","latest_cases_per_thousand","querygraph","axis","SmallBarsViews","labels","startLocation","endLocation","cursorTooltipEnabled","baseGrid","lineY","tensionX","bullets","opacity","propertyFields","SmallBars","cases_per_thousand","headermain","mobility","chartcurr","titlename","minGridDistance","minBulletDistance","fillOpacity","pointerOrientation","cornerRadius","pattern","rotation","gap","zoomToDates","replace","CreateChartsummary","hiddenState","properties","categoryAxis","category","categoryX","columns","hoverState","tension","dataItem","index","MS","placeRender","mobility_summary","Object","keys","slice","map","prop","key","query_stats","ColorButton","withStyles","getContrastText","ColorButton1","ColorButton2","fontWeight","whiteSpace","textsmall","icon","paddingright","OverallStats_View","createMuiTheme","primary","green","fluid","Row","Col","col-lg-4","col-6","variant","startIcon","Typography","gutterBottom","parseInt","Confirmed","toLocaleString","Recovered","disableRipple","Deceased","OverallStats","overall_stats","Dashboard","Ms","Page1","policyindex","Page2","policy_index","am4plugins_forceDirected","networkSeries","children","linkWith","links","distance","nodes","outerCircle","scale","hideOversized","truncate","minRadius","manyBodyStrength","mainListItems","option","ListItem","href","ListItemIcon","ListItemText","ListSubheader","display","toolbar","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","position","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","overflow","paddingBottom","flexDirection","fixedHeight","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","Drawer","List","Copyright","align","Link","getFullYear","Footer","Box","pt","clock","CountryPolicies","country_policies_india","country_policies_telangana","interfaceColors","am4plugins_timeline","reverse","start","end","dateFormatter","dateFormat","inputDateFormat","dy","maskBullets","innerRadius","getTime","baseInterval","count","timeUnit","points","autoScale","polyspline","tooltipLocation","line","getFor","labelTemplate","verticalCenter","openDateX","categoryY","flagBullet1","am4plugins_bullets","locationX","flagBullet2","bullet2","parent","bottomAxesContainer","xAxis","yAxis","lineX","tooltipLocation2","toBack","startAngle","endAngle","strictMinMax","minLabelPosition","inside","ticks","length","endValue","visible","tick","axisFill","hourHand","hands","startWidth","endWidth","rotationDirection","pin","minutesHand","event","positionToValue","xPosition","hours","getHours","minutes","getMinutes","showValue","PolicyIndex","mainContainer","layout","usData","maleChart","parse","maleCategoryAxis","inversed","maleValueAxis","maleSeries","valueX","femaleChart","paddingLeft","femaleCategoryAxis","opposite","femaleValueAxis","femaleSeries","App","Container","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","ReactDOM","render","Fragment","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04f8583a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nconst Loading = () => (\r\n  <div>\r\n    {/* <Segment>\r\n      <Dimmer active>\r\n        <Loader content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment> */}\r\n\r\n    <Segment>\r\n      <Dimmer active inverted>\r\n        <Loader inverted content='Loading' />\r\n      </Dimmer>\r\n\r\n      <Image src='/images/wireframe/short-paragraph.png' />\r\n    </Segment>\r\n  </div>\r\n)\r\n\r\nexport default Loading","import React, { useRef, useLayoutEffect,useState } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      \r\n\r\n    },\r\n    header:{\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    button:{\r\n      textAlign:\"left\"\r\n    }\r\n  }));\r\n\r\n\r\nconst data1=  gql`   \r\n    query{\r\n           actuals{\r\n               Date,Confirmed,Recovered,Deceased,Type\r\n             }\r\n         }\r\n       `\r\n\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  const classes = useStyles();\r\n  let itemtitle=''\r\n  console.log(`In CreateChart: ${props.btnname}`)\r\n  if (props.btnname==='Confirmed') {\r\n   itemtitle =\"Covid Confirmed Cases Trend\"\r\n  } else if(props.btnname==='Recovered'){\r\n   itemtitle=\"Covid Recovered Cases Trend\"\r\n  } else {\r\n   itemtitle=\"Covid Fatality Cases Trend\"\r\n  }\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n   \r\n    x.paddingRight = 20;\r\n\r\n    // let data = [];\r\n    // let visits = 10;\r\n\r\n    // for (let i = 1; i < 366; i++) {\r\n    //   visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n    //   data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n    // }\r\n\r\n    x.data = props.data;\r\n\r\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = x.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"Date\";\r\n    series.dataFields.valueY = props.btnname;\r\n    series.name=\"Actuals\"\r\n    series.tooltipText = \"{valueY.value}\";\r\n    x.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    x.scrollbarX = scrollbarX;\r\n    var range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\n    range.grid.stroke = x.colors.getIndex(0);\r\n    range.grid.strokeOpacity = 1;\r\n   \r\n    var seriesRange = dateAxis.createSeriesRange(series);\r\n    seriesRange.contents.strokeDasharray = \"2,3\";\r\n    seriesRange.contents.stroke = x.colors.getIndex(8);\r\n    seriesRange.contents.strokeWidth = 1;\r\n    seriesRange.name=\"b\"\r\nx.legend = new am4charts.Legend();\r\n\r\nrange.bullet = new am4core.ResizeButton();\r\nrange.bullet.background.fill = x.colors.getIndex(0);\r\nrange.bullet.background.states.copyFrom(x.zoomOutButton.background.states);\r\nrange.bullet.minX = 0;\r\nrange.bullet.adapter.add(\"minY\", function(minY, target) {\r\n  target.maxY = x.plotContainer.maxHeight;\r\n  target.maxX = x.plotContainer.maxWidth;\r\n  return x.plotContainer.maxHeight;\r\n})\r\n\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\nlet min_act=props.data.reduce(\r\n  (olddt,newdt)=> \r\n  (new Date(olddt.Date) && olddt.Type==='Acutals') > (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n  ? olddt:newdt)\r\n\r\n\r\n  let max_act=props.data.reduce(\r\n    (olddt,newdt)=> \r\n    (new Date(olddt.Date) && olddt.Type==='Acutals') < (new Date(newdt.Date) && newdt.Type==='Acutals')\r\n    ? olddt:newdt)\r\n  \r\nconsole.log(`min_act:${JSON.stringify(min_act)} mix_act${JSON.stringify(max_act)}`)\r\n\r\nrange.date = new Date(min_act.Date);\r\nseriesRange.date = new Date(min_act.Date);\r\nseriesRange.endDate = new Date(max_act.Date)\r\n\r\n\r\n\r\n\r\n\r\n\r\nx.logo.height =  -15000; \r\n    chart.current = x;\r\n\r\n    return () => {\r\n      x.dispose();\r\n    };\r\n  },[props.btnname,props.data] );\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n  // style={{Color: \"#000\", Background: \"blue\"}}\r\n        title={itemtitle}\r\n        subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n const  ActualForecast = () => {\r\n    const { loading, error, data } = useQuery(data1);\r\n const [state,setState]= useState('Confirmed');\r\n\r\n const classes = useStyles();\r\n\r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n   \r\n    const onClickHandler = (btnname,data) =>{\r\n      setState(btnname)\r\n      // console.log(`btn clicked ${btnname} ${JSON.stringify(data)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div style={{textAlign:'left'}}>\r\n     <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\" style={{marginBottom:'5px'}}>\r\n        <Button onClick={()=>onClickHandler(\"Confirmed\",data.actuals)}>Confirmed</Button>\r\n        <Button onClick={()=>onClickHandler(\"Recovered\",data.actuals)}>Recovered</Button>\r\n        <Button onClick={()=>onClickHandler(\"Deceased\",data.actuals)}>Fatality </Button>\r\n      </ButtonGroup>\r\n      <CreateChart data={data.actuals} btnname={state} />\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default ActualForecast;","import React, { useRef, useLayoutEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport './App.css'\r\n// import Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '25.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        // background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        // color: 'white',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\nconst data2=  gql`   \r\n    query{\r\n      latest_cases_per_thousand{\r\n        Date,ACTIVE_CASES_PER_1000,NEW_CASES_PER_10000,DEATHS_PER_1000\r\n      }\r\n         }\r\n       `\r\nfunction Griditem(props){\r\n    \r\n    \r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}\r\n          justify=\"center\"\r\n          >\r\n           \r\n            <Grid item xs={6} sm={2} >\r\n            {/* <Paper className={classes.paper} ><CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> </Paper> */}\r\n            <CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={props.data[0].ACTIVE_CASES_PER_1000} /> \r\n            </Grid>\r\n            <Grid item xs={6} sm={2}>\r\n              {/* <Paper className={classes.paper} ><CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/></Paper> */}\r\n              <CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 10K\" value={props.data[0].NEW_CASES_PER_10000}/>\r\n            </Grid>\r\n            <Grid item xs={6} sm={2}>\r\n              {/* <Paper className={classes.paper} ><CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/></Paper> */}\r\n              <CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={props.data[0].DEATHS_PER_1000}/>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </div>\r\n      );\r\n}\r\n\r\nfunction CreateChart(props) {\r\n  const chart = useRef(null);\r\n  \r\n  useLayoutEffect(() => {\r\n   \r\n    var capacity = 1000;\r\n    var value = props.value;\r\n    var circleSize = 0.8;\r\n    console.log(props.value)\r\n    var component = am4core.create(props.chtname, am4core.Container)\r\n    component.width = am4core.percent(100);\r\n    component.height = am4core.percent(100);\r\n    component.logo.height =  -15000; \r\n    var chartContainer = component.createChild(am4core.Container);\r\n    chartContainer.x = am4core.percent(50)\r\n    chartContainer.y = am4core.percent(50)\r\n    \r\n    var circle = chartContainer.createChild(am4core.Circle);\r\n    circle.fill = am4core.color(\"#f8f9fa\");\r\n    \r\n    var circleMask = chartContainer.createChild(am4core.Circle);\r\n    \r\n    var waves = chartContainer.createChild(am4core.WavedRectangle);\r\n    waves.fill = am4core.color(props.color);\r\n    waves.mask = circleMask;\r\n    waves.horizontalCenter = \"middle\";\r\n    waves.waveHeight = 10;\r\n    waves.waveLength = 30;\r\n    waves.y = 500;\r\n    circleMask.y = -500;\r\n    \r\n    component.events.on(\"maxsizechanged\", function(){\r\n      var smallerSize = Math.min(component.pixelWidth, component.pixelHeight);  \r\n      var radius = smallerSize * circleSize / 2;\r\n    \r\n      circle.radius = radius;\r\n      circleMask.radius = radius;\r\n      waves.height = smallerSize;\r\n      waves.width = Math.max(component.pixelWidth, component.pixelHeight);  \r\n    \r\n      // capacityLabel.y = radius;\r\n    \r\n      var labelRadius = radius + 15\r\n    \r\n      capacityLabel.path = am4core.path.moveTo({x:-labelRadius, y:0}) + am4core.path.arcToPoint({x:labelRadius, y:0}, labelRadius, labelRadius);\r\n      capacityLabel.locationOnPath = 0.5;\r\n    \r\n      setValue(value);\r\n    })\r\n    \r\n    \r\n    function setValue(value){\r\n       var y = - circle.radius - waves.waveHeight + (1 - value / capacity) * circle.pixelRadius * 2;\r\n       waves.animate([{property:\"y\", to:y}, {property:\"waveHeight\", to:10, from:15}, {property:\"x\", from:-50, to:0}], 5000, am4core.ease.elasticOut);\r\n       circleMask.animate([{property:\"y\", to:-y},{property:\"x\", from:50, to:0}], 5000, am4core.ease.elasticOut);\r\n    }\r\n    \r\n    \r\n    var label = chartContainer.createChild(am4core.Label)\r\n    var formattedValue = component.numberFormatter.format(value, \"#.#a\");\r\n    formattedValue = formattedValue.toUpperCase();\r\n    \r\n    label.text = value ;\r\n    label.fill = am4core.color(\"#03a9f4\");\r\n    label.fontSize = 30;\r\n    label.horizontalCenter = \"middle\";\r\n    \r\n    \r\n    var capacityLabel = chartContainer.createChild(am4core.Label)\r\n    \r\n    var formattedCapacity = component.numberFormatter.format(capacity, \"#.#a\").toUpperCase();;\r\n    console.log(props.title)\r\n    capacityLabel.text = props.title;\r\n    capacityLabel.fill = am4core.color(\"#1769aa\");\r\n    capacityLabel.fontSize = 20;\r\n    capacityLabel.textAlign = \"middle\";\r\n    capacityLabel.padding(0,0,0,0);\r\n    \r\n    chart.current = component;\r\n    return () => {\r\n        component.dispose();\r\n    };\r\n  }, [props.data,props.chtname]);\r\n\r\n  return (\r\n   \r\n  <div id={props.chtname}    \r\n  //  style={{ width: \"100%\", height: \"250\" }}\r\n  >\r\n    </div>\r\n  );\r\n}\r\n\r\n const  KPIViews = () => {\r\n    const { loading, error, data } = useQuery(data2);\r\n  \r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error( error);\r\n      return  <div>Error</div>;\r\n    }\r\n    return <div><Griditem  data={data.latest_cases_per_thousand}/></div>\r\n  };\r\n\r\n \r\n\r\nexport default KPIViews;\r\nexport {Griditem}","// import { Bar } from \"react-chartjs-2\";\r\nimport React,{ useLayoutEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport {Container,Row, Col } from 'reactstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\nconst querygraph=  gql`   \r\n    query{\r\n        cases_per_thousand{\r\n            Date,ACTIVE_CASES_PER_1000,NEW_CASES_PER_10000,DEATHS_PER_1000\r\n             }\r\n         }\r\n       `\r\n       \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 0,\r\n    //   maxHeight:'20%'\r\n      \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '0%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        // background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        // color: 'white',\r\n        // height: 48,\r\n        // padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\n       function Griditem(props){\r\n    \r\n    \r\n        const classes = useStyles();\r\n        \r\n        return (\r\n            <div className={classes.root}>\r\n              <Grid container spacing={3} className={classes.root}\r\n              justify=\"center\"\r\n              >\r\n               \r\n                <Grid item xs={6} sm={2} id='1'>\r\n                {/* <Paper className={classes.paper} ><CreateChart chtname=\"test1\" color=\"#800080\" title=\"Active Cases per 1K\" value={1} /> </Paper> */}\r\n                <SmallBarsViews  chtname=\"small1\" color=\"#800080\"  data={props.data} axis='ACTIVE_CASES_PER_1000'/> \r\n                </Grid>\r\n                <Grid item xs={6} sm={2} id='2'>\r\n                  {/* <Paper className={classes.paper} ><CreateChart chtname=\"test2\" color=\"#34a4eb\" title=\"New Cases per 1K\" value={0.3}/></Paper> */}\r\n                  <SmallBarsViews chtname=\"small2\" color=\"#34a4eb\" data={props.data} axis='NEW_CASES_PER_10000'/>\r\n                </Grid>\r\n                <Grid item xs={6} sm={2} id='3'>\r\n                  {/* <Paper className={classes.paper} ><CreateChart chtname=\"test3\" color=\"#3333cc\" title=\"Deaths per 1K\" value={0.03}/></Paper> */}\r\n                  <SmallBarsViews chtname=\"small3\" color=\"#3333cc\"  data={props.data} axis='DEATHS_PER_1000'/>\r\n                {/* <SparkLineChart/> */}\r\n                </Grid>\r\n                \r\n              </Grid>\r\n            </div>\r\n          );\r\n    }\r\n    \r\nconst   SmallBarsViews =(props)=>{\r\n// const chart = useRef(null);\r\nconsole.log(`${props.data}`)\r\nuseLayoutEffect(() => {\r\n    am4core.useTheme(am4themes_animated);\r\n\r\n    var chart = am4core.create(props.chtname, am4charts.XYChart);\r\n    chart.logo.height =  -15000; \r\n    chart.data =props.data;\r\n    \r\n    chart.padding(0, 0, 0, 0);\r\n    \r\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.disabled = true;\r\n    dateAxis.renderer.labels.template.disabled = true;\r\n    dateAxis.startLocation = 0.5;\r\n    dateAxis.endLocation = 0.7;\r\n    dateAxis.cursorTooltipEnabled = false;\r\n    \r\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.min = 0;\r\n    valueAxis.renderer.grid.template.disabled = true;\r\n    valueAxis.renderer.baseGrid.disabled = true;\r\n    valueAxis.renderer.labels.template.disabled = true;\r\n    valueAxis.cursorTooltipEnabled = false;\r\n    \r\n    chart.cursor = new am4charts.XYCursor();\r\n    chart.cursor.lineY.disabled = true;\r\n    \r\n    var series = chart.series.push(new am4charts.ColumnSeries());\r\n    series.tooltipText = `{Date}: [bold]${props.axis==='ACTIVE_CASES_PER_1000' ? '{ACTIVE_CASES_PER_1000}':props.axis==='NEW_CASES_PER_10000' ? '{NEW_CASES_PER_10000}':props.axis==='DEATHS_PER_1000'?'{DEATHS_PER_1000}':''}`;\r\n    series.dataFields.dateX = \"Date\";\r\n    series.dataFields.valueY = props.axis;\r\n    series.tensionX = 0.8;\r\n    series.strokeWidth = 2;\r\n    series.stroke = am4core.color(props.color);\r\n    // series.colors = am4core.color(\"green\");\r\n    // render data points as bullets\r\n    var bullet = series.bullets.push(new am4charts.CircleBullet());\r\n    bullet.circle.opacity = 0;\r\n    bullet.circle.propertyFields.opacity = \"opacity\";\r\n    bullet.circle.radius = 3;\r\n    // bullet.circle.stroke = am4core.color(props.color);\r\n\r\n   return () => {\r\n    chart.dispose();\r\n};\r\n}, [props.data,props.chtname]);\r\n\r\nreturn(\r\n    <div id={props.chtname}></div>\r\n)\r\n}\r\n\r\n\r\n\r\nexport const  SmallBars =()=>{\r\n    const { loading, error, data } = useQuery(querygraph);\r\n//   console.log(`SmallBars ${JSON.stringify(data.actuals)}`)\r\n    if (loading) {\r\n      return <div className='loader_graph'>Loading...</div>;\r\n    }\r\n    if (error) {\r\n      console.error( error);\r\n      return  <div>Error</div>;\r\n    }return( \r\n    \r\n    <Griditem data={data.cases_per_thousand}/>\r\n\r\n )\r\n}\r\n\r\nexport default SmallBars;","import React, { useRef, useLayoutEffect,useState, useEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport Loading from './Loading'\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\n\r\n\r\n\r\nconst mobility=  gql`   \r\nquery{\r\n  mobility{\r\n         Date,Retail_Recreation,Grocery_Pharmacy,Parks,Transit_Stations,Workplaces,Residential\r\n       \r\n   }\r\n   mobility_summary{\r\n    Category,Value\r\n     }\r\n    }\r\n       `\r\n// const mobilitysummary=  gql`   \r\n//     query{\r\n//         mobility_summary{\r\n//             Category,Value\r\n//              }\r\n//          }\r\n//        `\r\n\r\nfunction CreateChart(props) {\r\n  const chartcurr = useRef(null);\r\n  const classes = useStyles();\r\n//   let itemtitle=''\r\n//   console.log(`In CreateChart: ${props.btnname}`)\r\n//   if (props.btnname==='Summary') {\r\n//    itemtitle =\"Latest Day Mobility Report\"\r\n//   } else {\r\n//    itemtitle=\"Mobility Report Trends\"\r\n//   }\r\n  useLayoutEffect(() => {\r\n    var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n\r\n    chart.width = am4core.percent(100);\r\n    chart.height = am4core.percent(100);\r\n    chart.logo.height =  -15000; \r\n    console.log(`titlename:${props.titlename}`)\r\n   \r\n// Add data\r\nchart.data = props.data;\r\nconsole.log(`chart.data[0]: ${JSON.stringify(chart.data[0].Date)}`)\r\n// Create axes\r\nvar dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\ndateAxis.renderer.grid.template.location = 0;\r\ndateAxis.renderer.minGridDistance = 60;\r\n// dateAxis.renderer.opposite = true;\r\n\r\nvar valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n// Create series\r\nvar series = chart.series.push(new am4charts.LineSeries());\r\nseries.dataFields.valueY = props.titlename;\r\nseries.dataFields.dateX = \"Date\";\r\nseries.strokeWidth = 1;\r\nseries.minBulletDistance = 10;\r\n// series.tooltipText = \"{valueY.value}\";\r\nseries.tooltipText =\"aa\"\r\nseries.fillOpacity = 0.1;\r\nseries.tooltip.pointerOrientation = \"vertical\";\r\nseries.tooltip.background.cornerRadius = 20;\r\nseries.tooltip.background.fillOpacity = 0.5;\r\nseries.tooltip.label.padding(12, 12, 12, 12)\r\n\r\nvar seriesRange = dateAxis.createSeriesRange(series);\r\nseriesRange.contents.strokeDasharray = \"2,3\";\r\nseriesRange.contents.stroke = chart.colors.getIndex(8);\r\nseriesRange.contents.strokeWidth = 1;\r\n\r\nvar pattern = new am4core.LinePattern();\r\npattern.rotation = -45;\r\npattern.stroke = seriesRange.contents.stroke;\r\npattern.width = 100;\r\npattern.height = 100;\r\npattern.gap = 6;\r\nseriesRange.contents.fill = pattern;\r\nseriesRange.contents.fillOpacity = 0.5;\r\n\r\n// Add scrollbar\r\nchart.scrollbarX = new am4core.Scrollbar();\r\n\r\n// add range\r\nvar range = dateAxis.axisRanges.push(new am4charts.DateAxisDataItem());\r\nrange.grid.stroke = chart.colors.getIndex(0);\r\nrange.grid.strokeOpacity = 1;\r\n// range.bullet = new am4core.ResizeButton();\r\n// range.bullet.background.fill = chart.colors.getIndex(0);\r\n// range.bullet.background.states.copyFrom(chart.zoomOutButton.background.states);\r\n// range.bullet.minX = 0;\r\n// range.bullet.adapter.add(\"minY\", function(minY, target) {\r\n//   target.maxY = chart.plotContainer.maxHeight;\r\n//   target.maxX = chart.plotContainer.maxWidth;\r\n//   return chart.plotContainer.maxHeight;\r\n// })\r\n\r\n// range.bullet.events.on(\"dragged\", function() {\r\n//   range.value = dateAxis.xToValue(range.bullet.pixelX);\r\n//   seriesRange.value = range.value;\r\n// })\r\n\r\n\r\n// var firstTime = new Date(chart.data[0].Date).getTime();\r\n// var lastTime = new Date(chart.data[chart.data.length - 1].Date).getTime();\r\n// var date = new Date(firstTime + (lastTime - firstTime) / 2);\r\n\r\n// range.date = date;\r\n\r\n// seriesRange.date = date;\r\n// seriesRange.endDate = new Date(chart.data[chart.data.length - 1].Date);\r\ndateAxis.zoomToDates(\r\n    new Date(2020, 9, 0),\r\n    new Date(2020, 9, 5));\r\n    chartcurr.current = chart;\r\n\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  },[props.titlename,props.data]);\r\n\r\n  return (\r\n\r\n  <div>\r\n <Card className={classes.root}>\r\n\r\n <CardHeader className={classes.header}\r\n        title={props.titlename.replace(\"_\",\" \")}\r\n        \r\n        // subheader=\"For the Year 2020\"\r\n      />\r\n \r\n <Divider />\r\n    <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"200px\" }}/> \r\n    </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CreateChartsummary(props) {\r\n    const chartcurr = useRef(null);\r\n    const classes = useStyles();\r\n    // let itemtitle=''\r\n    // console.log(`In CreateChart: ${props.btnname}`)\r\n    // if (props.btnname==='Summary') {\r\n    //  itemtitle =\"Latest Day Mobility Report\"\r\n    // } else {\r\n    //  itemtitle=\"Mobility Report Trends\"\r\n    // }\r\n    useLayoutEffect(() => {\r\n      var chart = am4core.create(props.titlename, am4charts.XYChart);\r\n      chart.logo.height =  -15000; \r\n      chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\r\n\r\n      chart.data = props.data;\r\n      \r\n      \r\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"Category\";\r\n      categoryAxis.renderer.minGridDistance = 40;\r\n      \r\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      \r\n      var series = chart.series.push(new am4charts.CurvedColumnSeries());\r\n      series.dataFields.categoryX = \"Category\";\r\n      series.dataFields.valueY = \"Value\";\r\n      series.tooltipText = \"{valueY.Value}\"\r\n      series.columns.template.strokeOpacity = 0;\r\n      \r\n      series.columns.template.fillOpacity = 0.75;\r\n      \r\n      var hoverState = series.columns.template.states.create(\"hover\");\r\n      hoverState.properties.fillOpacity = 1;\r\n      hoverState.properties.tension = 0.4;\r\n      \r\n      chart.cursor = new am4charts.XYCursor();\r\n      \r\n      // Add distinctive colors for each column using adapter\r\n      series.columns.template.adapter.add(\"fill\", function(fill, target) {\r\n        return chart.colors.getIndex(target.dataItem.index);\r\n      });\r\n      \r\n    //   chart.scrollbarX = new am4core.Scrollbar();\r\n    //   // chartcurr.current = chart;\r\n  \r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  }, [props.data,props.titlename]);\r\n\r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n          title={props.titlename.replace(\"_\",\" \")}\r\n          \r\n          // subheader=\"For the Year 2020\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id={props.titlename} style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n const  MS = (props) => {\r\n    const classes = useStyles();\r\n    const [state,setState]= useState(props.placeRender);\r\n    const { loading, error, data } = useQuery(mobility);\r\n    // const { loading, error, data } = useQuery(mobilitysummary);\r\n    console.log(`mobilitysummmary: ${error}`)\r\n   \r\n   \r\n    if (loading) {\r\n      return <div>< Loading/></div>;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n      return  <div>Error</div>;\r\n    }\r\n\r\n    console.log(`mobility data${JSON.stringify(data.mobility_summary)}`)\r\n    const onClickHandler = (btnname) =>{\r\n      setState(btnname)\r\n      console.log(`btn clicked ${btnname} ${JSON.stringify(data.mobility_summary)}`)\r\n    //  return <Test data={data} btnname={state} />\r\n    }\r\n    return (\r\n    \r\n   \r\n    <>\r\n    <div>\r\n     {/* <br/><br/><br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n        <Button onClick={()=>onClickHandler(\"Summary\")}>Summery</Button>\r\n        <Button onClick={()=>onClickHandler(\"Details\")}>Details</Button>\r\n      </ButtonGroup> */}\r\n      <div>\r\n    {/* <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics\"} */}\r\n        {/* />\r\n    <Divider />\r\n    </Card> */}\r\n\r\n    </div>\r\n      <br/>\r\n      <div className={classes.root}>\r\n          <Grid container spacing={2}\r\n          justify=\"center\"\r\n          >\r\n            \r\n            { state==='Summary' ? (\r\n              \r\n              <Grid item xs={12} sm={12} >\r\n             <CreateChartsummary data={data.mobility_summary} btnname={state} titlename={\"Mobility Summary\"}/>\r\n             </Grid>):\r\n          (Object.keys(data.mobility[0]).slice(1,-1).map((prop, key)=>{ return (<Grid item xs={3} sm={4} key={key}>\r\n         <CreateChart data={data.mobility} btnname={state} titlename={prop}/>\r\n         </Grid>)}))}\r\n          </Grid>\r\n        \r\n        </div>\r\n\r\n      {/* <CreateChart data={data.mobility} btnname={state} /> */}\r\n      </div>\r\n      </>\r\n      \r\n      )\r\n  };\r\n\r\n \r\n   \r\n\r\nexport default MS;","import 'bootstrap/dist/css/bootstrap.css';\r\nimport {Container,Row, Col } from 'reactstrap'\r\nimport React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createMuiTheme, withStyles, ThemeProvider,makeStyles } from '@material-ui/core/styles';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n// import KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\n// import Icon from '@material-ui/core/Icon';\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\r\nimport gql from \"graphql-tag\";\r\n\r\n\r\nconst query_stats=  gql`   \r\n    query{\r\n      overall_stats{\r\n            Confirmed,Recovered,Deceased\r\n             }\r\n         }\r\n       `\r\n\r\n\r\n// const BootstrapButton = withStyles({\r\n//     root: {\r\n//       boxShadow: 'none',\r\n//       textTransform: 'none',\r\n//       fontSize: 16,\r\n//       padding: '6px 12px',\r\n//       border: '1px solid',\r\n//       lineHeight: 1.5,\r\n//       backgroundColor: '#0063cc',\r\n//       borderColor: '#0063cc',\r\n//       fontFamily: [\r\n//         '-apple-system',\r\n//         'BlinkMacSystemFont',\r\n//         '\"Segoe UI\"',\r\n//         'Roboto',\r\n//         '\"Helvetica Neue\"',\r\n//         'Arial',\r\n//         'sans-serif',\r\n//         '\"Apple Color Emoji\"',\r\n//         '\"Segoe UI Emoji\"',\r\n//         '\"Segoe UI Symbol\"',\r\n//       ].join(','),\r\n//       '&:hover': {\r\n//         backgroundColor: '#0069d9',\r\n//         borderColor: '#0062cc',\r\n//         boxShadow: 'none',\r\n//       },\r\n//       '&:active': {\r\n//         boxShadow: 'none',\r\n//         backgroundColor: '#0062cc',\r\n//         borderColor: '#005cbf',\r\n//       },\r\n//       '&:focus': {\r\n//         boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n//       },\r\n//     },\r\n//   })(Button);\r\n  \r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText('#17a1b9'),\r\n      backgroundColor: '#17a1b9',\r\n      '&:hover': {\r\n        backgroundColor: '#17a1b9',\r\n      },\r\n    },\r\n  }))(Button);\r\n  \r\n  const ColorButton1 = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(\"#ffc107\"),\r\n      backgroundColor: '#ffc107',\r\n      '&:hover': {\r\n        backgroundColor: \"#ffc107\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const ColorButton2 = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(\"#28a745\"),\r\n      backgroundColor: '#28a745',\r\n      '&:hover': {\r\n        backgroundColor: \"#28a745\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      height:'100px',\r\n      width:'300px',\r\n      textAlign:'center',\r\n    //   boxShadow:'0 0 1px rgba(0,0,0,.125), 0 1px 3px rgba(0,0,0,.2)'\r\n    },\r\n    text: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        fontSize: '2.2rem',\r\n        fontWeight:'700',\r\n        margin:'0 0 10px 0',\r\n        whiteSpace:'nowrap',\r\n      },\r\n      textsmall: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        fontSize: '12px',\r\n        // fontWeight:'700'\r\n      },\r\n      icon:{\r\n        width: 60,\r\n        height: 60,\r\n        paddingright:0,\r\n        margin:'0 0 0 0',\r\n      },\r\n\r\n  }));\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: green,\r\n    },\r\n  });\r\n\r\n// import './small-box.scss'\r\n\r\nconst  OverallStats_View = (props) => {\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <div><br/><br/>\r\n        <Container fluid={false}>\r\n         <Row>\r\n            <Col col-lg-4 col-6>\r\n            <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin} startIcon={<ConfirmationNumberIcon className={classes.icon} />}>\r\n                <Container>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.text}>\r\n                       {parseInt(props.data.Confirmed).toLocaleString()}\r\n                    </Typography>\r\n                    </Col></Row>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.textsmall}>\r\n                        Total Confirmed Cases\r\n                    </Typography>\r\n                    </Col></Row>\r\n                </Container>\r\n         </ColorButton>\r\n            </Col>\r\n            <Col col-lg-4 col-6>\r\n                <ColorButton1 variant=\"contained\" color=\"primary\" className={classes.margin} startIcon={<EmojiPeopleIcon className={classes.icon} />}>\r\n                <Container>\r\n                    <Row><Col>\r\n                    \r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.text}>\r\n                        {parseInt(props.data.Recovered).toLocaleString()}\r\n                    </Typography>\r\n                    </Col></Row>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.textsmall}>\r\n                        Total Recovered Cases\r\n                    </Typography>\r\n                    </Col></Row>\r\n                </Container>\r\n                </ColorButton1>\r\n\r\n            </Col>\r\n            <Col col-lg-4 col-6>\r\n                <ColorButton2 variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} startIcon={<AirlineSeatFlatIcon className={classes.icon} />}>\r\n                <Container>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom className={classes.text}>\r\n                        {parseInt(props.data.Deceased).toLocaleString()}\r\n                    </Typography>\r\n                    </Col></Row>\r\n                    <Row><Col>\r\n                    <Typography variant=\"h6\" component=\"h6\" gutterBottom className={classes.textsmall}>\r\n                        Total Fatality Cases\r\n                    </Typography>\r\n                    </Col></Row>\r\n                </Container>\r\n                </ColorButton2>\r\n\r\n            </Col>\r\n           \r\n                </Row>\r\n         </Container>\r\n         </div>\r\n    )\r\n    }\r\n\r\n\r\n    const  OverallStats = (props) => {\r\n      const { loading, error, data } = useQuery(query_stats);\r\n    \r\n      if (loading) {\r\n        return <div className='loader_graph'>Loading...</div>;\r\n      }\r\n      if (error) {\r\n        console.error( error);\r\n        return  <div>Error</div>;\r\n      }\r\n      return <div><OverallStats_View  data={data.overall_stats[0]}/></div>\r\n      \r\n    };\r\n\r\n\r\n    export default OverallStats;","import React from 'react';\r\nimport ActualForecast from './ActualForecast'\r\nimport KPIViews from './KPIViews'\r\nimport SmallBars from './SmallBars'\r\n// import MobilitySummary from './MobilitySummary'\r\nimport Ms from './Ms'\r\nimport OverallStats from './OverallStats'\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div >\r\n      \r\n      <KPIViews />\r\n      <SmallBars />\r\n      <OverallStats />\r\n      \r\n      <ActualForecast />\r\n     \r\n      <Ms placeRender=\"Summary\"/>\r\n      {/* <MobilitySummary /> */}\r\n    </div>\r\n  );\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Ms from './Ms'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\n\r\nexport default function Page1() {\r\nconst classes = useStyles();\r\n    return (\r\n<div>\r\n    <br/><br/>\r\n    <Card className={classes.root}>\r\n\r\n    <CardHeader className={classes.headermain}\r\n            title={\"Mobility Analytics - Telangana\"}\r\n     />\r\n    <Divider />\r\n    </Card>\r\n    <Ms placeRender=\"Details\"/>\r\n</div>\r\n    );\r\n}\r\n","import Typography from '@material-ui/core/Typography';\r\nimport React, { useRef, useLayoutEffect,useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\"; \r\n\r\n\r\nconst policyindex=  gql`   \r\nquery{\r\n    policy_index{\r\n    date,india,telangana\r\n     }\r\n}`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n  }));\r\nexport default function Page2() {\r\n    const classes = useStyles();\r\n    const { loading, error, data } = useQuery(policyindex);\r\n    // const [state,setState]= useState('Confirmed');\r\n   \r\n       if (loading) {\r\n         return <div className='loader_graph'>Loading...</div>;\r\n       }\r\n       if (error) {\r\n         console.error(error);\r\n         return  <div>Error</div>;\r\n       }\r\n   \r\n    return (\r\n<div>\r\n    <br/><br/>\r\n\r\n<CreateChart data={data.policy_index} />\r\n{/* <PolicyIndex data ={data.policy_index}/> */}\r\n</div>\r\n    );\r\n}\r\n\r\nam4core.useTheme(am4themes_animated);\r\nfunction CreateChart(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In CreateChart: ${props.btnname}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n        var chart = am4core.create(\"chartdiv\", am4plugins_forceDirected.ForceDirectedTree);\r\n        chart.logo.height =  -15000; \r\n        var networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n        \r\n        networkSeries.data = [{\r\n          name: 'Positive',\r\n          children: [{\r\n            name: 'Pos', value: 10\r\n          }, {\r\n            name: 'Positive', value: 6\r\n          }\r\n            ]\r\n        }, {\r\n          name: 'Negative',\r\n            children: [{\r\n              name: 'Neg', value: 10\r\n            }, {\r\n              name: 'Negative', value: 6\r\n            }]}]\r\n        \r\n        networkSeries.dataFields.linkWith = \"linkWith\";\r\n        networkSeries.dataFields.name = \"name\";\r\n        networkSeries.dataFields.id = \"name\";\r\n        networkSeries.dataFields.value = \"value\";\r\n        networkSeries.dataFields.children = \"children\";\r\n        networkSeries.links.template.distance = 1;\r\n        networkSeries.nodes.template.tooltipText = \"{name}\";\r\n        networkSeries.nodes.template.fillOpacity = 1;\r\n        networkSeries.nodes.template.outerCircle.scale = 1;\r\n        \r\n        networkSeries.nodes.template.label.text = \"{name}\"\r\n        networkSeries.fontSize = 8;\r\n        networkSeries.nodes.template.label.hideOversized = true;\r\n        networkSeries.nodes.template.label.truncate = true;\r\n        networkSeries.minRadius = am4core.percent(2);\r\n        networkSeries.manyBodyStrength = -5;\r\n        networkSeries.links.template.strokeOpacity = 0;\r\n  \r\n      chart.current = chart;\r\n  \r\n      return () => {\r\n        chart.dispose();\r\n      };\r\n    },[props.btnname,props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Twitter Sentiment\"\r\n          subheader=\"Hashtag #covid-19\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PolicyIndex(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In malefemale: ${JSON.stringify(props.data)}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n       \r\nvar mainContainer = am4core.create(\"PolicyIndex\", am4core.Container);\r\nmainContainer.width = am4core.percent(100);\r\nmainContainer.height = am4core.percent(100);\r\nmainContainer.layout = \"horizontal\";\r\nmainContainer.logo.height =  -15000; \r\nvar usData = props.data;\r\n\r\nvar maleChart = mainContainer.createChild(am4charts.XYChart);\r\nmaleChart.paddingRight = 0;\r\n// maleChart.data = JSON.parse(JSON.stringify(usData));\r\nmaleChart.data=usData\r\nconsole.log(`JSON.parse(JSON.stringify(usData)) : ${JSON.parse(JSON.stringify(usData))}`)\r\n// Create axes\r\nvar maleCategoryAxis = maleChart.yAxes.push(new am4charts.CategoryAxis());\r\n// let maleCategoryAxis = maleChart.yAxes.push(new am4charts.DateAxis());\r\n\r\nmaleCategoryAxis.dataFields.category = \"date\";\r\nmaleCategoryAxis.renderer.grid.template.location = 0;\r\nmaleCategoryAxis.renderer.inversed = false;\r\nmaleCategoryAxis.renderer.minGridDistance = 15;\r\n\r\nvar maleValueAxis = maleChart.xAxes.push(new am4charts.ValueAxis());\r\nmaleValueAxis.renderer.inversed = true;\r\nmaleValueAxis.min = 0;\r\nmaleValueAxis.max = 1;\r\nmaleValueAxis.strictMinMax = true;\r\n\r\nmaleCategoryAxis.dateFormatter = new am4core.DateFormatter();\r\nmaleCategoryAxis.dateFormatter.dateFormat  = \"d MMM, yyyy\";\r\n// maleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// maleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\n\r\n// Create series\r\nvar maleSeries = maleChart.series.push(new am4charts.ColumnSeries());\r\nmaleSeries.dataFields.valueX = \"india\";\r\n// maleSeries.dataFields.valueXShow = \"percent\";\r\n// maleSeries.calculatePercent = true;\r\nmaleSeries.dataFields.categoryY = \"date\";\r\n// maleSeries.interpolationDuration = 1000;\r\nmaleSeries.columns.template.tooltipText = \"India: {valueX}\";\r\n//maleSeries.sequencedInterpolation = true;\r\n\r\n\r\nvar femaleChart = mainContainer.createChild(am4charts.XYChart);\r\nfemaleChart.paddingLeft = 0;\r\n// femaleChart.data = JSON.parse(JSON.stringify(usData));\r\nfemaleChart.data= usData\r\n// Create axes\r\nvar femaleCategoryAxis = femaleChart.yAxes.push(new am4charts.CategoryAxis());\r\nfemaleCategoryAxis.renderer.opposite = true;\r\nfemaleCategoryAxis.dataFields.category = \"date\";\r\nfemaleCategoryAxis.renderer.grid.template.location = 0;\r\nfemaleCategoryAxis.renderer.minGridDistance = 15;\r\nfemaleCategoryAxis.renderer.inversed=false;\r\nvar femaleValueAxis = femaleChart.xAxes.push(new am4charts.ValueAxis());\r\nfemaleValueAxis.min = 0;\r\nfemaleValueAxis.max = 1;\r\nfemaleValueAxis.strictMinMax = true;\r\n// femaleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// femaleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\nfemaleValueAxis.renderer.minLabelPosition = 0.01;\r\n\r\n// Create series\r\nvar femaleSeries = femaleChart.series.push(new am4charts.ColumnSeries());\r\nfemaleSeries.dataFields.valueX = \"telangana\";\r\n// femaleSeries.dataFields.valueXShow = \"percent\";\r\n// femaleSeries.calculatePercent = true;\r\nfemaleSeries.fill = femaleChart.colors.getIndex(4);\r\nfemaleSeries.stroke = femaleSeries.fill;\r\n//femaleSeries.sequencedInterpolation = true;\r\nfemaleSeries.columns.template.tooltipText = \"Telangana: {valueX}\";\r\nfemaleSeries.dataFields.categoryY = \"date\";\r\n// femaleSeries.interpolationDuration = 1000;\r\n\r\n  \r\n      return () => {\r\n        mainContainer.dispose();\r\n      };\r\n    },[props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Policy Index\"\r\n          subheader=\"Lesser the value better\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"PolicyIndex\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  ","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PolicyIcon from '@material-ui/icons/Policy';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { Switch } from '@material-ui/core';\r\nconst sideOptions = [{\r\n    title: \"Summary\",\r\n    path: \"home\"\r\n},\r\n{\r\n    title: \"Mobility\",\r\n    path: \"Mobility\"\r\n},\r\n{\r\n    title: \"Policies\",\r\n    path: \"Policies\"\r\n},\r\n{\r\n    title: \"Sentiment\",\r\n    path: \"Sentiment\"\r\n},\r\n\r\n\r\n]\r\nexport const mainListItems = (\r\n    \r\n    <div>\r\n        {sideOptions.map((option, index) => (\r\n            <ListItem button key={option.title} component=\"a\" href={option.path === \"home\" ? \"\\\\\" : option.path}>\r\n                <ListItemIcon>\r\n              { option.title==='Summary'? <Assessment />\r\n                : option.title==='Mobility' ? <Commute /> \r\n                : option.title==='Sentiment' ? <SentimentVerySatisfiedIcon />\r\n                :option.title==='Policies' ? <PolicyIcon />\r\n                :''\r\n\r\n              }\r\n              \r\n              \r\n                </ListItemIcon>\r\n                <ListItemText primary={option.title} />\r\n            </ListItem>\r\n        ))}\r\n        {/* <ListItem button key={text.topic} component=\"a\" href={text.path === \"home\" ? \"\\\\\" : text.path}>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sentiment\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Mobility\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"About\" />\r\n        </ListItem>\r\n        {/* <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem> */}\r\n    </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Saved reports</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem>\r\n    </div>\r\n);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './menuOptions';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    // width: '100%',\r\n    // height: 'calc(100% - 200px)',\r\n    // [theme.breakpoints.up(\"md\")]: {\r\n    //   overflow: \"auto\",\r\n    //   width: drawerWidth,\r\n    //   position: \"relative\",\r\n    //   height: \"100%\"\r\n    // },\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{display:'flex'}}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            COVID Back to Offie Analytics\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        {/* <Divider />\r\n        <List>{secondaryListItems}</List> */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Novartis\r\n        </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <Box pt={4}>\r\n            <Copyright />\r\n        </Box>)\r\n}","import Typography from '@material-ui/core/Typography';\r\nimport React, { useRef, useLayoutEffect,useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import SimplePaper from './SimplePaper'\r\nimport './App.css';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4plugins_timeline from \"@amcharts/amcharts4/plugins/timeline\";\r\nimport * as am4plugins_bullets from \"@amcharts/amcharts4/plugins/bullets\";\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\"; \r\n\r\n\r\nconst policyindex=  gql`   \r\nquery{\r\n    policy_index{\r\n    date,india,telangana\r\n     }\r\n     ,\r\n     country_policies_india{\r\n            start,end,task           \r\n    },\r\n     country_policies_telangana{\r\n            start,end,task           \r\n    },\r\n}`\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },header:{\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      },\r\n      headermain:{\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)',\r\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .30)',\r\n        color: 'white',\r\n      },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        margin: 'auto',\r\n        \r\n      },\r\n      clock:{\r\n        maxWidth: '100%',\r\n        flexGrow: 1,\r\n        textAlign: 'left',\r\n      }\r\n  }));\r\nexport default function CountryPolicies() {\r\n    const classes = useStyles();\r\n    const { loading, error, data } = useQuery(policyindex);\r\n    const [state,setState]= useState('Telangana');\r\n    // const [state,setState]= useState('Confirmed');\r\n   \r\n       if (loading) {\r\n         return <div className='loader_graph'>Loading...</div>;\r\n       }\r\n       if (error) {\r\n         console.error(error);\r\n         return  <div>Error</div>;\r\n       }\r\n       const onClickHandler = (btnname) =>{\r\n        setState(btnname)\r\n        // console.log(`btn clicked ${btnname} ${JSON.stringify(data)}`)\r\n      //  return <Test data={data} btnname={state} />\r\n      }\r\n    return (\r\n<div>\r\n   \r\n    <div style={{textAlign:'left'}}>\r\n     <br/><br/>\r\n    <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\" style={{marginBottom:'5px'}}>\r\n        <Button onClick={()=>onClickHandler(\"Telangana\")}>Telangana</Button>\r\n        <Button onClick={()=>onClickHandler(\"India\")}>India</Button>\r\n      </ButtonGroup>\r\n      </div>\r\n<CreateChart data={state==='India'? data.country_policies_india : data.country_policies_telangana} title={state} />\r\n<br/>\r\n<PolicyIndex data ={data.policy_index}/>\r\n</div>\r\n    );\r\n}\r\n\r\nam4core.useTheme(am4themes_animated);\r\nfunction CreateChart(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n   console.log(JSON.stringify(props.data));\r\n    useLayoutEffect(() => {\r\n        var container = am4core.create(\"countrypolicies\", am4core.Container);\r\n        container.width = am4core.percent(100);\r\n        container.height = am4core.percent(100);\r\n        \r\n        var interfaceColors = new am4core.InterfaceColorSet();\r\n        var colorSet = new am4core.ColorSet();\r\n        \r\n        var chart = container.createChild(am4plugins_timeline.CurveChart);\r\n        container.logo.height =  -15000; \r\n\r\n        chart.data =props.data.reverse()\r\n\r\n        let min_act=props.data.reduce(\r\n            (olddt,newdt)=> \r\n            (new Date(olddt.start) ) < (new Date(newdt.start) )\r\n            ? olddt:newdt)\r\n          \r\n          \r\n            let max_act=props.data.reduce(\r\n              (olddt,newdt)=> \r\n              (new Date(olddt.end) ) > (new Date(newdt.end))\r\n              ? olddt:newdt)\r\n        console.log(`min_act:${min_act.start}`);\r\n        console.log(`max_act:${max_act.end}`);\r\n        \r\n        chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n        chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd\";\r\n        chart.dy = 75;\r\n        chart.maskBullets = false;\r\n        \r\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"task\";\r\n        categoryAxis.renderer.labels.template.paddingRight = 25;\r\n        categoryAxis.renderer.minGridDistance = 10;\r\n        categoryAxis.renderer.innerRadius = 0;\r\n        categoryAxis.renderer.radius = 100;\r\n        categoryAxis.renderer.grid.template.location = 1;\r\n        \r\n        var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.minGridDistance = 70;\r\n        dateAxis.min = new Date(min_act).getTime();\r\n        dateAxis.max = new Date(max_act).getTime();\r\n        \r\n        dateAxis.baseInterval = { count: 1, timeUnit: \"month\" };\r\n        dateAxis.startLocation = -0.5;\r\n        \r\n        dateAxis.renderer.points = [{ x: -400, y: 0 }, { x: -250, y: 0 }, { x: 0, y: 60 }, { x: 250, y: 0 }, { x: 400, y: 0 }];\r\n        dateAxis.renderer.autoScale = false;\r\n        dateAxis.renderer.polyspline.tensionX = 0.8;\r\n        dateAxis.renderer.tooltipLocation = 0;\r\n        dateAxis.renderer.grid.template.disabled = true;\r\n        dateAxis.renderer.line.strokeDasharray = \"1,4\";\r\n        dateAxis.renderer.line.strokeOpacity = 0.7;\r\n        dateAxis.tooltip.background.fillOpacity = 0.2;\r\n        dateAxis.tooltip.background.cornerRadius = 5;\r\n        dateAxis.tooltip.label.fill = new am4core.InterfaceColorSet().getFor(\"alternativeBackground\");\r\n        dateAxis.tooltip.label.paddingTop = 7;\r\n        \r\n        var labelTemplate = dateAxis.renderer.labels.template;\r\n        labelTemplate.verticalCenter = \"middle\";\r\n        labelTemplate.fillOpacity = 0.7;\r\n        labelTemplate.background.fill = interfaceColors.getFor(\"background\");\r\n        labelTemplate.background.fillOpacity = 1;\r\n        labelTemplate.padding(7,7,7,7);\r\n        \r\n        var series = chart.series.push(new am4plugins_timeline.CurveColumnSeries());\r\n        series.columns.template.height = am4core.percent(15);\r\n        series.columns.template.tooltipText = \"{categoryX}: [bold]{openDateX}[/] - [bold]{dateX}[/]\";\r\n        \r\n        series.dataFields.openDateX = \"start\";\r\n        series.dataFields.dateX = \"end\";\r\n        series.dataFields.categoryY = \"task\";\r\n        series.columns.template.propertyFields.fill = \"color\"; // get color from data\r\n        series.columns.template.propertyFields.stroke = \"color\";\r\n        series.columns.template.strokeOpacity = 0;\r\n        \r\n        series.columns.template.adapter.add(\"fill\", function (fill, target) {\r\n           return chart.colors.getIndex(target.dataItem.index * 3);\r\n        })\r\n        \r\n        var flagBullet1 = new am4plugins_bullets.FlagBullet();\r\n        series.bullets.push(flagBullet1);\r\n        flagBullet1.disabled = true;\r\n        flagBullet1.propertyFields.disabled = \"bulletf1\";\r\n        flagBullet1.locationX = 1;\r\n        flagBullet1.label.text = \"start\";\r\n        \r\n        var flagBullet2 = new am4plugins_bullets.FlagBullet();\r\n        series.bullets.push(flagBullet2);\r\n        flagBullet2.disabled = true;\r\n        flagBullet2.propertyFields.disabled = \"bulletf2\";\r\n        flagBullet2.locationX = 0;\r\n        flagBullet2.background.fill = interfaceColors.getFor(\"background\");\r\n        flagBullet2.label.text = \"end\";\r\n        \r\n        var bullet = new am4charts.CircleBullet();\r\n        series.bullets.push(bullet);\r\n        bullet.circle.radius = 3;\r\n        bullet.circle.strokeOpacity = 0;\r\n        bullet.locationX = 0;\r\n        \r\n        bullet.adapter.add(\"fill\", function (fill, target) {\r\n           return chart.colors.getIndex(target.dataItem.index * 3);\r\n        })\r\n        \r\n        var bullet2 = new am4charts.CircleBullet();\r\n        series.bullets.push(bullet2);\r\n        bullet2.circle.radius = 3;\r\n        bullet2.circle.strokeOpacity = 0;\r\n        bullet2.propertyFields.fill = \"color\";\r\n        bullet2.locationX = 1;\r\n        \r\n        bullet2.adapter.add(\"fill\", function (fill, target) {\r\n           return chart.colors.getIndex(target.dataItem.index * 3);\r\n        })\r\n        \r\n        chart.scrollbarX = new am4core.Scrollbar();\r\n        chart.scrollbarX.align = \"center\"\r\n        chart.scrollbarX.width = 800;\r\n        chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n        chart.scrollbarX.dy = - 90;\r\n        chart.scrollbarX.opacity = 0.4;\r\n        \r\n        var cursor = new am4plugins_timeline.CurveCursor();\r\n        chart.cursor = cursor;\r\n        cursor.xAxis = dateAxis;\r\n        cursor.yAxis = categoryAxis;\r\n        cursor.lineY.disabled = true;\r\n        cursor.lineX.strokeDasharray = \"1,4\";\r\n        cursor.lineX.strokeOpacity = 1;\r\n        \r\n        dateAxis.renderer.tooltipLocation2 = 0;\r\n        categoryAxis.cursorTooltipEnabled = false;\r\n        \r\n        \r\n        /// clock\r\n        var clock = container.createChild(am4charts.GaugeChart);\r\n        clock.toBack();\r\n        \r\n        clock.radius = 120;\r\n        clock.dy = -100;\r\n        clock.startAngle = -90;\r\n        clock.endAngle = 270;\r\n        \r\n        var axis = clock.xAxes.push(new am4charts.ValueAxis());\r\n        axis.min = 0;\r\n        axis.max = 12;\r\n        axis.strictMinMax = true;\r\n        \r\n        axis.renderer.line.strokeWidth = 1;\r\n        axis.renderer.line.strokeOpacity = 0.5;\r\n        axis.renderer.line.strokeDasharray = \"1,4\";\r\n        axis.renderer.minLabelPosition = 0.05; // hides 0 label\r\n        axis.renderer.inside = true;\r\n        axis.renderer.labels.template.radius = 30;\r\n        axis.renderer.grid.template.disabled = true;\r\n        axis.renderer.ticks.template.length = 12;\r\n        axis.renderer.ticks.template.strokeOpacity = 1;\r\n        \r\n        // serves as a clock face fill\r\n        var range = axis.axisRanges.create();\r\n        range.value = 0;\r\n        range.endValue = 12;\r\n        range.grid.visible = false;\r\n        range.tick.visible = false;\r\n        range.label.visible = false;\r\n        \r\n        var axisFill = range.axisFill;\r\n        \r\n        // hands\r\n        var hourHand = clock.hands.push(new am4charts.ClockHand());\r\n        hourHand.radius = am4core.percent(60);\r\n        hourHand.startWidth = 5;\r\n        hourHand.endWidth = 5;\r\n        hourHand.rotationDirection = \"clockWise\";\r\n        hourHand.pin.radius = 8;\r\n        hourHand.zIndex = 1;\r\n        \r\n        var minutesHand = clock.hands.push(new am4charts.ClockHand());\r\n        minutesHand.rotationDirection = \"clockWise\";\r\n        minutesHand.startWidth = 3;\r\n        minutesHand.endWidth = 3;\r\n        minutesHand.radius = am4core.percent(78);\r\n        minutesHand.zIndex = 2;\r\n        \r\n        chart.cursor.events.on(\"cursorpositionchanged\", function (event) {\r\n           var value = dateAxis.positionToValue(event.target.xPosition)\r\n           var date = new Date(value);\r\n           var hours = date.getHours();\r\n           var minutes = date.getMinutes();\r\n           // set hours\r\n           hourHand.showValue(hours + minutes / 60, 0);\r\n           // set minutes\r\n           minutesHand.showValue(12 * minutes/ 60, 0);       \r\n        })\r\n      return () => {\r\n        chart.dispose();\r\n      };\r\n    },[props.btnname,props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Restriction Policies\"\r\n          subheader={props.title}\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent id=\"countrypolicies\" style={{ width: \"100%\", height: \"500px\"}}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n\r\n  function PolicyIndex(props) {\r\n    const chart = useRef(null);\r\n    const classes = useStyles();\r\n    let itemtitle=''\r\n    console.log(`In malefemale: ${JSON.stringify(props.data)}`)\r\n    if (props.btnname==='Confirmed') {\r\n     itemtitle =\"Covid Confirmed Cases Trend\"\r\n    } else if(props.btnname==='Recovered'){\r\n     itemtitle=\"Covid Recovered Cases Trend\"\r\n    } else {\r\n     itemtitle=\"Covid Death Cases Trend\"\r\n    }\r\n    useLayoutEffect(() => {\r\n       \r\nvar mainContainer = am4core.create(\"PolicyIndex\", am4core.Container);\r\nmainContainer.width = am4core.percent(100);\r\nmainContainer.height = am4core.percent(100);\r\nmainContainer.layout = \"horizontal\";\r\nmainContainer.logo.height =  -15000; \r\nvar usData = props.data;\r\n\r\nvar maleChart = mainContainer.createChild(am4charts.XYChart);\r\nmaleChart.paddingRight = 0;\r\n// maleChart.data = JSON.parse(JSON.stringify(usData));\r\nmaleChart.data=usData\r\nconsole.log(`JSON.parse(JSON.stringify(usData)) : ${JSON.parse(JSON.stringify(usData))}`)\r\n// Create axes\r\nvar maleCategoryAxis = maleChart.yAxes.push(new am4charts.CategoryAxis());\r\n// let maleCategoryAxis = maleChart.yAxes.push(new am4charts.DateAxis());\r\n\r\nmaleCategoryAxis.dataFields.category = \"date\";\r\nmaleCategoryAxis.renderer.grid.template.location = 0;\r\nmaleCategoryAxis.renderer.inversed = false;\r\nmaleCategoryAxis.renderer.minGridDistance = 15;\r\n\r\nvar maleValueAxis = maleChart.xAxes.push(new am4charts.ValueAxis());\r\nmaleValueAxis.renderer.inversed = true;\r\nmaleValueAxis.min = 0;\r\nmaleValueAxis.max = 1;\r\nmaleValueAxis.strictMinMax = true;\r\n\r\nmaleCategoryAxis.dateFormatter = new am4core.DateFormatter();\r\nmaleCategoryAxis.dateFormatter.dateFormat  = \"d MMM, yyyy\";\r\n// maleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// maleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\n\r\n// Create series\r\nvar maleSeries = maleChart.series.push(new am4charts.ColumnSeries());\r\nmaleSeries.dataFields.valueX = \"india\";\r\n// maleSeries.dataFields.valueXShow = \"percent\";\r\n// maleSeries.calculatePercent = true;\r\nmaleSeries.dataFields.categoryY = \"date\";\r\n// maleSeries.interpolationDuration = 1000;\r\nmaleSeries.columns.template.tooltipText = \"India: {valueX}\";\r\n//maleSeries.sequencedInterpolation = true;\r\n\r\n\r\nvar femaleChart = mainContainer.createChild(am4charts.XYChart);\r\nfemaleChart.paddingLeft = 0;\r\n// femaleChart.data = JSON.parse(JSON.stringify(usData));\r\nfemaleChart.data= usData\r\n// Create axes\r\nvar femaleCategoryAxis = femaleChart.yAxes.push(new am4charts.CategoryAxis());\r\nfemaleCategoryAxis.renderer.opposite = true;\r\nfemaleCategoryAxis.dataFields.category = \"date\";\r\nfemaleCategoryAxis.renderer.grid.template.location = 0;\r\nfemaleCategoryAxis.renderer.minGridDistance = 15;\r\nfemaleCategoryAxis.renderer.inversed=false;\r\nvar femaleValueAxis = femaleChart.xAxes.push(new am4charts.ValueAxis());\r\nfemaleValueAxis.min = 0;\r\nfemaleValueAxis.max = 1;\r\nfemaleValueAxis.strictMinMax = true;\r\n// femaleValueAxis.numberFormatter = new am4core.NumberFormatter();\r\n// femaleValueAxis.numberFormatter.numberFormat = \"#.#'%'\";\r\nfemaleValueAxis.renderer.minLabelPosition = 0.01;\r\n\r\n// Create series\r\nvar femaleSeries = femaleChart.series.push(new am4charts.ColumnSeries());\r\nfemaleSeries.dataFields.valueX = \"telangana\";\r\n// femaleSeries.dataFields.valueXShow = \"percent\";\r\n// femaleSeries.calculatePercent = true;\r\nfemaleSeries.fill = femaleChart.colors.getIndex(4);\r\nfemaleSeries.stroke = femaleSeries.fill;\r\n//femaleSeries.sequencedInterpolation = true;\r\nfemaleSeries.columns.template.tooltipText = \"Telangana: {valueX}\";\r\nfemaleSeries.dataFields.categoryY = \"date\";\r\n// femaleSeries.interpolationDuration = 1000;\r\n\r\n  \r\n      return () => {\r\n        mainContainer.dispose();\r\n      };\r\n    },[props.data] );\r\n  \r\n    return (\r\n  \r\n    <div>\r\n   <Card className={classes.root}>\r\n  \r\n   <CardHeader className={classes.header}\r\n    // style={{Color: \"#000\", Background: \"blue\"}}\r\n          title=\"Policy Index\"\r\n          subheader=\"Lesser the value better\"\r\n        />\r\n   \r\n   <Divider />\r\n      <CardContent  id=\"PolicyIndex\" style={{ width: \"100%\", height: \"500px\" }}/> \r\n      </Card>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  ","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Dashboard from './Dashboard'\r\nimport Page1 from './Page1'\r\nimport Page2 from './Page2'\r\nimport SideBar from './sideBar'\r\nimport Footer from './footer'\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport CountryPolicies from './CountryPolicies';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(0),\r\n    paddingBottom: theme.spacing(4),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <SideBar />\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Switch>\r\n              <Route exact path=\"/\" exact render={() => <Redirect to=\"/Dashboard\" />} />\r\n              <Route exact path=\"/Dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/Mobility\" component={Page1} />\r\n              <Route exact path=\"/Sentiment\" component={Page2} />\r\n              <Route exact path=\"/Policies\" component={CountryPolicies} />\r\n            </Switch>\r\n            <Footer />\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n\r\n  // uri: 'http://localhost:8080/graphql'\r\n  // uri:  'http://hfa-backend-hfa.statwb-dev.eu.novartis.net/graphql'\r\n  uri:'http://covid-backend-back-to-office-analytics.statwb-dev.eu.novartis.net/grqphql'\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n})\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ApolloProvider client={client}>\r\n      <React.Fragment>\r\n        <React.StrictMode>\r\n          <App />\r\n        </React.StrictMode>\r\n      </React.Fragment>\r\n    </ApolloProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}